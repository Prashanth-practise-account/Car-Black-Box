

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Nov 11 16:27:32 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4580 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92                           	psect	idataCOMRAM
    93   0027BC                     __pidataCOMRAM:
    94                           	callstack 0
    95                           
    96                           ;initializer for read_switches@once
    97   0027BC  01                 	db	1
    98                           
    99                           	psect	idataBANK0
   100   0026E0                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _message
   104   0026E0  F3                 	db	low STR_1
   105   0026E1  06                 	db	high STR_1
   106   0026E2  F0                 	db	low STR_2
   107   0026E3  06                 	db	high STR_2
   108   0026E4  F6                 	db	low STR_3
   109   0026E5  06                 	db	high STR_3
   110   0026E6  E1                 	db	low STR_4
   111   0026E7  06                 	db	high STR_4
   112   0026E8  E4                 	db	low STR_5
   113   0026E9  06                 	db	high STR_5
   114   0026EA  E7                 	db	low STR_6
   115   0026EB  06                 	db	high STR_6
   116   0026EC  EA                 	db	low STR_7
   117   0026ED  06                 	db	high STR_7
   118   0026EE  ED                 	db	low STR_8
   119   0026EF  06                 	db	high STR_8
   120   0026F0  DE                 	db	low STR_9
   121   0026F1  06                 	db	high STR_9
   122                           
   123                           ;initializer for _menu
   124   0026F2  D2                 	db	low STR_10
   125   0026F3  06                 	db	high STR_10
   126   0026F4  C9                 	db	low STR_11
   127   0026F5  06                 	db	high STR_11
   128   0026F6  A7                 	db	low STR_12
   129   0026F7  06                 	db	high STR_12
   130   0026F8  BF                 	db	low STR_13
   131   0026F9  06                 	db	high STR_13
   132   000000                     _RCREG	set	4014
   133   000000                     _TXREG	set	4013
   134   000000                     _SPBRG	set	4015
   135   000000                     _SSPADD	set	4040
   136   000000                     _SSPCON1	set	4038
   137   000000                     _ADRESL	set	4035
   138   000000                     _ADRESH	set	4036
   139   000000                     _BRG16	set	32195
   140   000000                     _ACKSTAT	set	32302
   141   000000                     _CKE	set	32318
   142   000000                     _GODONE	set	32273
   143   000000                     _RBPU	set	32655
   144   000000                     _ADCON0	set	4034
   145   000000                     _PORTBbits	set	3969
   146   000000                     _TRISD	set	3989
   147   000000                     _RCIF	set	31989
   148   000000                     _TXIF	set	31988
   149   000000                     _CREN	set	32092
   150   000000                     _RX9	set	32094
   151   000000                     _BRGH	set	32098
   152   000000                     _SENDB	set	32099
   153   000000                     _SYNC	set	32100
   154   000000                     _TXEN	set	32101
   155   000000                     _TRISC6	set	31910
   156   000000                     _TRISC7	set	31911
   157   000000                     _ACKEN	set	32300
   158   000000                     _ACKDT	set	32301
   159   000000                     _RCEN	set	32299
   160   000000                     _RSEN	set	32297
   161   000000                     _PEN	set	32298
   162   000000                     _SEN	set	32296
   163   000000                     _SMP	set	32319
   164   000000                     _TRISC4	set	31908
   165   000000                     _TRISC3	set	31907
   166   000000                     _GO	set	32273
   167   000000                     _ADON	set	32272
   168   000000                     _VCFG0	set	32268
   169   000000                     _VCFG1	set	32269
   170   000000                     _ADCS2	set	32258
   171   000000                     _ADCS1	set	32257
   172   000000                     _ADCS0	set	32256
   173   000000                     _ACQT0	set	32259
   174   000000                     _ACQT1	set	32260
   175   000000                     _ACQT2	set	32261
   176   000000                     _RD7	set	31775
   177   000000                     _RC0	set	31760
   178   000000                     _RC2	set	31762
   179   000000                     _PORTB	set	3969
   180   000000                     _RC1	set	31761
   181   000000                     _TRISB	set	3987
   182   000000                     _TRISC	set	3988
   183   000000                     _PORTD	set	3971
   184   000000                     _TRISD7	set	31919
   185   000000                     _ADCON1	set	4033
   186   000000                     _SSPIF	set	31987
   187   000000                     _ADFM	set	32263
   188   000000                     _SSPBUF	set	4041
   189   000000                     _BCLIF	set	32011
   190   000000                     _SPEN	set	32095
   191   000000                     _TX9	set	32102
   192                           
   193                           	psect	smallconst
   194   000600                     __psmallconst:
   195                           	callstack 0
   196   000600  00                 	db	0
   197   000601                     STR_29:
   198   000601  48                 	db	72	;'H'
   199   000602  48                 	db	72	;'H'
   200   000603  3A                 	db	58	;':'
   201   000604  4D                 	db	77	;'M'
   202   000605  4D                 	db	77	;'M'
   203   000606  3A                 	db	58	;':'
   204   000607  53                 	db	83	;'S'
   205   000608  53                 	db	83	;'S'
   206   000609  20                 	db	32
   207   00060A  20                 	db	32
   208   00060B  20                 	db	32
   209   00060C  20                 	db	32
   210   00060D  20                 	db	32
   211   00060E  20                 	db	32
   212   00060F  20                 	db	32
   213   000610  20                 	db	32
   214   000611  20                 	db	32
   215   000612  20                 	db	32
   216   000613  20                 	db	32
   217   000614  20                 	db	32
   218   000615  00                 	db	0
   219   000616                     STR_15:
   220   000616  20                 	db	32
   221   000617  20                 	db	32
   222   000618  20                 	db	32
   223   000619  20                 	db	32
   224   00061A  20                 	db	32
   225   00061B  20                 	db	32
   226   00061C  20                 	db	32
   227   00061D  20                 	db	32
   228   00061E  20                 	db	32
   229   00061F  20                 	db	32
   230   000620  20                 	db	32
   231   000621  20                 	db	32
   232   000622  20                 	db	32
   233   000623  20                 	db	32
   234   000624  20                 	db	32
   235   000625  20                 	db	32
   236   000626  20                 	db	32
   237   000627  20                 	db	32
   238   000628  00                 	db	0
   239   000629                     STR_25:
   240   000629  20                 	db	32
   241   00062A  20                 	db	32
   242   00062B  54                 	db	84	;'T'
   243   00062C  4F                 	db	79	;'O'
   244   00062D  20                 	db	32
   245   00062E  44                 	db	68	;'D'
   246   00062F  4F                 	db	79	;'O'
   247   000630  57                 	db	87	;'W'
   248   000631  4E                 	db	78	;'N'
   249   000632  4C                 	db	76	;'L'
   250   000633  4F                 	db	79	;'O'
   251   000634  41                 	db	65	;'A'
   252   000635  44                 	db	68	;'D'
   253   000636  20                 	db	32
   254   000637  3A                 	db	58	;':'
   255   000638  28                 	db	40
   256   000639  20                 	db	32
   257   00063A  00                 	db	0
   258   00063B                     STR_18:
   259   00063B  20                 	db	32
   260   00063C  20                 	db	32
   261   00063D  54                 	db	84	;'T'
   262   00063E  4F                 	db	79	;'O'
   263   00063F  20                 	db	32
   264   000640  44                 	db	68	;'D'
   265   000641  49                 	db	73	;'I'
   266   000642  53                 	db	83	;'S'
   267   000643  50                 	db	80	;'P'
   268   000644  4C                 	db	76	;'L'
   269   000645  41                 	db	65	;'A'
   270   000646  59                 	db	89	;'Y'
   271   000647  20                 	db	32
   272   000648  3A                 	db	58	;':'
   273   000649  28                 	db	40
   274   00064A  20                 	db	32
   275   00064B  00                 	db	0
   276   00064C                     STR_22:
   277   00064C  43                 	db	67	;'C'
   278   00064D  6C                 	db	108	;'l'
   279   00064E  65                 	db	101	;'e'
   280   00064F  61                 	db	97	;'a'
   281   000650  72                 	db	114	;'r'
   282   000651  69                 	db	105	;'i'
   283   000652  6E                 	db	110	;'n'
   284   000653  67                 	db	103	;'g'
   285   000654  20                 	db	32
   286   000655  6C                 	db	108	;'l'
   287   000656  6F                 	db	111	;'o'
   288   000657  67                 	db	103	;'g'
   289   000658  73                 	db	115	;'s'
   290   000659  2E                 	db	46
   291   00065A  2E                 	db	46
   292   00065B  2E                 	db	46
   293   00065C  00                 	db	0
   294   00065D                     STR_14:
   295   00065D  20                 	db	32
   296   00065E  20                 	db	32
   297   00065F  54                 	db	84	;'T'
   298   000660  49                 	db	73	;'I'
   299   000661  4D                 	db	77	;'M'
   300   000662  45                 	db	69	;'E'
   301   000663  20                 	db	32
   302   000664  20                 	db	32
   303   000665  20                 	db	32
   304   000666  20                 	db	32
   305   000667  45                 	db	69	;'E'
   306   000668  56                 	db	86	;'V'
   307   000669  20                 	db	32
   308   00066A  20                 	db	32
   309   00066B  53                 	db	83	;'S'
   310   00066C  50                 	db	80	;'P'
   311   00066D  00                 	db	0
   312   00066E                     STR_27:
   313   00066E  54                 	db	84	;'T'
   314   00066F  68                 	db	104	;'h'
   315   000670  72                 	db	114	;'r'
   316   000671  6F                 	db	111	;'o'
   317   000672  75                 	db	117	;'u'
   318   000673  67                 	db	103	;'g'
   319   000674  68                 	db	104	;'h'
   320   000675  20                 	db	32
   321   000676  55                 	db	85	;'U'
   322   000677  41                 	db	65	;'A'
   323   000678  52                 	db	82	;'R'
   324   000679  54                 	db	84	;'T'
   325   00067A  2E                 	db	46
   326   00067B  2E                 	db	46
   327   00067C  00                 	db	0
   328   00067D                     STR_21:
   329   00067D  23                 	db	35
   330   00067E  20                 	db	32
   331   00067F  56                 	db	86	;'V'
   332   000680  49                 	db	73	;'I'
   333   000681  45                 	db	69	;'E'
   334   000682  57                 	db	87	;'W'
   335   000683  20                 	db	32
   336   000684  4C                 	db	76	;'L'
   337   000685  4F                 	db	79	;'O'
   338   000686  47                 	db	71	;'G'
   339   000687  20                 	db	32
   340   000688  3A                 	db	58	;':'
   341   000689  20                 	db	32
   342   00068A  00                 	db	0
   343   00068B                     STR_26:
   344   00068B  44                 	db	68	;'D'
   345   00068C  6F                 	db	111	;'o'
   346   00068D  77                 	db	119	;'w'
   347   00068E  6E                 	db	110	;'n'
   348   00068F  6C                 	db	108	;'l'
   349   000690  6F                 	db	111	;'o'
   350   000691  61                 	db	97	;'a'
   351   000692  64                 	db	100	;'d'
   352   000693  69                 	db	105	;'i'
   353   000694  6E                 	db	110	;'n'
   354   000695  67                 	db	103	;'g'
   355   000696  2E                 	db	46
   356   000697  2E                 	db	46
   357   000698  00                 	db	0
   358   000699                     STR_23:
   359   000699  4A                 	db	74	;'J'
   360   00069A  75                 	db	117	;'u'
   361   00069B  73                 	db	115	;'s'
   362   00069C  74                 	db	116	;'t'
   363   00069D  20                 	db	32
   364   00069E  61                 	db	97	;'a'
   365   00069F  20                 	db	32
   366   0006A0  6D                 	db	109	;'m'
   367   0006A1  69                 	db	105	;'i'
   368   0006A2  6E                 	db	110	;'n'
   369   0006A3  75                 	db	117	;'u'
   370   0006A4  74                 	db	116	;'t'
   371   0006A5  65                 	db	101	;'e'
   372   0006A6  00                 	db	0
   373   0006A7                     STR_12:
   374   0006A7  44                 	db	68	;'D'
   375   0006A8  6F                 	db	111	;'o'
   376   0006A9  77                 	db	119	;'w'
   377   0006AA  6E                 	db	110	;'n'
   378   0006AB  6C                 	db	108	;'l'
   379   0006AC  6F                 	db	111	;'o'
   380   0006AD  61                 	db	97	;'a'
   381   0006AE  64                 	db	100	;'d'
   382   0006AF  20                 	db	32
   383   0006B0  4C                 	db	76	;'L'
   384   0006B1  6F                 	db	111	;'o'
   385   0006B2  67                 	db	103	;'g'
   386   0006B3  00                 	db	0
   387   0006B4                     STR_17:
   388   0006B4  4E                 	db	78	;'N'
   389   0006B5  4F                 	db	79	;'O'
   390   0006B6  20                 	db	32
   391   0006B7  4C                 	db	76	;'L'
   392   0006B8  4F                 	db	79	;'O'
   393   0006B9  47                 	db	71	;'G'
   394   0006BA  53                 	db	83	;'S'
   395   0006BB  20                 	db	32
   396   0006BC  20                 	db	32
   397   0006BD  20                 	db	32
   398   0006BE  00                 	db	0
   399   0006BF                     STR_13:
   400   0006BF  43                 	db	67	;'C'
   401   0006C0  6C                 	db	108	;'l'
   402   0006C1  65                 	db	101	;'e'
   403   0006C2  61                 	db	97	;'a'
   404   0006C3  72                 	db	114	;'r'
   405   0006C4  20                 	db	32
   406   0006C5  4C                 	db	76	;'L'
   407   0006C6  6F                 	db	111	;'o'
   408   0006C7  67                 	db	103	;'g'
   409   0006C8  00                 	db	0
   410   0006C9                     STR_11:
   411   0006C9  53                 	db	83	;'S'
   412   0006CA  65                 	db	101	;'e'
   413   0006CB  74                 	db	116	;'t'
   414   0006CC  20                 	db	32
   415   0006CD  54                 	db	84	;'T'
   416   0006CE  69                 	db	105	;'i'
   417   0006CF  6D                 	db	109	;'m'
   418   0006D0  65                 	db	101	;'e'
   419   0006D1  00                 	db	0
   420   0006D2                     STR_10:
   421   0006D2  56                 	db	86	;'V'
   422   0006D3  69                 	db	105	;'i'
   423   0006D4  65                 	db	101	;'e'
   424   0006D5  77                 	db	119	;'w'
   425   0006D6  20                 	db	32
   426   0006D7  4C                 	db	76	;'L'
   427   0006D8  6F                 	db	111	;'o'
   428   0006D9  67                 	db	103	;'g'
   429   0006DA  00                 	db	0
   430   0006DB                     STR_28:
   431   0006DB  0A                 	db	10
   432   0006DC  0D                 	db	13
   433   0006DD  00                 	db	0
   434   0006DE                     STR_9:
   435   0006DE  43                 	db	67	;'C'
   436   0006DF  20                 	db	32
   437   0006E0  00                 	db	0
   438   0006E1                     STR_4:
   439   0006E1  47                 	db	71	;'G'
   440   0006E2  31                 	db	49	;'1'
   441   0006E3  00                 	db	0
   442   0006E4                     STR_5:
   443   0006E4  47                 	db	71	;'G'
   444   0006E5  32                 	db	50	;'2'
   445   0006E6  00                 	db	0
   446   0006E7                     STR_6:
   447   0006E7  47                 	db	71	;'G'
   448   0006E8  33                 	db	51	;'3'
   449   0006E9  00                 	db	0
   450   0006EA                     STR_7:
   451   0006EA  47                 	db	71	;'G'
   452   0006EB  34                 	db	52	;'4'
   453   0006EC  00                 	db	0
   454   0006ED                     STR_8:
   455   0006ED  47                 	db	71	;'G'
   456   0006EE  35                 	db	53	;'5'
   457   0006EF  00                 	db	0
   458   0006F0                     STR_2:
   459   0006F0  47                 	db	71	;'G'
   460   0006F1  4E                 	db	78	;'N'
   461   0006F2  00                 	db	0
   462   0006F3                     STR_1:
   463   0006F3  4F                 	db	79	;'O'
   464   0006F4  4E                 	db	78	;'N'
   465   0006F5  00                 	db	0
   466   0006F6                     STR_3:
   467   0006F6  47                 	db	71	;'G'
   468   0006F7  52                 	db	82	;'R'
   469   0006F8  00                 	db	0
   470   0006F9  00                 	db	0	; dummy byte at the end
   471   000000                     
   472                           ; #config settings
   473                           
   474                           	psect	cinit
   475   002400                     __pcinit:
   476                           	callstack 0
   477   002400                     start_initialization:
   478                           	callstack 0
   479   002400                     __initialization:
   480                           	callstack 0
   481                           
   482                           ; Initialize objects allocated to BANK0 (26 bytes)
   483                           ; load TBLPTR registers with __pidataBANK0
   484   002400  0EE0               	movlw	low __pidataBANK0
   485   002402  6EF6               	movwf	tblptrl,c
   486   002404  0E26               	movlw	high __pidataBANK0
   487   002406  6EF7               	movwf	tblptrh,c
   488   002408  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   489   00240A  6EF8               	movwf	tblptru,c
   490   00240C  EE00  F060         	lfsr	0,__pdataBANK0
   491   002410  EE10 F01A          	lfsr	1,26
   492   002414                     copy_data0:
   493   002414  0009               	tblrd		*+
   494   002416  CFF5 FFEE          	movff	tablat,postinc0
   495   00241A  50E5               	movf	postdec1,w,c
   496   00241C  50E1               	movf	fsr1l,w,c
   497   00241E  E1FA               	bnz	copy_data0
   498                           
   499                           ; Initialize objects allocated to COMRAM (1 bytes)
   500                           ; load TBLPTR registers with __pidataCOMRAM
   501   002420  0EBC               	movlw	low __pidataCOMRAM
   502   002422  6EF6               	movwf	tblptrl,c
   503   002424  0E27               	movlw	high __pidataCOMRAM
   504   002426  6EF7               	movwf	tblptrh,c
   505   002428  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   506   00242A  6EF8               	movwf	tblptru,c
   507   00242C  0009               	tblrd		*+	;fetch initializer
   508   00242E  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   509                           
   510                           ; Clear objects allocated to BANK1 (180 bytes)
   511   002432  EE01  F000         	lfsr	0,__pbssBANK1
   512   002436  0EB4               	movlw	180
   513   002438                     clear_0:
   514   002438  6AEE               	clrf	postinc0,c
   515   00243A  06E8               	decf	wreg,f,c
   516   00243C  E1FD               	bnz	clear_0
   517                           
   518                           ; Clear objects allocated to BANK0 (24 bytes)
   519   00243E  EE00  F07A         	lfsr	0,__pbssBANK0
   520   002442  0E18               	movlw	24
   521   002444                     clear_1:
   522   002444  6AEE               	clrf	postinc0,c
   523   002446  06E8               	decf	wreg,f,c
   524   002448  E1FD               	bnz	clear_1
   525                           
   526                           ; Clear objects allocated to COMRAM (31 bytes)
   527   00244A  EE00  F03F         	lfsr	0,__pbssCOMRAM
   528   00244E  0E1F               	movlw	31
   529   002450                     clear_2:
   530   002450  6AEE               	clrf	postinc0,c
   531   002452  06E8               	decf	wreg,f,c
   532   002454  E1FD               	bnz	clear_2
   533   002456                     end_of_initialization:
   534                           	callstack 0
   535   002456                     __end_of__initialization:
   536                           	callstack 0
   537   002456  0E00               	movlw	low (__Lmediumconst shr (0+16))
   538   002458  6EF8               	movwf	tblptru,c
   539   00245A  0100               	movlb	0
   540   00245C  EF7D  F003         	goto	_main	;jump to C main() function
   541                           
   542                           	psect	bssCOMRAM
   543   00003F                     __pbssCOMRAM:
   544                           	callstack 0
   545   00003F                     _flag_count:
   546                           	callstack 0
   547   00003F                     	ds	2
   548   000041                     _menu_flag:
   549                           	callstack 0
   550   000041                     	ds	2
   551   000043                     _settime_flag:
   552                           	callstack 0
   553   000043                     	ds	2
   554   000045                     _view_flag:
   555                           	callstack 0
   556   000045                     	ds	2
   557   000047                     _add:
   558                           	callstack 0
   559   000047                     	ds	2
   560   000049                     _speed:
   561                           	callstack 0
   562   000049                     	ds	2
   563   00004B                     _field:
   564                           	callstack 0
   565   00004B                     	ds	2
   566   00004D                     _sec:
   567                           	callstack 0
   568   00004D                     	ds	2
   569   00004F                     _min:
   570                           	callstack 0
   571   00004F                     	ds	2
   572   000051                     _hour:
   573                           	callstack 0
   574   000051                     	ds	2
   575   000053                     _end:
   576                           	callstack 0
   577   000053                     	ds	2
   578   000055                     _star:
   579                           	callstack 0
   580   000055                     	ds	2
   581   000057                     _k:
   582                           	callstack 0
   583   000057                     	ds	2
   584   000059                     _j:
   585                           	callstack 0
   586   000059                     	ds	2
   587   00005B                     _i:
   588                           	callstack 0
   589   00005B                     	ds	2
   590   00005D                     read_switches@key:
   591                           	callstack 0
   592   00005D                     	ds	1
   593                           
   594                           	psect	dataCOMRAM
   595   00005E                     __pdataCOMRAM:
   596                           	callstack 0
   597   00005E                     read_switches@once:
   598                           	callstack 0
   599   00005E                     	ds	1
   600                           
   601                           	psect	bssBANK0
   602   00007A                     __pbssBANK0:
   603                           	callstack 0
   604   00007A                     _clock_reg:
   605                           	callstack 0
   606   00007A                     	ds	3
   607   00007D                     _key:
   608                           	callstack 0
   609   00007D                     	ds	2
   610   00007F                     _flag:
   611                           	callstack 0
   612   00007F                     	ds	2
   613   000081                     _clear_flag:
   614                           	callstack 0
   615   000081                     	ds	2
   616   000083                     _download_flag:
   617                           	callstack 0
   618   000083                     	ds	2
   619   000085                     _save_flag:
   620                           	callstack 0
   621   000085                     	ds	2
   622   000087                     _time_flag:
   623                           	callstack 0
   624   000087                     	ds	2
   625   000089                     _time:
   626                           	callstack 0
   627   000089                     	ds	9
   628                           
   629                           	psect	dataBANK0
   630   000060                     __pdataBANK0:
   631                           	callstack 0
   632   000060                     _message:
   633                           	callstack 0
   634   000060                     	ds	18
   635   000072                     _menu:
   636                           	callstack 0
   637   000072                     	ds	8
   638                           
   639                           	psect	bssBANK1
   640   000100                     __pbssBANK1:
   641                           	callstack 0
   642   000100                     _detail:
   643                           	callstack 0
   644   000100                     	ds	180
   645                           
   646                           	psect	cstackCOMRAM
   647   000001                     __pcstackCOMRAM:
   648                           	callstack 0
   649   000001                     ?_read_adc:
   650                           	callstack 0
   651   000001                     ?___wmul:
   652                           	callstack 0
   653   000001                     ?___awdiv:
   654                           	callstack 0
   655   000001                     ?___awmod:
   656                           	callstack 0
   657   000001                     ?___lwdiv:
   658                           	callstack 0
   659   000001                     clcd_write@control_bit:
   660                           	callstack 0
   661   000001                     read_switches@detection_type:
   662                           	callstack 0
   663   000001                     i2c_write@data:
   664                           	callstack 0
   665   000001                     putch@byte:
   666                           	callstack 0
   667   000001                     ___wmul@multiplier:
   668                           	callstack 0
   669   000001                     ___awdiv@dividend:
   670                           	callstack 0
   671   000001                     ___awmod@dividend:
   672                           	callstack 0
   673   000001                     ___lwdiv@dividend:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x0
   677   000001                     	ds	1
   678   000002                     clcd_write@byte:
   679                           	callstack 0
   680   000002                     read_ds1307@address:
   681                           	callstack 0
   682   000002                     read_external_eeprom@address:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x1
   686   000002                     	ds	1
   687   000003                     ??_init_clcd:
   688   000003                     ??_read_adc:
   689   000003                     read_ds1307@data:
   690                           	callstack 0
   691   000003                     read_external_eeprom@data:
   692                           	callstack 0
   693   000003                     ___wmul@multiplicand:
   694                           	callstack 0
   695   000003                     ___awdiv@divisor:
   696                           	callstack 0
   697   000003                     ___awmod@divisor:
   698                           	callstack 0
   699   000003                     ___lwdiv@divisor:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x2
   703   000003                     	ds	1
   704   000004                     
   705                           ; 1 bytes @ 0x3
   706   000004                     	ds	1
   707   000005                     ___awdiv@counter:
   708                           	callstack 0
   709   000005                     ___awmod@counter:
   710                           	callstack 0
   711   000005                     read_adc@reg_val:
   712                           	callstack 0
   713   000005                     ___wmul@product:
   714                           	callstack 0
   715   000005                     ___lwdiv@quotient:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x4
   719   000005                     	ds	1
   720   000006                     ___awdiv@sign:
   721                           	callstack 0
   722   000006                     ___awmod@sign:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x5
   726   000006                     	ds	1
   727   000007                     read_adc@channel:
   728                           	callstack 0
   729   000007                     ___lwdiv@counter:
   730                           	callstack 0
   731   000007                     clcd_print@data:
   732                           	callstack 0
   733   000007                     puts@s:
   734                           	callstack 0
   735   000007                     ___awdiv@quotient:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x6
   739   000007                     	ds	1
   740   000008                     calculate_speed@adc_reg_val:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x7
   744   000008                     	ds	1
   745   000009                     ??_reading_eeprom:
   746   000009                     clcd_print@addr:
   747                           	callstack 0
   748   000009                     clcd_putch@addr:
   749                           	callstack 0
   750   000009                     write_ds1307@data:
   751                           	callstack 0
   752   000009                     write_external_eeprom@data:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x8
   756   000009                     	ds	1
   757   00000A                     clcd_putch@data:
   758                           	callstack 0
   759   00000A                     write_ds1307@address:
   760                           	callstack 0
   761   00000A                     write_external_eeprom@wait:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x9
   765   00000A                     	ds	1
   766   00000B                     init_ds1307@dummy:
   767                           	callstack 0
   768   00000B                     reading_eeprom@add2:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0xA
   772   00000B                     	ds	1
   773   00000C                     write_external_eeprom@address:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0xB
   777   00000C                     	ds	1
   778   00000D                     ??_writing_eeprom:
   779   00000D                     reading_eeprom@main_index:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0xC
   783   00000D                     	ds	2
   784   00000F                     ??_check_matrix_keypad:
   785   00000F                     reading_eeprom@index:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0xE
   789   00000F                     	ds	3
   790   000012                     check_matrix_keypad@key:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x11
   794   000012                     	ds	1
   795   000013                     ??_main:
   796                           
   797                           ; 1 bytes @ 0x12
   798   000013                     	ds	8
   799   00001B                     main@adc_reg_val:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x1A
   803   00001B                     	ds	2
   804   00001D                     main@delay:
   805                           	callstack 0
   806                           
   807                           ; 8 bytes @ 0x1C
   808   00001D                     	ds	8
   809   000025                     main@delay_175:
   810                           	callstack 0
   811                           
   812                           ; 8 bytes @ 0x24
   813   000025                     	ds	8
   814   00002D                     main@it:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x2C
   818   00002D                     	ds	2
   819   00002F                     main@delay_178:
   820                           	callstack 0
   821                           
   822                           ; 8 bytes @ 0x2E
   823   00002F                     	ds	8
   824   000037                     main@delay_185:
   825                           	callstack 0
   826                           
   827                           ; 8 bytes @ 0x36
   828   000037                     	ds	8
   829                           
   830 ;;
   831 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   832 ;;
   833 ;; *************** function _main *****************
   834 ;; Defined at:
   835 ;;		line 338 in file "main.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  it              2   44[COMRAM] int 
   840 ;;  delay           8   28[COMRAM] unsigned long long 
   841 ;;  delay           8   54[COMRAM] unsigned long long 
   842 ;;  delay           8   46[COMRAM] unsigned long long 
   843 ;;  delay           8   36[COMRAM] unsigned long long 
   844 ;;  adc_reg_val     2   26[COMRAM] unsigned short 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   854 ;;      Params:         0       0       0       0       0       0       0
   855 ;;      Locals:        36       0       0       0       0       0       0
   856 ;;      Temps:          8       0       0       0       0       0       0
   857 ;;      Totals:        44       0       0       0       0       0       0
   858 ;;Total ram usage:       44 bytes
   859 ;; Hardware stack levels required when called: 6
   860 ;; This function calls:
   861 ;;		___awdiv
   862 ;;		___awmod
   863 ;;		___wmul
   864 ;;		_calculate_speed
   865 ;;		_check_matrix_keypad
   866 ;;		_clcd_print
   867 ;;		_clcd_putch
   868 ;;		_clcd_write
   869 ;;		_get_time
   870 ;;		_init_config
   871 ;;		_puts
   872 ;;		_read_adc
   873 ;;		_reading_eeprom
   874 ;; This function is called by:
   875 ;;		Startup code after reset
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text0
   880   0006FA                     __ptext0:
   881                           	callstack 0
   882   0006FA                     _main:
   883                           	callstack 25
   884   0006FA                     
   885                           ;main.c: 340:     unsigned short adc_reg_val;;main.c: 341:     init_config();
   886   0006FA  EC7D  F013         	call	_init_config	;wreg free
   887   0006FE                     l3166:
   888                           
   889                           ;main.c: 344:     {;main.c: 345:         check_matrix_keypad();
   890   0006FE  EC89  F008         	call	_check_matrix_keypad	;wreg free
   891   000702                     
   892                           ;main.c: 346:         adc_reg_val = read_adc(0x04);
   893   000702  0E04               	movlw	4
   894   000704  EC83  F012         	call	_read_adc
   895   000708  C001  F01B         	movff	?_read_adc,main@adc_reg_val
   896   00070C  C002  F01C         	movff	?_read_adc+1,main@adc_reg_val+1
   897   000710                     
   898                           ;main.c: 347:         calculate_speed(adc_reg_val);
   899   000710  C01B  F008         	movff	main@adc_reg_val,calculate_speed@adc_reg_val
   900   000714  C01C  F009         	movff	main@adc_reg_val+1,calculate_speed@adc_reg_val+1
   901   000718  ECA6  F012         	call	_calculate_speed	;wreg free
   902   00071C                     
   903                           ;main.c: 348:         get_time();
   904   00071C  ECCF  F011         	call	_get_time	;wreg free
   905   000720                     
   906                           ;main.c: 351:         if(menu_flag==0)
   907   000720  5041               	movf	_menu_flag^0,w,c
   908   000722  1042               	iorwf	(_menu_flag+1)^0,w,c
   909   000724  A4D8               	btfss	status,2,c
   910   000726  EF97  F003         	goto	u2791
   911   00072A  EF99  F003         	goto	u2790
   912   00072E                     u2791:
   913   00072E  EFE1  F003         	goto	l3188
   914   000732                     u2790:
   915   000732                     
   916                           ;main.c: 352:         {;main.c: 353:             clcd_write(0x01, 0);
   917   000732  0E00               	movlw	0
   918   000734  6E01               	movwf	clcd_write@control_bit^0,c
   919   000736  0E01               	movlw	1
   920   000738  ECE7  F012         	call	_clcd_write
   921   00073C                     
   922                           ;main.c: 354:             clcd_print("  TIME    EV  SP", (0x80 + (0)));
   923   00073C  0E5D               	movlw	low STR_14
   924   00073E  6E07               	movwf	clcd_print@data^0,c
   925   000740  0E06               	movlw	high STR_14
   926   000742  6E08               	movwf	(clcd_print@data+1)^0,c
   927   000744  0E80               	movlw	128
   928   000746  6E09               	movwf	clcd_print@addr^0,c
   929   000748  EC99  F011         	call	_clcd_print	;wreg free
   930   00074C                     
   931                           ;main.c: 355:             clcd_print(time, (0xC0 + (0)));
   932   00074C  0E89               	movlw	low _time
   933   00074E  6E07               	movwf	clcd_print@data^0,c
   934   000750  0E00               	movlw	high _time
   935   000752  6E08               	movwf	(clcd_print@data+1)^0,c
   936   000754  0EC0               	movlw	192
   937   000756  6E09               	movwf	clcd_print@addr^0,c
   938   000758  EC99  F011         	call	_clcd_print	;wreg free
   939   00075C                     
   940                           ;main.c: 356:             clcd_print(message[i], (0xC0 + (10)));
   941   00075C  90D8               	bcf	status,0,c
   942   00075E  345B               	rlcf	_i^0,w,c
   943   000760  6ED9               	movwf	fsr2l,c
   944   000762  345C               	rlcf	(_i+1)^0,w,c
   945   000764  6EDA               	movwf	fsr2h,c
   946   000766  0E60               	movlw	low _message
   947   000768  26D9               	addwf	fsr2l,f,c
   948   00076A  0E00               	movlw	high _message
   949   00076C  22DA               	addwfc	fsr2h,f,c
   950   00076E  CFDE F007          	movff	postinc2,clcd_print@data
   951   000772  CFDD F008          	movff	postdec2,clcd_print@data+1
   952   000776  0ECA               	movlw	202
   953   000778  6E09               	movwf	clcd_print@addr^0,c
   954   00077A  EC99  F011         	call	_clcd_print	;wreg free
   955   00077E                     
   956                           ;main.c: 357:             clcd_putch((speed % 10) + 48, (0xC0 + (15)));
   957   00077E  0ECF               	movlw	207
   958   000780  6E09               	movwf	clcd_putch@addr^0,c
   959   000782  C049  F001         	movff	_speed,___awmod@dividend
   960   000786  C04A  F002         	movff	_speed+1,___awmod@dividend+1
   961   00078A  0E00               	movlw	0
   962   00078C  6E04               	movwf	(___awmod@divisor+1)^0,c
   963   00078E  0E0A               	movlw	10
   964   000790  6E03               	movwf	___awmod@divisor^0,c
   965   000792  EC78  F010         	call	___awmod	;wreg free
   966   000796  5001               	movf	?___awmod^0,w,c
   967   000798  0F30               	addlw	48
   968   00079A  EC96  F013         	call	_clcd_putch
   969   00079E                     
   970                           ;main.c: 358:             clcd_putch((speed / 10) + 48, (0xC0 + (14)));
   971   00079E  0ECE               	movlw	206
   972   0007A0  6E09               	movwf	clcd_putch@addr^0,c
   973   0007A2  C049  F001         	movff	_speed,___awdiv@dividend
   974   0007A6  C04A  F002         	movff	_speed+1,___awdiv@dividend+1
   975   0007AA  0E00               	movlw	0
   976   0007AC  6E04               	movwf	(___awdiv@divisor+1)^0,c
   977   0007AE  0E0A               	movlw	10
   978   0007B0  6E03               	movwf	___awdiv@divisor^0,c
   979   0007B2  EC16  F010         	call	___awdiv	;wreg free
   980   0007B6  5001               	movf	?___awdiv^0,w,c
   981   0007B8  0F30               	addlw	48
   982   0007BA  EC96  F013         	call	_clcd_putch
   983                           
   984                           ;main.c: 359:         }
   985   0007BE  EF7F  F003         	goto	l3166
   986   0007C2                     l3188:
   987   0007C2  0441               	decf	_menu_flag^0,w,c
   988   0007C4  1042               	iorwf	(_menu_flag+1)^0,w,c
   989   0007C6  A4D8               	btfss	status,2,c
   990   0007C8  EFE8  F003         	goto	u2801
   991   0007CC  EFEA  F003         	goto	u2800
   992   0007D0                     u2801:
   993   0007D0  EF33  F004         	goto	l3202
   994   0007D4                     u2800:
   995   0007D4                     
   996                           ;main.c: 364:         {;main.c: 369:             clcd_print("                  ", (0x80 
      +                          + (0)));
   997   0007D4  0E16               	movlw	low STR_15
   998   0007D6  6E07               	movwf	clcd_print@data^0,c
   999   0007D8  0E06               	movlw	high STR_15
  1000   0007DA  6E08               	movwf	(clcd_print@data+1)^0,c
  1001   0007DC  0E80               	movlw	128
  1002   0007DE  6E09               	movwf	clcd_print@addr^0,c
  1003   0007E0  EC99  F011         	call	_clcd_print	;wreg free
  1004                           
  1005                           ;main.c: 370:             clcd_print("                  ", (0xC0 + (0)));
  1006   0007E4  0E16               	movlw	low STR_15
  1007   0007E6  6E07               	movwf	clcd_print@data^0,c
  1008   0007E8  0E06               	movlw	high STR_15
  1009   0007EA  6E08               	movwf	(clcd_print@data+1)^0,c
  1010   0007EC  0EC0               	movlw	192
  1011   0007EE  6E09               	movwf	clcd_print@addr^0,c
  1012   0007F0  EC99  F011         	call	_clcd_print	;wreg free
  1013   0007F4                     
  1014                           ;main.c: 371:             if(star==0)
  1015   0007F4  5055               	movf	_star^0,w,c
  1016   0007F6  1056               	iorwf	(_star+1)^0,w,c
  1017   0007F8  A4D8               	btfss	status,2,c
  1018   0007FA  EF01  F004         	goto	u2811
  1019   0007FE  EF03  F004         	goto	u2810
  1020   000802                     u2811:
  1021   000802  EF0A  F004         	goto	l3196
  1022   000806                     u2810:
  1023   000806                     
  1024                           ;main.c: 372:                 clcd_putch('*', (0x80 + (0)));
  1025   000806  0E80               	movlw	128
  1026   000808  6E09               	movwf	clcd_putch@addr^0,c
  1027   00080A  0E2A               	movlw	42
  1028   00080C  EC96  F013         	call	_clcd_putch
  1029   000810  EF0F  F004         	goto	l3198
  1030   000814                     l3196:
  1031                           
  1032                           ;main.c: 374:                 clcd_putch('*', (0xC0 + (0)));
  1033   000814  0EC0               	movlw	192
  1034   000816  6E09               	movwf	clcd_putch@addr^0,c
  1035   000818  0E2A               	movlw	42
  1036   00081A  EC96  F013         	call	_clcd_putch
  1037   00081E                     l3198:
  1038                           
  1039                           ;main.c: 376:             clcd_print(menu[k], (0x80 + (2)));
  1040   00081E  90D8               	bcf	status,0,c
  1041   000820  3457               	rlcf	_k^0,w,c
  1042   000822  6ED9               	movwf	fsr2l,c
  1043   000824  3458               	rlcf	(_k+1)^0,w,c
  1044   000826  6EDA               	movwf	fsr2h,c
  1045   000828  0E72               	movlw	low _menu
  1046   00082A  26D9               	addwf	fsr2l,f,c
  1047   00082C  0E00               	movlw	high _menu
  1048   00082E  22DA               	addwfc	fsr2h,f,c
  1049   000830  CFDE F007          	movff	postinc2,clcd_print@data
  1050   000834  CFDD F008          	movff	postdec2,clcd_print@data+1
  1051   000838  0E82               	movlw	130
  1052   00083A  6E09               	movwf	clcd_print@addr^0,c
  1053   00083C  EC99  F011         	call	_clcd_print	;wreg free
  1054   000840                     
  1055                           ;main.c: 377:             clcd_print(menu[k+1], (0xC0 + (2)));
  1056   000840  90D8               	bcf	status,0,c
  1057   000842  3457               	rlcf	_k^0,w,c
  1058   000844  6ED9               	movwf	fsr2l,c
  1059   000846  3458               	rlcf	(_k+1)^0,w,c
  1060   000848  6EDA               	movwf	fsr2h,c
  1061   00084A  0E74               	movlw	low (_menu+2)
  1062   00084C  26D9               	addwf	fsr2l,f,c
  1063   00084E  0E00               	movlw	high (_menu+2)
  1064   000850  22DA               	addwfc	fsr2h,f,c
  1065   000852  CFDE F007          	movff	postinc2,clcd_print@data
  1066   000856  CFDD F008          	movff	postdec2,clcd_print@data+1
  1067   00085A  0EC2               	movlw	194
  1068   00085C  6E09               	movwf	clcd_print@addr^0,c
  1069   00085E  EC99  F011         	call	_clcd_print	;wreg free
  1070                           
  1071                           ;main.c: 378:         }
  1072   000862  EF7F  F003         	goto	l3166
  1073   000866                     l3202:
  1074   000866  0445               	decf	_view_flag^0,w,c
  1075   000868  1046               	iorwf	(_view_flag+1)^0,w,c
  1076   00086A  A4D8               	btfss	status,2,c
  1077   00086C  EF3A  F004         	goto	u2821
  1078   000870  EF3C  F004         	goto	u2820
  1079   000874                     u2821:
  1080   000874  EFD4  F004         	goto	l3236
  1081   000878                     u2820:
  1082   000878                     
  1083                           ;main.c: 382:         {;main.c: 383:             if(add==0 && flag_count==0)
  1084   000878  5047               	movf	_add^0,w,c
  1085   00087A  1048               	iorwf	(_add+1)^0,w,c
  1086   00087C  A4D8               	btfss	status,2,c
  1087   00087E  EF43  F004         	goto	u2831
  1088   000882  EF45  F004         	goto	u2830
  1089   000886                     u2831:
  1090   000886  EFA2  F004         	goto	l3226
  1091   00088A                     u2830:
  1092   00088A  503F               	movf	_flag_count^0,w,c
  1093   00088C  1040               	iorwf	(_flag_count+1)^0,w,c
  1094   00088E  A4D8               	btfss	status,2,c
  1095   000890  EF4C  F004         	goto	u2841
  1096   000894  EF4E  F004         	goto	u2840
  1097   000898                     u2841:
  1098   000898  EFA2  F004         	goto	l3226
  1099   00089C                     u2840:
  1100   00089C                     
  1101                           ;main.c: 384:             {;main.c: 385:                 unsigned long long int delay=0;
  1102   00089C  EE20  F01D         	lfsr	2,main@delay
  1103   0008A0  0E07               	movlw	7
  1104   0008A2                     u2851:
  1105   0008A2  6ADE               	clrf	postinc2,c
  1106   0008A4  06E8               	decf	wreg,f,c
  1107   0008A6  E2FD               	bc	u2851
  1108   0008A8                     
  1109                           ;main.c: 386:                 clcd_print("NO LOGS   ", (0x80 + (0)));
  1110   0008A8  0EB4               	movlw	low STR_17
  1111   0008AA  6E07               	movwf	clcd_print@data^0,c
  1112   0008AC  0E06               	movlw	high STR_17
  1113   0008AE  6E08               	movwf	(clcd_print@data+1)^0,c
  1114   0008B0  0E80               	movlw	128
  1115   0008B2  6E09               	movwf	clcd_print@addr^0,c
  1116   0008B4  EC99  F011         	call	_clcd_print	;wreg free
  1117   0008B8                     
  1118                           ;main.c: 387:                 clcd_print("  TO DISPLAY :( ", (0xC0 + (0)));
  1119   0008B8  0E3B               	movlw	low STR_18
  1120   0008BA  6E07               	movwf	clcd_print@data^0,c
  1121   0008BC  0E06               	movlw	high STR_18
  1122   0008BE  6E08               	movwf	(clcd_print@data+1)^0,c
  1123   0008C0  0EC0               	movlw	192
  1124   0008C2  6E09               	movwf	clcd_print@addr^0,c
  1125   0008C4  EC99  F011         	call	_clcd_print	;wreg free
  1126   0008C8                     l3214:
  1127   0008C8  C01D  F013         	movff	main@delay,??_main
  1128   0008CC  C01E  F014         	movff	main@delay+1,??_main+1
  1129   0008D0  C01F  F015         	movff	main@delay+2,??_main+2
  1130   0008D4  C020  F016         	movff	main@delay+3,??_main+3
  1131   0008D8  C021  F017         	movff	main@delay+4,??_main+4
  1132   0008DC  C022  F018         	movff	main@delay+5,??_main+5
  1133   0008E0  C023  F019         	movff	main@delay+6,??_main+6
  1134   0008E4  C024  F01A         	movff	main@delay+7,??_main+7
  1135   0008E8  2A1D               	incf	main@delay^0,f,c
  1136   0008EA  0E00               	movlw	0
  1137   0008EC  221E               	addwfc	(main@delay+1)^0,f,c
  1138   0008EE  221F               	addwfc	(main@delay+2)^0,f,c
  1139   0008F0  2220               	addwfc	(main@delay+3)^0,f,c
  1140   0008F2  2221               	addwfc	(main@delay+4)^0,f,c
  1141   0008F4  2222               	addwfc	(main@delay+5)^0,f,c
  1142   0008F6  2223               	addwfc	(main@delay+6)^0,f,c
  1143   0008F8  2224               	addwfc	(main@delay+7)^0,f,c
  1144   0008FA  501A               	movf	(??_main+7)^0,w,c
  1145   0008FC  1019               	iorwf	(??_main+6)^0,w,c
  1146   0008FE  1018               	iorwf	(??_main+5)^0,w,c
  1147   000900  1017               	iorwf	(??_main+4)^0,w,c
  1148   000902  1016               	iorwf	(??_main+3)^0,w,c
  1149   000904  E10D               	bnz	u2860
  1150   000906  0EE0               	movlw	224
  1151   000908  5C13               	subwf	??_main^0,w,c
  1152   00090A  0E93               	movlw	147
  1153   00090C  5814               	subwfb	(??_main+1)^0,w,c
  1154   00090E  0E04               	movlw	4
  1155   000910  5815               	subwfb	(??_main+2)^0,w,c
  1156   000912  A0D8               	btfss	status,0,c
  1157   000914  EF8E  F004         	goto	u2861
  1158   000918  EF90  F004         	goto	u2860
  1159   00091C                     u2861:
  1160   00091C  EF64  F004         	goto	l3214
  1161   000920                     u2860:
  1162   000920                     
  1163                           ;main.c: 390:                 menu_flag=1;
  1164   000920  0E00               	movlw	0
  1165   000922  6E42               	movwf	(_menu_flag+1)^0,c
  1166   000924  0E01               	movlw	1
  1167   000926  6E41               	movwf	_menu_flag^0,c
  1168   000928                     
  1169                           ;main.c: 391:                 k=0;
  1170   000928  0E00               	movlw	0
  1171   00092A  6E58               	movwf	(_k+1)^0,c
  1172   00092C  0E00               	movlw	0
  1173   00092E  6E57               	movwf	_k^0,c
  1174   000930                     
  1175                           ;main.c: 392:                 star=0;
  1176   000930  0E00               	movlw	0
  1177   000932  6E56               	movwf	(_star+1)^0,c
  1178   000934  0E00               	movlw	0
  1179   000936  6E55               	movwf	_star^0,c
  1180   000938                     
  1181                           ;main.c: 393:                 view_flag=0;
  1182   000938  0E00               	movlw	0
  1183   00093A  6E46               	movwf	(_view_flag+1)^0,c
  1184   00093C  0E00               	movlw	0
  1185   00093E  6E45               	movwf	_view_flag^0,c
  1186                           
  1187                           ;main.c: 394:             }
  1188   000940  EF7F  F003         	goto	l3166
  1189   000944                     l3226:
  1190                           
  1191                           ;main.c: 396:             {;main.c: 397:                 reading_eeprom();
  1192   000944  ECE2  F00C         	call	_reading_eeprom	;wreg free
  1193   000948                     
  1194                           ;main.c: 398:                 clcd_print("                  ", (0x80 + (0)));
  1195   000948  0E16               	movlw	low STR_15
  1196   00094A  6E07               	movwf	clcd_print@data^0,c
  1197   00094C  0E06               	movlw	high STR_15
  1198   00094E  6E08               	movwf	(clcd_print@data+1)^0,c
  1199   000950  0E80               	movlw	128
  1200   000952  6E09               	movwf	clcd_print@addr^0,c
  1201   000954  EC99  F011         	call	_clcd_print	;wreg free
  1202   000958                     
  1203                           ;main.c: 399:                 clcd_print("                  ", (0xC0 + (0)));
  1204   000958  0E16               	movlw	low STR_15
  1205   00095A  6E07               	movwf	clcd_print@data^0,c
  1206   00095C  0E06               	movlw	high STR_15
  1207   00095E  6E08               	movwf	(clcd_print@data+1)^0,c
  1208   000960  0EC0               	movlw	192
  1209   000962  6E09               	movwf	clcd_print@addr^0,c
  1210   000964  EC99  F011         	call	_clcd_print	;wreg free
  1211   000968                     
  1212                           ;main.c: 400:                 clcd_print("# VIEW LOG : ", (0x80 + (0)));
  1213   000968  0E7D               	movlw	low STR_21
  1214   00096A  6E07               	movwf	clcd_print@data^0,c
  1215   00096C  0E06               	movlw	high STR_21
  1216   00096E  6E08               	movwf	(clcd_print@data+1)^0,c
  1217   000970  0E80               	movlw	128
  1218   000972  6E09               	movwf	clcd_print@addr^0,c
  1219   000974  EC99  F011         	call	_clcd_print	;wreg free
  1220   000978                     
  1221                           ;main.c: 401:                 clcd_print(detail[j], (0xC0 + (0)));
  1222   000978  C059  F001         	movff	_j,___wmul@multiplier
  1223   00097C  C05A  F002         	movff	_j+1,___wmul@multiplier+1
  1224   000980  0E00               	movlw	0
  1225   000982  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1226   000984  0E12               	movlw	18
  1227   000986  6E03               	movwf	___wmul@multiplicand^0,c
  1228   000988  EC2E  F013         	call	___wmul	;wreg free
  1229   00098C  0E00               	movlw	low _detail
  1230   00098E  2401               	addwf	?___wmul^0,w,c
  1231   000990  6E07               	movwf	clcd_print@data^0,c
  1232   000992  0E01               	movlw	high _detail
  1233   000994  2002               	addwfc	(?___wmul+1)^0,w,c
  1234   000996  6E08               	movwf	(clcd_print@data+1)^0,c
  1235   000998  0EC0               	movlw	192
  1236   00099A  6E09               	movwf	clcd_print@addr^0,c
  1237   00099C  EC99  F011         	call	_clcd_print	;wreg free
  1238   0009A0  EF7F  F003         	goto	l3166
  1239   0009A4                     l188:
  1240                           
  1241                           ;main.c: 403:         }
  1242   0009A4  EF7F  F003         	goto	l3166
  1243   0009A8                     l3236:
  1244   0009A8  0100               	movlb	0	; () banked
  1245   0009AA  0581               	decf	_clear_flag& (0+255),w,b
  1246   0009AC  1182               	iorwf	(_clear_flag+1)& (0+255),w,b
  1247   0009AE  A4D8               	btfss	status,2,c
  1248   0009B0  EFDC  F004         	goto	u2871
  1249   0009B4  EFDE  F004         	goto	u2870
  1250   0009B8                     u2871:
  1251   0009B8  EF46  F005         	goto	l3260
  1252   0009BC                     u2870:
  1253   0009BC                     
  1254                           ; BSR set to: 0
  1255                           ;main.c: 408:         {;main.c: 411:             add=0;
  1256   0009BC  0E00               	movlw	0
  1257   0009BE  6E48               	movwf	(_add+1)^0,c
  1258   0009C0  0E00               	movlw	0
  1259   0009C2  6E47               	movwf	_add^0,c
  1260                           
  1261                           ;main.c: 412:             flag_count=0;
  1262   0009C4  0E00               	movlw	0
  1263   0009C6  6E40               	movwf	(_flag_count+1)^0,c
  1264   0009C8  0E00               	movlw	0
  1265   0009CA  6E3F               	movwf	_flag_count^0,c
  1266   0009CC                     
  1267                           ; BSR set to: 0
  1268                           ;main.c: 413:             unsigned long long int delay=0;
  1269   0009CC  EE20  F025         	lfsr	2,main@delay_175
  1270   0009D0  0E07               	movlw	7
  1271   0009D2                     u2881:
  1272   0009D2  6ADE               	clrf	postinc2,c
  1273   0009D4  06E8               	decf	wreg,f,c
  1274   0009D6  E2FD               	bc	u2881
  1275   0009D8                     
  1276                           ; BSR set to: 0
  1277                           ;main.c: 414:             clcd_write(0x01, 0);
  1278   0009D8  0E00               	movlw	0
  1279   0009DA  6E01               	movwf	clcd_write@control_bit^0,c
  1280   0009DC  0E01               	movlw	1
  1281   0009DE  ECE7  F012         	call	_clcd_write
  1282   0009E2                     
  1283                           ;main.c: 415:             clcd_print("Clearing logs...", (0x80 + (0)));
  1284   0009E2  0E4C               	movlw	low STR_22
  1285   0009E4  6E07               	movwf	clcd_print@data^0,c
  1286   0009E6  0E06               	movlw	high STR_22
  1287   0009E8  6E08               	movwf	(clcd_print@data+1)^0,c
  1288   0009EA  0E80               	movlw	128
  1289   0009EC  6E09               	movwf	clcd_print@addr^0,c
  1290   0009EE  EC99  F011         	call	_clcd_print	;wreg free
  1291   0009F2                     
  1292                           ;main.c: 416:             clcd_print("Just a minute", (0xC0 + (0)));
  1293   0009F2  0E99               	movlw	low STR_23
  1294   0009F4  6E07               	movwf	clcd_print@data^0,c
  1295   0009F6  0E06               	movlw	high STR_23
  1296   0009F8  6E08               	movwf	(clcd_print@data+1)^0,c
  1297   0009FA  0EC0               	movlw	192
  1298   0009FC  6E09               	movwf	clcd_print@addr^0,c
  1299   0009FE  EC99  F011         	call	_clcd_print	;wreg free
  1300   000A02                     l3248:
  1301   000A02  C025  F013         	movff	main@delay_175,??_main
  1302   000A06  C026  F014         	movff	main@delay_175+1,??_main+1
  1303   000A0A  C027  F015         	movff	main@delay_175+2,??_main+2
  1304   000A0E  C028  F016         	movff	main@delay_175+3,??_main+3
  1305   000A12  C029  F017         	movff	main@delay_175+4,??_main+4
  1306   000A16  C02A  F018         	movff	main@delay_175+5,??_main+5
  1307   000A1A  C02B  F019         	movff	main@delay_175+6,??_main+6
  1308   000A1E  C02C  F01A         	movff	main@delay_175+7,??_main+7
  1309   000A22  2A25               	incf	main@delay_175^0,f,c
  1310   000A24  0E00               	movlw	0
  1311   000A26  2226               	addwfc	(main@delay_175+1)^0,f,c
  1312   000A28  2227               	addwfc	(main@delay_175+2)^0,f,c
  1313   000A2A  2228               	addwfc	(main@delay_175+3)^0,f,c
  1314   000A2C  2229               	addwfc	(main@delay_175+4)^0,f,c
  1315   000A2E  222A               	addwfc	(main@delay_175+5)^0,f,c
  1316   000A30  222B               	addwfc	(main@delay_175+6)^0,f,c
  1317   000A32  222C               	addwfc	(main@delay_175+7)^0,f,c
  1318   000A34  501A               	movf	(??_main+7)^0,w,c
  1319   000A36  1019               	iorwf	(??_main+6)^0,w,c
  1320   000A38  1018               	iorwf	(??_main+5)^0,w,c
  1321   000A3A  1017               	iorwf	(??_main+4)^0,w,c
  1322   000A3C  1016               	iorwf	(??_main+3)^0,w,c
  1323   000A3E  E10D               	bnz	u2890
  1324   000A40  0EE0               	movlw	224
  1325   000A42  5C13               	subwf	??_main^0,w,c
  1326   000A44  0E93               	movlw	147
  1327   000A46  5814               	subwfb	(??_main+1)^0,w,c
  1328   000A48  0E04               	movlw	4
  1329   000A4A  5815               	subwfb	(??_main+2)^0,w,c
  1330   000A4C  A0D8               	btfss	status,0,c
  1331   000A4E  EF2B  F005         	goto	u2891
  1332   000A52  EF2D  F005         	goto	u2890
  1333   000A56                     u2891:
  1334   000A56  EF01  F005         	goto	l3248
  1335   000A5A                     u2890:
  1336   000A5A                     
  1337                           ;main.c: 418:             delay=0;
  1338   000A5A  EE20  F025         	lfsr	2,main@delay_175
  1339   000A5E  0E07               	movlw	7
  1340   000A60                     u2901:
  1341   000A60  6ADE               	clrf	postinc2,c
  1342   000A62  06E8               	decf	wreg,f,c
  1343   000A64  E2FD               	bc	u2901
  1344   000A66                     
  1345                           ;main.c: 419:             menu_flag=1;
  1346   000A66  0E00               	movlw	0
  1347   000A68  6E42               	movwf	(_menu_flag+1)^0,c
  1348   000A6A  0E01               	movlw	1
  1349   000A6C  6E41               	movwf	_menu_flag^0,c
  1350   000A6E                     
  1351                           ;main.c: 420:             k=0;
  1352   000A6E  0E00               	movlw	0
  1353   000A70  6E58               	movwf	(_k+1)^0,c
  1354   000A72  0E00               	movlw	0
  1355   000A74  6E57               	movwf	_k^0,c
  1356   000A76                     
  1357                           ;main.c: 421:             star=0;
  1358   000A76  0E00               	movlw	0
  1359   000A78  6E56               	movwf	(_star+1)^0,c
  1360   000A7A  0E00               	movlw	0
  1361   000A7C  6E55               	movwf	_star^0,c
  1362   000A7E                     
  1363                           ;main.c: 422:             clear_flag=0;
  1364   000A7E  0E00               	movlw	0
  1365   000A80  0100               	movlb	0	; () banked
  1366   000A82  6F82               	movwf	(_clear_flag+1)& (0+255),b
  1367   000A84  0E00               	movlw	0
  1368   000A86  6F81               	movwf	_clear_flag& (0+255),b
  1369                           
  1370                           ;main.c: 423:         }
  1371   000A88  EF7F  F003         	goto	l3166
  1372   000A8C                     l3260:
  1373                           
  1374                           ; BSR set to: 0
  1375   000A8C  0583               	decf	_download_flag& (0+255),w,b
  1376   000A8E  1184               	iorwf	(_download_flag+1)& (0+255),w,b
  1377   000A90  A4D8               	btfss	status,2,c
  1378   000A92  EF4D  F005         	goto	u2911
  1379   000A96  EF4F  F005         	goto	u2910
  1380   000A9A                     u2911:
  1381   000A9A  EF30  F006         	goto	l3312
  1382   000A9E                     u2910:
  1383   000A9E                     
  1384                           ; BSR set to: 0
  1385                           ;main.c: 429:         {;main.c: 430:             unsigned long long int delay=0;
  1386   000A9E  EE20  F02F         	lfsr	2,main@delay_178
  1387   000AA2  0E07               	movlw	7
  1388   000AA4                     u2921:
  1389   000AA4  6ADE               	clrf	postinc2,c
  1390   000AA6  06E8               	decf	wreg,f,c
  1391   000AA8  E2FD               	bc	u2921
  1392   000AAA                     
  1393                           ; BSR set to: 0
  1394                           ;main.c: 431:             clcd_write(0x01, 0);
  1395   000AAA  0E00               	movlw	0
  1396   000AAC  6E01               	movwf	clcd_write@control_bit^0,c
  1397   000AAE  0E01               	movlw	1
  1398   000AB0  ECE7  F012         	call	_clcd_write
  1399   000AB4                     
  1400                           ;main.c: 432:             if(add==0 && flag_count==0)
  1401   000AB4  5047               	movf	_add^0,w,c
  1402   000AB6  1048               	iorwf	(_add+1)^0,w,c
  1403   000AB8  A4D8               	btfss	status,2,c
  1404   000ABA  EF61  F005         	goto	u2931
  1405   000ABE  EF63  F005         	goto	u2930
  1406   000AC2                     u2931:
  1407   000AC2  EFC1  F005         	goto	l3284
  1408   000AC6                     u2930:
  1409   000AC6  503F               	movf	_flag_count^0,w,c
  1410   000AC8  1040               	iorwf	(_flag_count+1)^0,w,c
  1411   000ACA  A4D8               	btfss	status,2,c
  1412   000ACC  EF6A  F005         	goto	u2941
  1413   000AD0  EF6C  F005         	goto	u2940
  1414   000AD4                     u2941:
  1415   000AD4  EFC1  F005         	goto	l3284
  1416   000AD8                     u2940:
  1417   000AD8                     
  1418                           ;main.c: 433:             {;main.c: 434:                 clcd_print("NO LOGS   ", (0x80 
      +                          + (0)));
  1419   000AD8  0EB4               	movlw	low STR_17
  1420   000ADA  6E07               	movwf	clcd_print@data^0,c
  1421   000ADC  0E06               	movlw	high STR_17
  1422   000ADE  6E08               	movwf	(clcd_print@data+1)^0,c
  1423   000AE0  0E80               	movlw	128
  1424   000AE2  6E09               	movwf	clcd_print@addr^0,c
  1425   000AE4  EC99  F011         	call	_clcd_print	;wreg free
  1426                           
  1427                           ;main.c: 435:                 clcd_print("  TO DOWNLOAD :( ", (0xC0 + (0)));
  1428   000AE8  0E29               	movlw	low STR_25
  1429   000AEA  6E07               	movwf	clcd_print@data^0,c
  1430   000AEC  0E06               	movlw	high STR_25
  1431   000AEE  6E08               	movwf	(clcd_print@data+1)^0,c
  1432   000AF0  0EC0               	movlw	192
  1433   000AF2  6E09               	movwf	clcd_print@addr^0,c
  1434   000AF4  EC99  F011         	call	_clcd_print	;wreg free
  1435   000AF8                     l3272:
  1436   000AF8  C02F  F013         	movff	main@delay_178,??_main
  1437   000AFC  C030  F014         	movff	main@delay_178+1,??_main+1
  1438   000B00  C031  F015         	movff	main@delay_178+2,??_main+2
  1439   000B04  C032  F016         	movff	main@delay_178+3,??_main+3
  1440   000B08  C033  F017         	movff	main@delay_178+4,??_main+4
  1441   000B0C  C034  F018         	movff	main@delay_178+5,??_main+5
  1442   000B10  C035  F019         	movff	main@delay_178+6,??_main+6
  1443   000B14  C036  F01A         	movff	main@delay_178+7,??_main+7
  1444   000B18  2A2F               	incf	main@delay_178^0,f,c
  1445   000B1A  0E00               	movlw	0
  1446   000B1C  2230               	addwfc	(main@delay_178+1)^0,f,c
  1447   000B1E  2231               	addwfc	(main@delay_178+2)^0,f,c
  1448   000B20  2232               	addwfc	(main@delay_178+3)^0,f,c
  1449   000B22  2233               	addwfc	(main@delay_178+4)^0,f,c
  1450   000B24  2234               	addwfc	(main@delay_178+5)^0,f,c
  1451   000B26  2235               	addwfc	(main@delay_178+6)^0,f,c
  1452   000B28  2236               	addwfc	(main@delay_178+7)^0,f,c
  1453   000B2A  501A               	movf	(??_main+7)^0,w,c
  1454   000B2C  1019               	iorwf	(??_main+6)^0,w,c
  1455   000B2E  1018               	iorwf	(??_main+5)^0,w,c
  1456   000B30  1017               	iorwf	(??_main+4)^0,w,c
  1457   000B32  1016               	iorwf	(??_main+3)^0,w,c
  1458   000B34  E10D               	bnz	u2950
  1459   000B36  0EE0               	movlw	224
  1460   000B38  5C13               	subwf	??_main^0,w,c
  1461   000B3A  0E93               	movlw	147
  1462   000B3C  5814               	subwfb	(??_main+1)^0,w,c
  1463   000B3E  0E04               	movlw	4
  1464   000B40  5815               	subwfb	(??_main+2)^0,w,c
  1465   000B42  A0D8               	btfss	status,0,c
  1466   000B44  EFA6  F005         	goto	u2951
  1467   000B48  EFA8  F005         	goto	u2950
  1468   000B4C                     u2951:
  1469   000B4C  EF7C  F005         	goto	l3272
  1470   000B50                     u2950:
  1471   000B50                     l3274:
  1472                           
  1473                           ;main.c: 437:                 delay=0;
  1474   000B50  EE20  F02F         	lfsr	2,main@delay_178
  1475   000B54  0E07               	movlw	7
  1476   000B56                     u2961:
  1477   000B56  6ADE               	clrf	postinc2,c
  1478   000B58  06E8               	decf	wreg,f,c
  1479   000B5A  E2FD               	bc	u2961
  1480   000B5C                     
  1481                           ;main.c: 438:                 menu_flag=1;
  1482   000B5C  0E00               	movlw	0
  1483   000B5E  6E42               	movwf	(_menu_flag+1)^0,c
  1484   000B60  0E01               	movlw	1
  1485   000B62  6E41               	movwf	_menu_flag^0,c
  1486   000B64                     
  1487                           ;main.c: 439:                 k=0;
  1488   000B64  0E00               	movlw	0
  1489   000B66  6E58               	movwf	(_k+1)^0,c
  1490   000B68  0E00               	movlw	0
  1491   000B6A  6E57               	movwf	_k^0,c
  1492   000B6C                     
  1493                           ;main.c: 440:                 star=0;
  1494   000B6C  0E00               	movlw	0
  1495   000B6E  6E56               	movwf	(_star+1)^0,c
  1496   000B70  0E00               	movlw	0
  1497   000B72  6E55               	movwf	_star^0,c
  1498   000B74                     
  1499                           ;main.c: 441:                 download_flag=0;
  1500   000B74  0E00               	movlw	0
  1501   000B76  0100               	movlb	0	; () banked
  1502   000B78  6F84               	movwf	(_download_flag+1)& (0+255),b
  1503   000B7A  0E00               	movlw	0
  1504   000B7C  6F83               	movwf	_download_flag& (0+255),b
  1505                           
  1506                           ;main.c: 442:             }
  1507   000B7E  EF7F  F003         	goto	l3166
  1508   000B82                     l3284:
  1509                           
  1510                           ;main.c: 444:             {;main.c: 445:                 reading_eeprom();
  1511   000B82  ECE2  F00C         	call	_reading_eeprom	;wreg free
  1512   000B86                     
  1513                           ;main.c: 446:                 clcd_print("Downloading..", (0x80 + (0)));
  1514   000B86  0E8B               	movlw	low STR_26
  1515   000B88  6E07               	movwf	clcd_print@data^0,c
  1516   000B8A  0E06               	movlw	high STR_26
  1517   000B8C  6E08               	movwf	(clcd_print@data+1)^0,c
  1518   000B8E  0E80               	movlw	128
  1519   000B90  6E09               	movwf	clcd_print@addr^0,c
  1520   000B92  EC99  F011         	call	_clcd_print	;wreg free
  1521   000B96                     
  1522                           ;main.c: 447:                 clcd_print("Through UART..", (0xC0 + (0)));
  1523   000B96  0E6E               	movlw	low STR_27
  1524   000B98  6E07               	movwf	clcd_print@data^0,c
  1525   000B9A  0E06               	movlw	high STR_27
  1526   000B9C  6E08               	movwf	(clcd_print@data+1)^0,c
  1527   000B9E  0EC0               	movlw	192
  1528   000BA0  6E09               	movwf	clcd_print@addr^0,c
  1529   000BA2  EC99  F011         	call	_clcd_print	;wreg free
  1530   000BA6                     
  1531                           ;main.c: 448:                 for(int it=0;it<end;it++)
  1532   000BA6  0E00               	movlw	0
  1533   000BA8  6E2E               	movwf	(main@it+1)^0,c
  1534   000BAA  0E00               	movlw	0
  1535   000BAC  6E2D               	movwf	main@it^0,c
  1536   000BAE  EFF3  F005         	goto	l3298
  1537   000BB2                     l3292:
  1538                           
  1539                           ;main.c: 449:                 {;main.c: 450:                     puts(detail[it]);
  1540   000BB2  C02D  F001         	movff	main@it,___wmul@multiplier
  1541   000BB6  C02E  F002         	movff	main@it+1,___wmul@multiplier+1
  1542   000BBA  0E00               	movlw	0
  1543   000BBC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1544   000BBE  0E12               	movlw	18
  1545   000BC0  6E03               	movwf	___wmul@multiplicand^0,c
  1546   000BC2  EC2E  F013         	call	___wmul	;wreg free
  1547   000BC6  0E00               	movlw	low _detail
  1548   000BC8  2401               	addwf	?___wmul^0,w,c
  1549   000BCA  6E07               	movwf	puts@s^0,c
  1550   000BCC  0E01               	movlw	high _detail
  1551   000BCE  2002               	addwfc	(?___wmul+1)^0,w,c
  1552   000BD0  6E08               	movwf	(puts@s+1)^0,c
  1553   000BD2  EC30  F012         	call	_puts	;wreg free
  1554   000BD6                     
  1555                           ;main.c: 451:                     puts("\n\r");
  1556   000BD6  0EDB               	movlw	low STR_28
  1557   000BD8  6E07               	movwf	puts@s^0,c
  1558   000BDA  0E06               	movlw	high STR_28
  1559   000BDC  6E08               	movwf	(puts@s+1)^0,c
  1560   000BDE  EC30  F012         	call	_puts	;wreg free
  1561   000BE2                     
  1562                           ;main.c: 452:                 }
  1563   000BE2  4A2D               	infsnz	main@it^0,f,c
  1564   000BE4  2A2E               	incf	(main@it+1)^0,f,c
  1565   000BE6                     l3298:
  1566   000BE6  5053               	movf	_end^0,w,c
  1567   000BE8  5C2D               	subwf	main@it^0,w,c
  1568   000BEA  502E               	movf	(main@it+1)^0,w,c
  1569   000BEC  0A80               	xorlw	128
  1570   000BEE  6E13               	movwf	??_main^0,c
  1571   000BF0  5054               	movf	(_end+1)^0,w,c
  1572   000BF2  0A80               	xorlw	128
  1573   000BF4  5813               	subwfb	??_main^0,w,c
  1574   000BF6  A0D8               	btfss	status,0,c
  1575   000BF8  EF00  F006         	goto	u2971
  1576   000BFC  EF02  F006         	goto	u2970
  1577   000C00                     u2971:
  1578   000C00  EFD9  F005         	goto	l3292
  1579   000C04                     u2970:
  1580   000C04                     l3300:
  1581   000C04  C02F  F013         	movff	main@delay_178,??_main
  1582   000C08  C030  F014         	movff	main@delay_178+1,??_main+1
  1583   000C0C  C031  F015         	movff	main@delay_178+2,??_main+2
  1584   000C10  C032  F016         	movff	main@delay_178+3,??_main+3
  1585   000C14  C033  F017         	movff	main@delay_178+4,??_main+4
  1586   000C18  C034  F018         	movff	main@delay_178+5,??_main+5
  1587   000C1C  C035  F019         	movff	main@delay_178+6,??_main+6
  1588   000C20  C036  F01A         	movff	main@delay_178+7,??_main+7
  1589   000C24  2A2F               	incf	main@delay_178^0,f,c
  1590   000C26  0E00               	movlw	0
  1591   000C28  2230               	addwfc	(main@delay_178+1)^0,f,c
  1592   000C2A  2231               	addwfc	(main@delay_178+2)^0,f,c
  1593   000C2C  2232               	addwfc	(main@delay_178+3)^0,f,c
  1594   000C2E  2233               	addwfc	(main@delay_178+4)^0,f,c
  1595   000C30  2234               	addwfc	(main@delay_178+5)^0,f,c
  1596   000C32  2235               	addwfc	(main@delay_178+6)^0,f,c
  1597   000C34  2236               	addwfc	(main@delay_178+7)^0,f,c
  1598   000C36  501A               	movf	(??_main+7)^0,w,c
  1599   000C38  1019               	iorwf	(??_main+6)^0,w,c
  1600   000C3A  1018               	iorwf	(??_main+5)^0,w,c
  1601   000C3C  1017               	iorwf	(??_main+4)^0,w,c
  1602   000C3E  1016               	iorwf	(??_main+3)^0,w,c
  1603   000C40  E10D               	bnz	u2980
  1604   000C42  0EE0               	movlw	224
  1605   000C44  5C13               	subwf	??_main^0,w,c
  1606   000C46  0E93               	movlw	147
  1607   000C48  5814               	subwfb	(??_main+1)^0,w,c
  1608   000C4A  0E04               	movlw	4
  1609   000C4C  5815               	subwfb	(??_main+2)^0,w,c
  1610   000C4E  A0D8               	btfss	status,0,c
  1611   000C50  EF2C  F006         	goto	u2981
  1612   000C54  EF2E  F006         	goto	u2980
  1613   000C58                     u2981:
  1614   000C58  EF02  F006         	goto	l3300
  1615   000C5C                     u2980:
  1616   000C5C  EFA8  F005         	goto	l3274
  1617   000C60                     l3312:
  1618                           
  1619                           ; BSR set to: 0
  1620   000C60  0443               	decf	_settime_flag^0,w,c
  1621   000C62  1044               	iorwf	(_settime_flag+1)^0,w,c
  1622   000C64  A4D8               	btfss	status,2,c
  1623   000C66  EF37  F006         	goto	u2991
  1624   000C6A  EF39  F006         	goto	u2990
  1625   000C6E                     u2991:
  1626   000C6E  EFD2  F004         	goto	l188
  1627   000C72                     u2990:
  1628   000C72                     
  1629                           ; BSR set to: 0
  1630                           ;main.c: 462:         {;main.c: 464:             if(time_flag==0)
  1631   000C72  5187               	movf	_time_flag& (0+255),w,b
  1632   000C74  1188               	iorwf	(_time_flag+1)& (0+255),w,b
  1633   000C76  A4D8               	btfss	status,2,c
  1634   000C78  EF40  F006         	goto	u3001
  1635   000C7C  EF42  F006         	goto	u3000
  1636   000C80                     u3001:
  1637   000C80  EF97  F006         	goto	l3328
  1638   000C84                     u3000:
  1639   000C84                     
  1640                           ; BSR set to: 0
  1641                           ;main.c: 465:             {;main.c: 466:                 hour = (time[0]-48)*10;
  1642   000C84  0ED0               	movlw	208
  1643   000C86  2589               	addwf	_time& (0+255),w,b
  1644   000C88  6E01               	movwf	___wmul@multiplier^0,c
  1645   000C8A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1646   000C8C  0EFF               	movlw	255
  1647   000C8E  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1648   000C90  0E00               	movlw	0
  1649   000C92  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1650   000C94  0E0A               	movlw	10
  1651   000C96  6E03               	movwf	___wmul@multiplicand^0,c
  1652   000C98  EC2E  F013         	call	___wmul	;wreg free
  1653   000C9C  C001  F051         	movff	?___wmul,_hour
  1654   000CA0  C002  F052         	movff	?___wmul+1,_hour+1
  1655   000CA4                     
  1656                           ;main.c: 467:                 hour += (time[1]-48);
  1657   000CA4  0ED0               	movlw	208
  1658   000CA6  0100               	movlb	0	; () banked
  1659   000CA8  258A               	addwf	(_time+1)& (0+255),w,b
  1660   000CAA  6E13               	movwf	??_main^0,c
  1661   000CAC  6A14               	clrf	(??_main+1)^0,c
  1662   000CAE  0EFF               	movlw	255
  1663   000CB0  2214               	addwfc	(??_main+1)^0,f,c
  1664   000CB2  5013               	movf	??_main^0,w,c
  1665   000CB4  2651               	addwf	_hour^0,f,c
  1666   000CB6  5014               	movf	(??_main+1)^0,w,c
  1667   000CB8  2252               	addwfc	(_hour+1)^0,f,c
  1668   000CBA                     
  1669                           ; BSR set to: 0
  1670                           ;main.c: 468:                 min = (time[3]-48)*10;
  1671   000CBA  0ED0               	movlw	208
  1672   000CBC  258C               	addwf	(_time+3)& (0+255),w,b
  1673   000CBE  6E01               	movwf	___wmul@multiplier^0,c
  1674   000CC0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1675   000CC2  0EFF               	movlw	255
  1676   000CC4  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1677   000CC6  0E00               	movlw	0
  1678   000CC8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1679   000CCA  0E0A               	movlw	10
  1680   000CCC  6E03               	movwf	___wmul@multiplicand^0,c
  1681   000CCE  EC2E  F013         	call	___wmul	;wreg free
  1682   000CD2  C001  F04F         	movff	?___wmul,_min
  1683   000CD6  C002  F050         	movff	?___wmul+1,_min+1
  1684                           
  1685                           ;main.c: 469:                 min += (time[4]-48);
  1686   000CDA  0ED0               	movlw	208
  1687   000CDC  0100               	movlb	0	; () banked
  1688   000CDE  258D               	addwf	(_time+4)& (0+255),w,b
  1689   000CE0  6E13               	movwf	??_main^0,c
  1690   000CE2  6A14               	clrf	(??_main+1)^0,c
  1691   000CE4  0EFF               	movlw	255
  1692   000CE6  2214               	addwfc	(??_main+1)^0,f,c
  1693   000CE8  5013               	movf	??_main^0,w,c
  1694   000CEA  264F               	addwf	_min^0,f,c
  1695   000CEC  5014               	movf	(??_main+1)^0,w,c
  1696   000CEE  2250               	addwfc	(_min+1)^0,f,c
  1697   000CF0                     
  1698                           ; BSR set to: 0
  1699                           ;main.c: 470:                 sec = (time[6]-48)*10;
  1700   000CF0  0ED0               	movlw	208
  1701   000CF2  258F               	addwf	(_time+6)& (0+255),w,b
  1702   000CF4  6E01               	movwf	___wmul@multiplier^0,c
  1703   000CF6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1704   000CF8  0EFF               	movlw	255
  1705   000CFA  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1706   000CFC  0E00               	movlw	0
  1707   000CFE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1708   000D00  0E0A               	movlw	10
  1709   000D02  6E03               	movwf	___wmul@multiplicand^0,c
  1710   000D04  EC2E  F013         	call	___wmul	;wreg free
  1711   000D08  C001  F04D         	movff	?___wmul,_sec
  1712   000D0C  C002  F04E         	movff	?___wmul+1,_sec+1
  1713   000D10                     
  1714                           ;main.c: 471:                 sec += (time[7]-48);
  1715   000D10  0ED0               	movlw	208
  1716   000D12  0100               	movlb	0	; () banked
  1717   000D14  2590               	addwf	(_time+7)& (0+255),w,b
  1718   000D16  6E13               	movwf	??_main^0,c
  1719   000D18  6A14               	clrf	(??_main+1)^0,c
  1720   000D1A  0EFF               	movlw	255
  1721   000D1C  2214               	addwfc	(??_main+1)^0,f,c
  1722   000D1E  5013               	movf	??_main^0,w,c
  1723   000D20  264D               	addwf	_sec^0,f,c
  1724   000D22  5014               	movf	(??_main+1)^0,w,c
  1725   000D24  224E               	addwfc	(_sec+1)^0,f,c
  1726   000D26                     
  1727                           ; BSR set to: 0
  1728                           ;main.c: 472:                 time_flag=1;
  1729   000D26  0E00               	movlw	0
  1730   000D28  6F88               	movwf	(_time_flag+1)& (0+255),b
  1731   000D2A  0E01               	movlw	1
  1732   000D2C  6F87               	movwf	_time_flag& (0+255),b
  1733   000D2E                     l3328:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;main.c: 474:             unsigned long long int delay=0;
  1737   000D2E  EE20  F037         	lfsr	2,main@delay_185
  1738   000D32  0E07               	movlw	7
  1739   000D34                     u3011:
  1740   000D34  6ADE               	clrf	postinc2,c
  1741   000D36  06E8               	decf	wreg,f,c
  1742   000D38  E2FD               	bc	u3011
  1743   000D3A                     
  1744                           ; BSR set to: 0
  1745                           ;main.c: 478:             clcd_print("HH:MM:SS            ", (0x80 + (0)));
  1746   000D3A  0E01               	movlw	low STR_29
  1747   000D3C  6E07               	movwf	clcd_print@data^0,c
  1748   000D3E  0E06               	movlw	high STR_29
  1749   000D40  6E08               	movwf	(clcd_print@data+1)^0,c
  1750   000D42  0E80               	movlw	128
  1751   000D44  6E09               	movwf	clcd_print@addr^0,c
  1752   000D46  EC99  F011         	call	_clcd_print	;wreg free
  1753   000D4A                     
  1754                           ;main.c: 479:             clcd_putch((hour/10) + '0', (0xC0 + (0)));
  1755   000D4A  0EC0               	movlw	192
  1756   000D4C  6E09               	movwf	clcd_putch@addr^0,c
  1757   000D4E  C051  F001         	movff	_hour,___awdiv@dividend
  1758   000D52  C052  F002         	movff	_hour+1,___awdiv@dividend+1
  1759   000D56  0E00               	movlw	0
  1760   000D58  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1761   000D5A  0E0A               	movlw	10
  1762   000D5C  6E03               	movwf	___awdiv@divisor^0,c
  1763   000D5E  EC16  F010         	call	___awdiv	;wreg free
  1764   000D62  5001               	movf	?___awdiv^0,w,c
  1765   000D64  0F30               	addlw	48
  1766   000D66  EC96  F013         	call	_clcd_putch
  1767   000D6A                     
  1768                           ;main.c: 480:             clcd_putch((hour%10) + '0',(0xC0 + (1)));
  1769   000D6A  0EC1               	movlw	193
  1770   000D6C  6E09               	movwf	clcd_putch@addr^0,c
  1771   000D6E  C051  F001         	movff	_hour,___awmod@dividend
  1772   000D72  C052  F002         	movff	_hour+1,___awmod@dividend+1
  1773   000D76  0E00               	movlw	0
  1774   000D78  6E04               	movwf	(___awmod@divisor+1)^0,c
  1775   000D7A  0E0A               	movlw	10
  1776   000D7C  6E03               	movwf	___awmod@divisor^0,c
  1777   000D7E  EC78  F010         	call	___awmod	;wreg free
  1778   000D82  5001               	movf	?___awmod^0,w,c
  1779   000D84  0F30               	addlw	48
  1780   000D86  EC96  F013         	call	_clcd_putch
  1781   000D8A                     
  1782                           ;main.c: 481:             if(field==0)
  1783   000D8A  504B               	movf	_field^0,w,c
  1784   000D8C  104C               	iorwf	(_field+1)^0,w,c
  1785   000D8E  A4D8               	btfss	status,2,c
  1786   000D90  EFCC  F006         	goto	u3021
  1787   000D94  EFCE  F006         	goto	u3020
  1788   000D98                     u3021:
  1789   000D98  EFFF  F006         	goto	l3344
  1790   000D9C                     u3020:
  1791   000D9C                     l3340:
  1792   000D9C  C037  F013         	movff	main@delay_185,??_main
  1793   000DA0  C038  F014         	movff	main@delay_185+1,??_main+1
  1794   000DA4  C039  F015         	movff	main@delay_185+2,??_main+2
  1795   000DA8  C03A  F016         	movff	main@delay_185+3,??_main+3
  1796   000DAC  C03B  F017         	movff	main@delay_185+4,??_main+4
  1797   000DB0  C03C  F018         	movff	main@delay_185+5,??_main+5
  1798   000DB4  C03D  F019         	movff	main@delay_185+6,??_main+6
  1799   000DB8  C03E  F01A         	movff	main@delay_185+7,??_main+7
  1800   000DBC  2A37               	incf	main@delay_185^0,f,c
  1801   000DBE  0E00               	movlw	0
  1802   000DC0  2238               	addwfc	(main@delay_185+1)^0,f,c
  1803   000DC2  2239               	addwfc	(main@delay_185+2)^0,f,c
  1804   000DC4  223A               	addwfc	(main@delay_185+3)^0,f,c
  1805   000DC6  223B               	addwfc	(main@delay_185+4)^0,f,c
  1806   000DC8  223C               	addwfc	(main@delay_185+5)^0,f,c
  1807   000DCA  223D               	addwfc	(main@delay_185+6)^0,f,c
  1808   000DCC  223E               	addwfc	(main@delay_185+7)^0,f,c
  1809   000DCE  501A               	movf	(??_main+7)^0,w,c
  1810   000DD0  1019               	iorwf	(??_main+6)^0,w,c
  1811   000DD2  1018               	iorwf	(??_main+5)^0,w,c
  1812   000DD4  1017               	iorwf	(??_main+4)^0,w,c
  1813   000DD6  1016               	iorwf	(??_main+3)^0,w,c
  1814   000DD8  1015               	iorwf	(??_main+2)^0,w,c
  1815   000DDA  E10B               	bnz	u3030
  1816   000DDC  0E50               	movlw	80
  1817   000DDE  5C13               	subwf	??_main^0,w,c
  1818   000DE0  0EC3               	movlw	195
  1819   000DE2  5814               	subwfb	(??_main+1)^0,w,c
  1820   000DE4  A0D8               	btfss	status,0,c
  1821   000DE6  EFF7  F006         	goto	u3031
  1822   000DEA  EFF9  F006         	goto	u3030
  1823   000DEE                     u3031:
  1824   000DEE  EFCE  F006         	goto	l3340
  1825   000DF2                     u3030:
  1826   000DF2                     
  1827                           ;main.c: 484:                 delay=0;
  1828   000DF2  EE20  F037         	lfsr	2,main@delay_185
  1829   000DF6  0E07               	movlw	7
  1830   000DF8                     u3041:
  1831   000DF8  6ADE               	clrf	postinc2,c
  1832   000DFA  06E8               	decf	wreg,f,c
  1833   000DFC  E2FD               	bc	u3041
  1834   000DFE                     l3344:
  1835                           
  1836                           ;main.c: 488:             clcd_putch(':', (0xC0 + (2)));
  1837   000DFE  0EC2               	movlw	194
  1838   000E00  6E09               	movwf	clcd_putch@addr^0,c
  1839   000E02  0E3A               	movlw	58
  1840   000E04  EC96  F013         	call	_clcd_putch
  1841   000E08                     
  1842                           ;main.c: 489:             clcd_putch((min/10) + '0', (0xC0 + (3)));
  1843   000E08  0EC3               	movlw	195
  1844   000E0A  6E09               	movwf	clcd_putch@addr^0,c
  1845   000E0C  C04F  F001         	movff	_min,___awdiv@dividend
  1846   000E10  C050  F002         	movff	_min+1,___awdiv@dividend+1
  1847   000E14  0E00               	movlw	0
  1848   000E16  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1849   000E18  0E0A               	movlw	10
  1850   000E1A  6E03               	movwf	___awdiv@divisor^0,c
  1851   000E1C  EC16  F010         	call	___awdiv	;wreg free
  1852   000E20  5001               	movf	?___awdiv^0,w,c
  1853   000E22  0F30               	addlw	48
  1854   000E24  EC96  F013         	call	_clcd_putch
  1855   000E28                     
  1856                           ;main.c: 490:             clcd_putch((min%10) + '0', (0xC0 + (4)));
  1857   000E28  0EC4               	movlw	196
  1858   000E2A  6E09               	movwf	clcd_putch@addr^0,c
  1859   000E2C  C04F  F001         	movff	_min,___awmod@dividend
  1860   000E30  C050  F002         	movff	_min+1,___awmod@dividend+1
  1861   000E34  0E00               	movlw	0
  1862   000E36  6E04               	movwf	(___awmod@divisor+1)^0,c
  1863   000E38  0E0A               	movlw	10
  1864   000E3A  6E03               	movwf	___awmod@divisor^0,c
  1865   000E3C  EC78  F010         	call	___awmod	;wreg free
  1866   000E40  5001               	movf	?___awmod^0,w,c
  1867   000E42  0F30               	addlw	48
  1868   000E44  EC96  F013         	call	_clcd_putch
  1869   000E48                     
  1870                           ;main.c: 491:             if(field==1)
  1871   000E48  044B               	decf	_field^0,w,c
  1872   000E4A  104C               	iorwf	(_field+1)^0,w,c
  1873   000E4C  A4D8               	btfss	status,2,c
  1874   000E4E  EF2B  F007         	goto	u3051
  1875   000E52  EF2D  F007         	goto	u3050
  1876   000E56                     u3051:
  1877   000E56  EF5E  F007         	goto	l3358
  1878   000E5A                     u3050:
  1879   000E5A                     l3354:
  1880   000E5A  C037  F013         	movff	main@delay_185,??_main
  1881   000E5E  C038  F014         	movff	main@delay_185+1,??_main+1
  1882   000E62  C039  F015         	movff	main@delay_185+2,??_main+2
  1883   000E66  C03A  F016         	movff	main@delay_185+3,??_main+3
  1884   000E6A  C03B  F017         	movff	main@delay_185+4,??_main+4
  1885   000E6E  C03C  F018         	movff	main@delay_185+5,??_main+5
  1886   000E72  C03D  F019         	movff	main@delay_185+6,??_main+6
  1887   000E76  C03E  F01A         	movff	main@delay_185+7,??_main+7
  1888   000E7A  2A37               	incf	main@delay_185^0,f,c
  1889   000E7C  0E00               	movlw	0
  1890   000E7E  2238               	addwfc	(main@delay_185+1)^0,f,c
  1891   000E80  2239               	addwfc	(main@delay_185+2)^0,f,c
  1892   000E82  223A               	addwfc	(main@delay_185+3)^0,f,c
  1893   000E84  223B               	addwfc	(main@delay_185+4)^0,f,c
  1894   000E86  223C               	addwfc	(main@delay_185+5)^0,f,c
  1895   000E88  223D               	addwfc	(main@delay_185+6)^0,f,c
  1896   000E8A  223E               	addwfc	(main@delay_185+7)^0,f,c
  1897   000E8C  501A               	movf	(??_main+7)^0,w,c
  1898   000E8E  1019               	iorwf	(??_main+6)^0,w,c
  1899   000E90  1018               	iorwf	(??_main+5)^0,w,c
  1900   000E92  1017               	iorwf	(??_main+4)^0,w,c
  1901   000E94  1016               	iorwf	(??_main+3)^0,w,c
  1902   000E96  1015               	iorwf	(??_main+2)^0,w,c
  1903   000E98  E10B               	bnz	u3060
  1904   000E9A  0E50               	movlw	80
  1905   000E9C  5C13               	subwf	??_main^0,w,c
  1906   000E9E  0EC3               	movlw	195
  1907   000EA0  5814               	subwfb	(??_main+1)^0,w,c
  1908   000EA2  A0D8               	btfss	status,0,c
  1909   000EA4  EF56  F007         	goto	u3061
  1910   000EA8  EF58  F007         	goto	u3060
  1911   000EAC                     u3061:
  1912   000EAC  EF2D  F007         	goto	l3354
  1913   000EB0                     u3060:
  1914   000EB0                     
  1915                           ;main.c: 494:                 delay=0;
  1916   000EB0  EE20  F037         	lfsr	2,main@delay_185
  1917   000EB4  0E07               	movlw	7
  1918   000EB6                     u3071:
  1919   000EB6  6ADE               	clrf	postinc2,c
  1920   000EB8  06E8               	decf	wreg,f,c
  1921   000EBA  E2FD               	bc	u3071
  1922   000EBC                     l3358:
  1923                           
  1924                           ;main.c: 496:             clcd_putch(':', (0xC0 + (5)));
  1925   000EBC  0EC5               	movlw	197
  1926   000EBE  6E09               	movwf	clcd_putch@addr^0,c
  1927   000EC0  0E3A               	movlw	58
  1928   000EC2  EC96  F013         	call	_clcd_putch
  1929   000EC6                     
  1930                           ;main.c: 497:             clcd_putch((sec/10) + '0', (0xC0 + (6)));
  1931   000EC6  0EC6               	movlw	198
  1932   000EC8  6E09               	movwf	clcd_putch@addr^0,c
  1933   000ECA  C04D  F001         	movff	_sec,___awdiv@dividend
  1934   000ECE  C04E  F002         	movff	_sec+1,___awdiv@dividend+1
  1935   000ED2  0E00               	movlw	0
  1936   000ED4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1937   000ED6  0E0A               	movlw	10
  1938   000ED8  6E03               	movwf	___awdiv@divisor^0,c
  1939   000EDA  EC16  F010         	call	___awdiv	;wreg free
  1940   000EDE  5001               	movf	?___awdiv^0,w,c
  1941   000EE0  0F30               	addlw	48
  1942   000EE2  EC96  F013         	call	_clcd_putch
  1943   000EE6                     
  1944                           ;main.c: 498:             clcd_putch((sec%10) + '0', (0xC0 + (7)));
  1945   000EE6  0EC7               	movlw	199
  1946   000EE8  6E09               	movwf	clcd_putch@addr^0,c
  1947   000EEA  C04D  F001         	movff	_sec,___awmod@dividend
  1948   000EEE  C04E  F002         	movff	_sec+1,___awmod@dividend+1
  1949   000EF2  0E00               	movlw	0
  1950   000EF4  6E04               	movwf	(___awmod@divisor+1)^0,c
  1951   000EF6  0E0A               	movlw	10
  1952   000EF8  6E03               	movwf	___awmod@divisor^0,c
  1953   000EFA  EC78  F010         	call	___awmod	;wreg free
  1954   000EFE  5001               	movf	?___awmod^0,w,c
  1955   000F00  0F30               	addlw	48
  1956   000F02  EC96  F013         	call	_clcd_putch
  1957   000F06                     
  1958                           ;main.c: 499:             if(field==2)
  1959   000F06  0E02               	movlw	2
  1960   000F08  184B               	xorwf	_field^0,w,c
  1961   000F0A  104C               	iorwf	(_field+1)^0,w,c
  1962   000F0C  A4D8               	btfss	status,2,c
  1963   000F0E  EF8B  F007         	goto	u3081
  1964   000F12  EF8D  F007         	goto	u3080
  1965   000F16                     u3081:
  1966   000F16  EFBE  F007         	goto	l3372
  1967   000F1A                     u3080:
  1968   000F1A                     l3368:
  1969   000F1A  C037  F013         	movff	main@delay_185,??_main
  1970   000F1E  C038  F014         	movff	main@delay_185+1,??_main+1
  1971   000F22  C039  F015         	movff	main@delay_185+2,??_main+2
  1972   000F26  C03A  F016         	movff	main@delay_185+3,??_main+3
  1973   000F2A  C03B  F017         	movff	main@delay_185+4,??_main+4
  1974   000F2E  C03C  F018         	movff	main@delay_185+5,??_main+5
  1975   000F32  C03D  F019         	movff	main@delay_185+6,??_main+6
  1976   000F36  C03E  F01A         	movff	main@delay_185+7,??_main+7
  1977   000F3A  2A37               	incf	main@delay_185^0,f,c
  1978   000F3C  0E00               	movlw	0
  1979   000F3E  2238               	addwfc	(main@delay_185+1)^0,f,c
  1980   000F40  2239               	addwfc	(main@delay_185+2)^0,f,c
  1981   000F42  223A               	addwfc	(main@delay_185+3)^0,f,c
  1982   000F44  223B               	addwfc	(main@delay_185+4)^0,f,c
  1983   000F46  223C               	addwfc	(main@delay_185+5)^0,f,c
  1984   000F48  223D               	addwfc	(main@delay_185+6)^0,f,c
  1985   000F4A  223E               	addwfc	(main@delay_185+7)^0,f,c
  1986   000F4C  501A               	movf	(??_main+7)^0,w,c
  1987   000F4E  1019               	iorwf	(??_main+6)^0,w,c
  1988   000F50  1018               	iorwf	(??_main+5)^0,w,c
  1989   000F52  1017               	iorwf	(??_main+4)^0,w,c
  1990   000F54  1016               	iorwf	(??_main+3)^0,w,c
  1991   000F56  1015               	iorwf	(??_main+2)^0,w,c
  1992   000F58  E10B               	bnz	u3090
  1993   000F5A  0E50               	movlw	80
  1994   000F5C  5C13               	subwf	??_main^0,w,c
  1995   000F5E  0EC3               	movlw	195
  1996   000F60  5814               	subwfb	(??_main+1)^0,w,c
  1997   000F62  A0D8               	btfss	status,0,c
  1998   000F64  EFB6  F007         	goto	u3091
  1999   000F68  EFB8  F007         	goto	u3090
  2000   000F6C                     u3091:
  2001   000F6C  EF8D  F007         	goto	l3368
  2002   000F70                     u3090:
  2003   000F70                     
  2004                           ;main.c: 502:                 delay=0;
  2005   000F70  EE20  F037         	lfsr	2,main@delay_185
  2006   000F74  0E07               	movlw	7
  2007   000F76                     u3101:
  2008   000F76  6ADE               	clrf	postinc2,c
  2009   000F78  06E8               	decf	wreg,f,c
  2010   000F7A  E2FD               	bc	u3101
  2011   000F7C                     l3372:
  2012                           
  2013                           ;main.c: 504:             clcd_print("      ", (0xC0 + (8)));
  2014   000F7C  0E22               	movlw	low (STR_15+12)
  2015   000F7E  6E07               	movwf	clcd_print@data^0,c
  2016   000F80  0E06               	movlw	high (STR_15+12)
  2017   000F82  6E08               	movwf	(clcd_print@data+1)^0,c
  2018   000F84  0EC8               	movlw	200
  2019   000F86  6E09               	movwf	clcd_print@addr^0,c
  2020   000F88  EC99  F011         	call	_clcd_print	;wreg free
  2021   000F8C                     
  2022                           ;main.c: 505:             if(field==0)
  2023   000F8C  504B               	movf	_field^0,w,c
  2024   000F8E  104C               	iorwf	(_field+1)^0,w,c
  2025   000F90  A4D8               	btfss	status,2,c
  2026   000F92  EFCD  F007         	goto	u3111
  2027   000F96  EFCF  F007         	goto	u3110
  2028   000F9A                     u3111:
  2029   000F9A  EF0A  F008         	goto	l3382
  2030   000F9E                     u3110:
  2031   000F9E                     
  2032                           ;main.c: 506:             {;main.c: 507:                 clcd_print("  ", (0xC0 + (0)));
  2033   000F9E  0E26               	movlw	low (STR_15+16)
  2034   000FA0  6E07               	movwf	clcd_print@data^0,c
  2035   000FA2  0E06               	movlw	high (STR_15+16)
  2036   000FA4  6E08               	movwf	(clcd_print@data+1)^0,c
  2037   000FA6  0EC0               	movlw	192
  2038   000FA8  6E09               	movwf	clcd_print@addr^0,c
  2039   000FAA  EC99  F011         	call	_clcd_print	;wreg free
  2040   000FAE                     l3378:
  2041   000FAE  C037  F013         	movff	main@delay_185,??_main
  2042   000FB2  C038  F014         	movff	main@delay_185+1,??_main+1
  2043   000FB6  C039  F015         	movff	main@delay_185+2,??_main+2
  2044   000FBA  C03A  F016         	movff	main@delay_185+3,??_main+3
  2045   000FBE  C03B  F017         	movff	main@delay_185+4,??_main+4
  2046   000FC2  C03C  F018         	movff	main@delay_185+5,??_main+5
  2047   000FC6  C03D  F019         	movff	main@delay_185+6,??_main+6
  2048   000FCA  C03E  F01A         	movff	main@delay_185+7,??_main+7
  2049   000FCE  2A37               	incf	main@delay_185^0,f,c
  2050   000FD0  0E00               	movlw	0
  2051   000FD2  2238               	addwfc	(main@delay_185+1)^0,f,c
  2052   000FD4  2239               	addwfc	(main@delay_185+2)^0,f,c
  2053   000FD6  223A               	addwfc	(main@delay_185+3)^0,f,c
  2054   000FD8  223B               	addwfc	(main@delay_185+4)^0,f,c
  2055   000FDA  223C               	addwfc	(main@delay_185+5)^0,f,c
  2056   000FDC  223D               	addwfc	(main@delay_185+6)^0,f,c
  2057   000FDE  223E               	addwfc	(main@delay_185+7)^0,f,c
  2058   000FE0  501A               	movf	(??_main+7)^0,w,c
  2059   000FE2  1019               	iorwf	(??_main+6)^0,w,c
  2060   000FE4  1018               	iorwf	(??_main+5)^0,w,c
  2061   000FE6  1017               	iorwf	(??_main+4)^0,w,c
  2062   000FE8  1016               	iorwf	(??_main+3)^0,w,c
  2063   000FEA  1015               	iorwf	(??_main+2)^0,w,c
  2064   000FEC  E10B               	bnz	u3120
  2065   000FEE  0E50               	movlw	80
  2066   000FF0  5C13               	subwf	??_main^0,w,c
  2067   000FF2  0EC3               	movlw	195
  2068   000FF4  5814               	subwfb	(??_main+1)^0,w,c
  2069   000FF6  A0D8               	btfss	status,0,c
  2070   000FF8  EF00  F008         	goto	u3121
  2071   000FFC  EF02  F008         	goto	u3120
  2072   001000                     u3121:
  2073   001000  EFD7  F007         	goto	l3378
  2074   001004                     u3120:
  2075   001004                     l3380:
  2076                           
  2077                           ;main.c: 509:                 delay=0;
  2078   001004  EE20  F037         	lfsr	2,main@delay_185
  2079   001008  0E07               	movlw	7
  2080   00100A                     u3131:
  2081   00100A  6ADE               	clrf	postinc2,c
  2082   00100C  06E8               	decf	wreg,f,c
  2083   00100E  E2FD               	bc	u3131
  2084                           
  2085                           ;main.c: 510:             }
  2086   001010  EF7F  F003         	goto	l3166
  2087   001014                     l3382:
  2088   001014  044B               	decf	_field^0,w,c
  2089   001016  104C               	iorwf	(_field+1)^0,w,c
  2090   001018  A4D8               	btfss	status,2,c
  2091   00101A  EF11  F008         	goto	u3141
  2092   00101E  EF13  F008         	goto	u3140
  2093   001022                     u3141:
  2094   001022  EF48  F008         	goto	l3390
  2095   001026                     u3140:
  2096   001026                     
  2097                           ;main.c: 512:             {;main.c: 513:                 clcd_print("  ", (0xC0 + (3)));
  2098   001026  0E26               	movlw	low (STR_15+16)
  2099   001028  6E07               	movwf	clcd_print@data^0,c
  2100   00102A  0E06               	movlw	high (STR_15+16)
  2101   00102C  6E08               	movwf	(clcd_print@data+1)^0,c
  2102   00102E  0EC3               	movlw	195
  2103   001030  6E09               	movwf	clcd_print@addr^0,c
  2104   001032  EC99  F011         	call	_clcd_print	;wreg free
  2105   001036                     l3386:
  2106   001036  C037  F013         	movff	main@delay_185,??_main
  2107   00103A  C038  F014         	movff	main@delay_185+1,??_main+1
  2108   00103E  C039  F015         	movff	main@delay_185+2,??_main+2
  2109   001042  C03A  F016         	movff	main@delay_185+3,??_main+3
  2110   001046  C03B  F017         	movff	main@delay_185+4,??_main+4
  2111   00104A  C03C  F018         	movff	main@delay_185+5,??_main+5
  2112   00104E  C03D  F019         	movff	main@delay_185+6,??_main+6
  2113   001052  C03E  F01A         	movff	main@delay_185+7,??_main+7
  2114   001056  2A37               	incf	main@delay_185^0,f,c
  2115   001058  0E00               	movlw	0
  2116   00105A  2238               	addwfc	(main@delay_185+1)^0,f,c
  2117   00105C  2239               	addwfc	(main@delay_185+2)^0,f,c
  2118   00105E  223A               	addwfc	(main@delay_185+3)^0,f,c
  2119   001060  223B               	addwfc	(main@delay_185+4)^0,f,c
  2120   001062  223C               	addwfc	(main@delay_185+5)^0,f,c
  2121   001064  223D               	addwfc	(main@delay_185+6)^0,f,c
  2122   001066  223E               	addwfc	(main@delay_185+7)^0,f,c
  2123   001068  501A               	movf	(??_main+7)^0,w,c
  2124   00106A  1019               	iorwf	(??_main+6)^0,w,c
  2125   00106C  1018               	iorwf	(??_main+5)^0,w,c
  2126   00106E  1017               	iorwf	(??_main+4)^0,w,c
  2127   001070  1016               	iorwf	(??_main+3)^0,w,c
  2128   001072  1015               	iorwf	(??_main+2)^0,w,c
  2129   001074  E10B               	bnz	u3150
  2130   001076  0E50               	movlw	80
  2131   001078  5C13               	subwf	??_main^0,w,c
  2132   00107A  0EC3               	movlw	195
  2133   00107C  5814               	subwfb	(??_main+1)^0,w,c
  2134   00107E  A0D8               	btfss	status,0,c
  2135   001080  EF44  F008         	goto	u3151
  2136   001084  EF46  F008         	goto	u3150
  2137   001088                     u3151:
  2138   001088  EF1B  F008         	goto	l3386
  2139   00108C                     u3150:
  2140   00108C  EF02  F008         	goto	l3380
  2141   001090                     l3390:
  2142   001090  0E02               	movlw	2
  2143   001092  184B               	xorwf	_field^0,w,c
  2144   001094  104C               	iorwf	(_field+1)^0,w,c
  2145   001096  A4D8               	btfss	status,2,c
  2146   001098  EF50  F008         	goto	u3161
  2147   00109C  EF52  F008         	goto	u3160
  2148   0010A0                     u3161:
  2149   0010A0  EFD2  F004         	goto	l188
  2150   0010A4                     u3160:
  2151   0010A4                     
  2152                           ;main.c: 518:             {;main.c: 519:                 clcd_print("  ", (0xC0 + (6)));
  2153   0010A4  0E26               	movlw	low (STR_15+16)
  2154   0010A6  6E07               	movwf	clcd_print@data^0,c
  2155   0010A8  0E06               	movlw	high (STR_15+16)
  2156   0010AA  6E08               	movwf	(clcd_print@data+1)^0,c
  2157   0010AC  0EC6               	movlw	198
  2158   0010AE  6E09               	movwf	clcd_print@addr^0,c
  2159   0010B0  EC99  F011         	call	_clcd_print	;wreg free
  2160   0010B4                     l3394:
  2161   0010B4  C037  F013         	movff	main@delay_185,??_main
  2162   0010B8  C038  F014         	movff	main@delay_185+1,??_main+1
  2163   0010BC  C039  F015         	movff	main@delay_185+2,??_main+2
  2164   0010C0  C03A  F016         	movff	main@delay_185+3,??_main+3
  2165   0010C4  C03B  F017         	movff	main@delay_185+4,??_main+4
  2166   0010C8  C03C  F018         	movff	main@delay_185+5,??_main+5
  2167   0010CC  C03D  F019         	movff	main@delay_185+6,??_main+6
  2168   0010D0  C03E  F01A         	movff	main@delay_185+7,??_main+7
  2169   0010D4  2A37               	incf	main@delay_185^0,f,c
  2170   0010D6  0E00               	movlw	0
  2171   0010D8  2238               	addwfc	(main@delay_185+1)^0,f,c
  2172   0010DA  2239               	addwfc	(main@delay_185+2)^0,f,c
  2173   0010DC  223A               	addwfc	(main@delay_185+3)^0,f,c
  2174   0010DE  223B               	addwfc	(main@delay_185+4)^0,f,c
  2175   0010E0  223C               	addwfc	(main@delay_185+5)^0,f,c
  2176   0010E2  223D               	addwfc	(main@delay_185+6)^0,f,c
  2177   0010E4  223E               	addwfc	(main@delay_185+7)^0,f,c
  2178   0010E6  501A               	movf	(??_main+7)^0,w,c
  2179   0010E8  1019               	iorwf	(??_main+6)^0,w,c
  2180   0010EA  1018               	iorwf	(??_main+5)^0,w,c
  2181   0010EC  1017               	iorwf	(??_main+4)^0,w,c
  2182   0010EE  1016               	iorwf	(??_main+3)^0,w,c
  2183   0010F0  1015               	iorwf	(??_main+2)^0,w,c
  2184   0010F2  E10B               	bnz	u3170
  2185   0010F4  0E50               	movlw	80
  2186   0010F6  5C13               	subwf	??_main^0,w,c
  2187   0010F8  0EC3               	movlw	195
  2188   0010FA  5814               	subwfb	(??_main+1)^0,w,c
  2189   0010FC  A0D8               	btfss	status,0,c
  2190   0010FE  EF83  F008         	goto	u3171
  2191   001102  EF85  F008         	goto	u3170
  2192   001106                     u3171:
  2193   001106  EF5A  F008         	goto	l3394
  2194   00110A                     u3170:
  2195   00110A  EF02  F008         	goto	l3380
  2196   00110E  EF00  F000         	goto	start
  2197   001112                     __end_of_main:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _reading_eeprom *****************
  2201 ;; Defined at:
  2202 ;;		line 52 in file "main.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  main_index      2   12[COMRAM] short 
  2207 ;;  index           2   14[COMRAM] short 
  2208 ;;  add2            2   10[COMRAM] short 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2218 ;;      Params:         0       0       0       0       0       0       0
  2219 ;;      Locals:         6       0       0       0       0       0       0
  2220 ;;      Temps:          2       0       0       0       0       0       0
  2221 ;;      Totals:         8       0       0       0       0       0       0
  2222 ;;Total ram usage:        8 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 4
  2225 ;; This function calls:
  2226 ;;		___awdiv
  2227 ;;		___wmul
  2228 ;;		_read_external_eeprom
  2229 ;; This function is called by:
  2230 ;;		_main
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text1
  2235   0019C4                     __ptext1:
  2236                           	callstack 0
  2237   0019C4                     _reading_eeprom:
  2238                           	callstack 26
  2239   0019C4                     
  2240                           ;main.c: 54:     short index=0 , add2=0;
  2241   0019C4  0E00               	movlw	0
  2242   0019C6  6E10               	movwf	(reading_eeprom@index+1)^0,c
  2243   0019C8  0E00               	movlw	0
  2244   0019CA  6E0F               	movwf	reading_eeprom@index^0,c
  2245   0019CC                     
  2246                           ;main.c: 55:     if(flag_count==1)
  2247   0019CC  043F               	decf	_flag_count^0,w,c
  2248   0019CE  1040               	iorwf	(_flag_count+1)^0,w,c
  2249   0019D0  A4D8               	btfss	status,2,c
  2250   0019D2  EFED  F00C         	goto	u1981
  2251   0019D6  EFEF  F00C         	goto	u1980
  2252   0019DA                     u1981:
  2253   0019DA  EFF9  F00C         	goto	l2736
  2254   0019DE                     u1980:
  2255   0019DE                     
  2256                           ;main.c: 56:     {;main.c: 57:         add2 = add;
  2257   0019DE  C047  F00B         	movff	_add,reading_eeprom@add2
  2258   0019E2  C048  F00C         	movff	_add+1,reading_eeprom@add2+1
  2259   0019E6                     
  2260                           ;main.c: 58:         end = 10;
  2261   0019E6  0E00               	movlw	0
  2262   0019E8  6E54               	movwf	(_end+1)^0,c
  2263   0019EA  0E0A               	movlw	10
  2264   0019EC  6E53               	movwf	_end^0,c
  2265                           
  2266                           ;main.c: 59:     }
  2267   0019EE  EF0B  F00D         	goto	l2740
  2268   0019F2                     l2736:
  2269                           
  2270                           ;main.c: 61:     {;main.c: 62:         add2 = 0;
  2271   0019F2  0E00               	movlw	0
  2272   0019F4  6E0C               	movwf	(reading_eeprom@add2+1)^0,c
  2273   0019F6  0E00               	movlw	0
  2274   0019F8  6E0B               	movwf	reading_eeprom@add2^0,c
  2275   0019FA                     
  2276                           ;main.c: 63:         end = add/10;
  2277   0019FA  C047  F001         	movff	_add,___awdiv@dividend
  2278   0019FE  C048  F002         	movff	_add+1,___awdiv@dividend+1
  2279   001A02  0E00               	movlw	0
  2280   001A04  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2281   001A06  0E0A               	movlw	10
  2282   001A08  6E03               	movwf	___awdiv@divisor^0,c
  2283   001A0A  EC16  F010         	call	___awdiv	;wreg free
  2284   001A0E  C001  F053         	movff	?___awdiv,_end
  2285   001A12  C002  F054         	movff	?___awdiv+1,_end+1
  2286   001A16                     l2740:
  2287                           
  2288                           ;main.c: 65:     for(short main_index=0;main_index<end;main_index++)
  2289   001A16  0E00               	movlw	0
  2290   001A18  6E0E               	movwf	(reading_eeprom@main_index+1)^0,c
  2291   001A1A  0E00               	movlw	0
  2292   001A1C  6E0D               	movwf	reading_eeprom@main_index^0,c
  2293   001A1E  EF01  F00F         	goto	l2810
  2294   001A22                     l2742:
  2295                           
  2296                           ;main.c: 66:     {;main.c: 67:         detail[main_index][index++] = main_index+48;
  2297   001A22  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2298   001A26  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2299   001A2A  0E00               	movlw	0
  2300   001A2C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2301   001A2E  0E12               	movlw	18
  2302   001A30  6E03               	movwf	___wmul@multiplicand^0,c
  2303   001A32  EC2E  F013         	call	___wmul	;wreg free
  2304   001A36  0E00               	movlw	low _detail
  2305   001A38  2401               	addwf	?___wmul^0,w,c
  2306   001A3A  6ED9               	movwf	fsr2l,c
  2307   001A3C  0E01               	movlw	high _detail
  2308   001A3E  2002               	addwfc	(?___wmul+1)^0,w,c
  2309   001A40  6EDA               	movwf	fsr2h,c
  2310   001A42  500D               	movf	reading_eeprom@main_index^0,w,c
  2311   001A44  0F30               	addlw	48
  2312   001A46  6EDF               	movwf	indf2,c
  2313   001A48  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2314   001A4A  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2315   001A4C                     
  2316                           ;main.c: 68:         detail[main_index][index++] = ' ';
  2317   001A4C  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2318   001A50  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2319   001A54  0E00               	movlw	0
  2320   001A56  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2321   001A58  0E12               	movlw	18
  2322   001A5A  6E03               	movwf	___wmul@multiplicand^0,c
  2323   001A5C  EC2E  F013         	call	___wmul	;wreg free
  2324   001A60  0E00               	movlw	low _detail
  2325   001A62  2401               	addwf	?___wmul^0,w,c
  2326   001A64  6E09               	movwf	??_reading_eeprom^0,c
  2327   001A66  0E01               	movlw	high _detail
  2328   001A68  2002               	addwfc	(?___wmul+1)^0,w,c
  2329   001A6A  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2330   001A6C  500F               	movf	reading_eeprom@index^0,w,c
  2331   001A6E  2409               	addwf	??_reading_eeprom^0,w,c
  2332   001A70  6ED9               	movwf	fsr2l,c
  2333   001A72  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2334   001A74  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2335   001A76  6EDA               	movwf	fsr2h,c
  2336   001A78  0E20               	movlw	32
  2337   001A7A  6EDF               	movwf	indf2,c
  2338   001A7C  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2339   001A7E  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2340   001A80                     
  2341                           ;main.c: 69:         detail[main_index][index++] = read_external_eeprom(add2++);
  2342   001A80  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2343   001A84  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2344   001A88  0E00               	movlw	0
  2345   001A8A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2346   001A8C  0E12               	movlw	18
  2347   001A8E  6E03               	movwf	___wmul@multiplicand^0,c
  2348   001A90  EC2E  F013         	call	___wmul	;wreg free
  2349   001A94  0E00               	movlw	low _detail
  2350   001A96  2401               	addwf	?___wmul^0,w,c
  2351   001A98  6E09               	movwf	??_reading_eeprom^0,c
  2352   001A9A  0E01               	movlw	high _detail
  2353   001A9C  2002               	addwfc	(?___wmul+1)^0,w,c
  2354   001A9E  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2355   001AA0  500F               	movf	reading_eeprom@index^0,w,c
  2356   001AA2  2409               	addwf	??_reading_eeprom^0,w,c
  2357   001AA4  6ED9               	movwf	fsr2l,c
  2358   001AA6  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2359   001AA8  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2360   001AAA  6EDA               	movwf	fsr2h,c
  2361   001AAC  500B               	movf	reading_eeprom@add2^0,w,c
  2362   001AAE  EC04  F013         	call	_read_external_eeprom
  2363   001AB2  6EDF               	movwf	indf2,c
  2364   001AB4  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2365   001AB6  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2366   001AB8  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2367   001ABA  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2368   001ABC                     
  2369                           ;main.c: 70:         detail[main_index][index++] = read_external_eeprom(add2++);
  2370   001ABC  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2371   001AC0  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2372   001AC4  0E00               	movlw	0
  2373   001AC6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2374   001AC8  0E12               	movlw	18
  2375   001ACA  6E03               	movwf	___wmul@multiplicand^0,c
  2376   001ACC  EC2E  F013         	call	___wmul	;wreg free
  2377   001AD0  0E00               	movlw	low _detail
  2378   001AD2  2401               	addwf	?___wmul^0,w,c
  2379   001AD4  6E09               	movwf	??_reading_eeprom^0,c
  2380   001AD6  0E01               	movlw	high _detail
  2381   001AD8  2002               	addwfc	(?___wmul+1)^0,w,c
  2382   001ADA  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2383   001ADC  500F               	movf	reading_eeprom@index^0,w,c
  2384   001ADE  2409               	addwf	??_reading_eeprom^0,w,c
  2385   001AE0  6ED9               	movwf	fsr2l,c
  2386   001AE2  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2387   001AE4  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2388   001AE6  6EDA               	movwf	fsr2h,c
  2389   001AE8  500B               	movf	reading_eeprom@add2^0,w,c
  2390   001AEA  EC04  F013         	call	_read_external_eeprom
  2391   001AEE  6EDF               	movwf	indf2,c
  2392   001AF0  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2393   001AF2  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2394   001AF4  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2395   001AF6  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2396   001AF8                     
  2397                           ;main.c: 71:         detail[main_index][index++] = ':';
  2398   001AF8  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2399   001AFC  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2400   001B00  0E00               	movlw	0
  2401   001B02  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2402   001B04  0E12               	movlw	18
  2403   001B06  6E03               	movwf	___wmul@multiplicand^0,c
  2404   001B08  EC2E  F013         	call	___wmul	;wreg free
  2405   001B0C  0E00               	movlw	low _detail
  2406   001B0E  2401               	addwf	?___wmul^0,w,c
  2407   001B10  6E09               	movwf	??_reading_eeprom^0,c
  2408   001B12  0E01               	movlw	high _detail
  2409   001B14  2002               	addwfc	(?___wmul+1)^0,w,c
  2410   001B16  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2411   001B18  500F               	movf	reading_eeprom@index^0,w,c
  2412   001B1A  2409               	addwf	??_reading_eeprom^0,w,c
  2413   001B1C  6ED9               	movwf	fsr2l,c
  2414   001B1E  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2415   001B20  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2416   001B22  6EDA               	movwf	fsr2h,c
  2417   001B24  0E3A               	movlw	58
  2418   001B26  6EDF               	movwf	indf2,c
  2419   001B28  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2420   001B2A  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2421                           
  2422                           ;main.c: 72:         detail[main_index][index++] = read_external_eeprom(add2++);
  2423   001B2C  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2424   001B30  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2425   001B34  0E00               	movlw	0
  2426   001B36  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2427   001B38  0E12               	movlw	18
  2428   001B3A  6E03               	movwf	___wmul@multiplicand^0,c
  2429   001B3C  EC2E  F013         	call	___wmul	;wreg free
  2430   001B40  0E00               	movlw	low _detail
  2431   001B42  2401               	addwf	?___wmul^0,w,c
  2432   001B44  6E09               	movwf	??_reading_eeprom^0,c
  2433   001B46  0E01               	movlw	high _detail
  2434   001B48  2002               	addwfc	(?___wmul+1)^0,w,c
  2435   001B4A  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2436   001B4C  500F               	movf	reading_eeprom@index^0,w,c
  2437   001B4E  2409               	addwf	??_reading_eeprom^0,w,c
  2438   001B50  6ED9               	movwf	fsr2l,c
  2439   001B52  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2440   001B54  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2441   001B56  6EDA               	movwf	fsr2h,c
  2442   001B58  500B               	movf	reading_eeprom@add2^0,w,c
  2443   001B5A  EC04  F013         	call	_read_external_eeprom
  2444   001B5E  6EDF               	movwf	indf2,c
  2445   001B60  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2446   001B62  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2447   001B64  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2448   001B66  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2449                           
  2450                           ;main.c: 73:         detail[main_index][index++] = read_external_eeprom(add2++);
  2451   001B68  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2452   001B6C  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2453   001B70  0E00               	movlw	0
  2454   001B72  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2455   001B74  0E12               	movlw	18
  2456   001B76  6E03               	movwf	___wmul@multiplicand^0,c
  2457   001B78  EC2E  F013         	call	___wmul	;wreg free
  2458   001B7C  0E00               	movlw	low _detail
  2459   001B7E  2401               	addwf	?___wmul^0,w,c
  2460   001B80  6E09               	movwf	??_reading_eeprom^0,c
  2461   001B82  0E01               	movlw	high _detail
  2462   001B84  2002               	addwfc	(?___wmul+1)^0,w,c
  2463   001B86  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2464   001B88  500F               	movf	reading_eeprom@index^0,w,c
  2465   001B8A  2409               	addwf	??_reading_eeprom^0,w,c
  2466   001B8C  6ED9               	movwf	fsr2l,c
  2467   001B8E  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2468   001B90  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2469   001B92  6EDA               	movwf	fsr2h,c
  2470   001B94  500B               	movf	reading_eeprom@add2^0,w,c
  2471   001B96  EC04  F013         	call	_read_external_eeprom
  2472   001B9A  6EDF               	movwf	indf2,c
  2473   001B9C  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2474   001B9E  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2475   001BA0  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2476   001BA2  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2477                           
  2478                           ;main.c: 74:         detail[main_index][index++] = ':';
  2479   001BA4  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2480   001BA8  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2481   001BAC  0E00               	movlw	0
  2482   001BAE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2483   001BB0  0E12               	movlw	18
  2484   001BB2  6E03               	movwf	___wmul@multiplicand^0,c
  2485   001BB4  EC2E  F013         	call	___wmul	;wreg free
  2486   001BB8  0E00               	movlw	low _detail
  2487   001BBA  2401               	addwf	?___wmul^0,w,c
  2488   001BBC  6E09               	movwf	??_reading_eeprom^0,c
  2489   001BBE  0E01               	movlw	high _detail
  2490   001BC0  2002               	addwfc	(?___wmul+1)^0,w,c
  2491   001BC2  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2492   001BC4  500F               	movf	reading_eeprom@index^0,w,c
  2493   001BC6  2409               	addwf	??_reading_eeprom^0,w,c
  2494   001BC8  6ED9               	movwf	fsr2l,c
  2495   001BCA  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2496   001BCC  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2497   001BCE  6EDA               	movwf	fsr2h,c
  2498   001BD0  0E3A               	movlw	58
  2499   001BD2  6EDF               	movwf	indf2,c
  2500   001BD4  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2501   001BD6  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2502   001BD8                     
  2503                           ;main.c: 75:         detail[main_index][index++] = read_external_eeprom(add2++);
  2504   001BD8  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2505   001BDC  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2506   001BE0  0E00               	movlw	0
  2507   001BE2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2508   001BE4  0E12               	movlw	18
  2509   001BE6  6E03               	movwf	___wmul@multiplicand^0,c
  2510   001BE8  EC2E  F013         	call	___wmul	;wreg free
  2511   001BEC  0E00               	movlw	low _detail
  2512   001BEE  2401               	addwf	?___wmul^0,w,c
  2513   001BF0  6E09               	movwf	??_reading_eeprom^0,c
  2514   001BF2  0E01               	movlw	high _detail
  2515   001BF4  2002               	addwfc	(?___wmul+1)^0,w,c
  2516   001BF6  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2517   001BF8  500F               	movf	reading_eeprom@index^0,w,c
  2518   001BFA  2409               	addwf	??_reading_eeprom^0,w,c
  2519   001BFC  6ED9               	movwf	fsr2l,c
  2520   001BFE  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2521   001C00  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2522   001C02  6EDA               	movwf	fsr2h,c
  2523   001C04  500B               	movf	reading_eeprom@add2^0,w,c
  2524   001C06  EC04  F013         	call	_read_external_eeprom
  2525   001C0A  6EDF               	movwf	indf2,c
  2526   001C0C  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2527   001C0E  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2528   001C10  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2529   001C12  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2530   001C14                     
  2531                           ;main.c: 76:         detail[main_index][index++] = read_external_eeprom(add2++);
  2532   001C14  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2533   001C18  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2534   001C1C  0E00               	movlw	0
  2535   001C1E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2536   001C20  0E12               	movlw	18
  2537   001C22  6E03               	movwf	___wmul@multiplicand^0,c
  2538   001C24  EC2E  F013         	call	___wmul	;wreg free
  2539   001C28  0E00               	movlw	low _detail
  2540   001C2A  2401               	addwf	?___wmul^0,w,c
  2541   001C2C  6E09               	movwf	??_reading_eeprom^0,c
  2542   001C2E  0E01               	movlw	high _detail
  2543   001C30  2002               	addwfc	(?___wmul+1)^0,w,c
  2544   001C32  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2545   001C34  500F               	movf	reading_eeprom@index^0,w,c
  2546   001C36  2409               	addwf	??_reading_eeprom^0,w,c
  2547   001C38  6ED9               	movwf	fsr2l,c
  2548   001C3A  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2549   001C3C  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2550   001C3E  6EDA               	movwf	fsr2h,c
  2551   001C40  500B               	movf	reading_eeprom@add2^0,w,c
  2552   001C42  EC04  F013         	call	_read_external_eeprom
  2553   001C46  6EDF               	movwf	indf2,c
  2554   001C48  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2555   001C4A  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2556   001C4C  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2557   001C4E  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2558   001C50                     
  2559                           ;main.c: 77:         detail[main_index][index++] = ' ';
  2560   001C50  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2561   001C54  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2562   001C58  0E00               	movlw	0
  2563   001C5A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2564   001C5C  0E12               	movlw	18
  2565   001C5E  6E03               	movwf	___wmul@multiplicand^0,c
  2566   001C60  EC2E  F013         	call	___wmul	;wreg free
  2567   001C64  0E00               	movlw	low _detail
  2568   001C66  2401               	addwf	?___wmul^0,w,c
  2569   001C68  6E09               	movwf	??_reading_eeprom^0,c
  2570   001C6A  0E01               	movlw	high _detail
  2571   001C6C  2002               	addwfc	(?___wmul+1)^0,w,c
  2572   001C6E  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2573   001C70  500F               	movf	reading_eeprom@index^0,w,c
  2574   001C72  2409               	addwf	??_reading_eeprom^0,w,c
  2575   001C74  6ED9               	movwf	fsr2l,c
  2576   001C76  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2577   001C78  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2578   001C7A  6EDA               	movwf	fsr2h,c
  2579   001C7C  0E20               	movlw	32
  2580   001C7E  6EDF               	movwf	indf2,c
  2581   001C80  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2582   001C82  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2583   001C84                     
  2584                           ;main.c: 78:         detail[main_index][index++] = read_external_eeprom(add2++);
  2585   001C84  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2586   001C88  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2587   001C8C  0E00               	movlw	0
  2588   001C8E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2589   001C90  0E12               	movlw	18
  2590   001C92  6E03               	movwf	___wmul@multiplicand^0,c
  2591   001C94  EC2E  F013         	call	___wmul	;wreg free
  2592   001C98  0E00               	movlw	low _detail
  2593   001C9A  2401               	addwf	?___wmul^0,w,c
  2594   001C9C  6E09               	movwf	??_reading_eeprom^0,c
  2595   001C9E  0E01               	movlw	high _detail
  2596   001CA0  2002               	addwfc	(?___wmul+1)^0,w,c
  2597   001CA2  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2598   001CA4  500F               	movf	reading_eeprom@index^0,w,c
  2599   001CA6  2409               	addwf	??_reading_eeprom^0,w,c
  2600   001CA8  6ED9               	movwf	fsr2l,c
  2601   001CAA  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2602   001CAC  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2603   001CAE  6EDA               	movwf	fsr2h,c
  2604   001CB0  500B               	movf	reading_eeprom@add2^0,w,c
  2605   001CB2  EC04  F013         	call	_read_external_eeprom
  2606   001CB6  6EDF               	movwf	indf2,c
  2607   001CB8  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2608   001CBA  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2609   001CBC  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2610   001CBE  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2611   001CC0                     
  2612                           ;main.c: 79:         detail[main_index][index++] = read_external_eeprom(add2++);
  2613   001CC0  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2614   001CC4  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2615   001CC8  0E00               	movlw	0
  2616   001CCA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2617   001CCC  0E12               	movlw	18
  2618   001CCE  6E03               	movwf	___wmul@multiplicand^0,c
  2619   001CD0  EC2E  F013         	call	___wmul	;wreg free
  2620   001CD4  0E00               	movlw	low _detail
  2621   001CD6  2401               	addwf	?___wmul^0,w,c
  2622   001CD8  6E09               	movwf	??_reading_eeprom^0,c
  2623   001CDA  0E01               	movlw	high _detail
  2624   001CDC  2002               	addwfc	(?___wmul+1)^0,w,c
  2625   001CDE  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2626   001CE0  500F               	movf	reading_eeprom@index^0,w,c
  2627   001CE2  2409               	addwf	??_reading_eeprom^0,w,c
  2628   001CE4  6ED9               	movwf	fsr2l,c
  2629   001CE6  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2630   001CE8  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2631   001CEA  6EDA               	movwf	fsr2h,c
  2632   001CEC  500B               	movf	reading_eeprom@add2^0,w,c
  2633   001CEE  EC04  F013         	call	_read_external_eeprom
  2634   001CF2  6EDF               	movwf	indf2,c
  2635   001CF4  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2636   001CF6  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2637   001CF8  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2638   001CFA  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2639   001CFC                     
  2640                           ;main.c: 80:         detail[main_index][index++] = ' ';
  2641   001CFC  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2642   001D00  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2643   001D04  0E00               	movlw	0
  2644   001D06  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2645   001D08  0E12               	movlw	18
  2646   001D0A  6E03               	movwf	___wmul@multiplicand^0,c
  2647   001D0C  EC2E  F013         	call	___wmul	;wreg free
  2648   001D10  0E00               	movlw	low _detail
  2649   001D12  2401               	addwf	?___wmul^0,w,c
  2650   001D14  6E09               	movwf	??_reading_eeprom^0,c
  2651   001D16  0E01               	movlw	high _detail
  2652   001D18  2002               	addwfc	(?___wmul+1)^0,w,c
  2653   001D1A  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2654   001D1C  500F               	movf	reading_eeprom@index^0,w,c
  2655   001D1E  2409               	addwf	??_reading_eeprom^0,w,c
  2656   001D20  6ED9               	movwf	fsr2l,c
  2657   001D22  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2658   001D24  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2659   001D26  6EDA               	movwf	fsr2h,c
  2660   001D28  0E20               	movlw	32
  2661   001D2A  6EDF               	movwf	indf2,c
  2662   001D2C  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2663   001D2E  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2664                           
  2665                           ;main.c: 81:         detail[main_index][index++] = read_external_eeprom(add2++);
  2666   001D30  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2667   001D34  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2668   001D38  0E00               	movlw	0
  2669   001D3A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2670   001D3C  0E12               	movlw	18
  2671   001D3E  6E03               	movwf	___wmul@multiplicand^0,c
  2672   001D40  EC2E  F013         	call	___wmul	;wreg free
  2673   001D44  0E00               	movlw	low _detail
  2674   001D46  2401               	addwf	?___wmul^0,w,c
  2675   001D48  6E09               	movwf	??_reading_eeprom^0,c
  2676   001D4A  0E01               	movlw	high _detail
  2677   001D4C  2002               	addwfc	(?___wmul+1)^0,w,c
  2678   001D4E  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2679   001D50  500F               	movf	reading_eeprom@index^0,w,c
  2680   001D52  2409               	addwf	??_reading_eeprom^0,w,c
  2681   001D54  6ED9               	movwf	fsr2l,c
  2682   001D56  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2683   001D58  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2684   001D5A  6EDA               	movwf	fsr2h,c
  2685   001D5C  500B               	movf	reading_eeprom@add2^0,w,c
  2686   001D5E  EC04  F013         	call	_read_external_eeprom
  2687   001D62  6EDF               	movwf	indf2,c
  2688   001D64  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2689   001D66  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2690   001D68  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2691   001D6A  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2692                           
  2693                           ;main.c: 82:         detail[main_index][index++] = read_external_eeprom(add2++);
  2694   001D6C  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2695   001D70  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2696   001D74  0E00               	movlw	0
  2697   001D76  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2698   001D78  0E12               	movlw	18
  2699   001D7A  6E03               	movwf	___wmul@multiplicand^0,c
  2700   001D7C  EC2E  F013         	call	___wmul	;wreg free
  2701   001D80  0E00               	movlw	low _detail
  2702   001D82  2401               	addwf	?___wmul^0,w,c
  2703   001D84  6E09               	movwf	??_reading_eeprom^0,c
  2704   001D86  0E01               	movlw	high _detail
  2705   001D88  2002               	addwfc	(?___wmul+1)^0,w,c
  2706   001D8A  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2707   001D8C  500F               	movf	reading_eeprom@index^0,w,c
  2708   001D8E  2409               	addwf	??_reading_eeprom^0,w,c
  2709   001D90  6ED9               	movwf	fsr2l,c
  2710   001D92  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2711   001D94  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2712   001D96  6EDA               	movwf	fsr2h,c
  2713   001D98  500B               	movf	reading_eeprom@add2^0,w,c
  2714   001D9A  EC04  F013         	call	_read_external_eeprom
  2715   001D9E  6EDF               	movwf	indf2,c
  2716   001DA0  4A0B               	infsnz	reading_eeprom@add2^0,f,c
  2717   001DA2  2A0C               	incf	(reading_eeprom@add2+1)^0,f,c
  2718   001DA4  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2719   001DA6  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2720                           
  2721                           ;main.c: 83:         detail[main_index][index++] = '\0';
  2722   001DA8  C00D  F001         	movff	reading_eeprom@main_index,___wmul@multiplier
  2723   001DAC  C00E  F002         	movff	reading_eeprom@main_index+1,___wmul@multiplier+1
  2724   001DB0  0E00               	movlw	0
  2725   001DB2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2726   001DB4  0E12               	movlw	18
  2727   001DB6  6E03               	movwf	___wmul@multiplicand^0,c
  2728   001DB8  EC2E  F013         	call	___wmul	;wreg free
  2729   001DBC  0E00               	movlw	low _detail
  2730   001DBE  2401               	addwf	?___wmul^0,w,c
  2731   001DC0  6E09               	movwf	??_reading_eeprom^0,c
  2732   001DC2  0E01               	movlw	high _detail
  2733   001DC4  2002               	addwfc	(?___wmul+1)^0,w,c
  2734   001DC6  6E0A               	movwf	(??_reading_eeprom+1)^0,c
  2735   001DC8  500F               	movf	reading_eeprom@index^0,w,c
  2736   001DCA  2409               	addwf	??_reading_eeprom^0,w,c
  2737   001DCC  6ED9               	movwf	fsr2l,c
  2738   001DCE  5010               	movf	(reading_eeprom@index+1)^0,w,c
  2739   001DD0  200A               	addwfc	(??_reading_eeprom+1)^0,w,c
  2740   001DD2  6EDA               	movwf	fsr2h,c
  2741   001DD4  6ADF               	clrf	indf2,c
  2742   001DD6  4A0F               	infsnz	reading_eeprom@index^0,f,c
  2743   001DD8  2A10               	incf	(reading_eeprom@index+1)^0,f,c
  2744   001DDA                     
  2745                           ;main.c: 84:         index=0;
  2746   001DDA  0E00               	movlw	0
  2747   001DDC  6E10               	movwf	(reading_eeprom@index+1)^0,c
  2748   001DDE  0E00               	movlw	0
  2749   001DE0  6E0F               	movwf	reading_eeprom@index^0,c
  2750   001DE2                     
  2751                           ;main.c: 85:         if(add2==100)
  2752   001DE2  0E64               	movlw	100
  2753   001DE4  180B               	xorwf	reading_eeprom@add2^0,w,c
  2754   001DE6  100C               	iorwf	(reading_eeprom@add2+1)^0,w,c
  2755   001DE8  A4D8               	btfss	status,2,c
  2756   001DEA  EFF9  F00E         	goto	u1991
  2757   001DEE  EFFB  F00E         	goto	u1990
  2758   001DF2                     u1991:
  2759   001DF2  EFFF  F00E         	goto	l2808
  2760   001DF6                     u1990:
  2761   001DF6                     
  2762                           ;main.c: 86:             add2=0;
  2763   001DF6  0E00               	movlw	0
  2764   001DF8  6E0C               	movwf	(reading_eeprom@add2+1)^0,c
  2765   001DFA  0E00               	movlw	0
  2766   001DFC  6E0B               	movwf	reading_eeprom@add2^0,c
  2767   001DFE                     l2808:
  2768                           
  2769                           ;main.c: 87:     }
  2770   001DFE  4A0D               	infsnz	reading_eeprom@main_index^0,f,c
  2771   001E00  2A0E               	incf	(reading_eeprom@main_index+1)^0,f,c
  2772   001E02                     l2810:
  2773   001E02  5053               	movf	_end^0,w,c
  2774   001E04  5C0D               	subwf	reading_eeprom@main_index^0,w,c
  2775   001E06  500E               	movf	(reading_eeprom@main_index+1)^0,w,c
  2776   001E08  0A80               	xorlw	128
  2777   001E0A  6E09               	movwf	??_reading_eeprom^0,c
  2778   001E0C  5054               	movf	(_end+1)^0,w,c
  2779   001E0E  0A80               	xorlw	128
  2780   001E10  5809               	subwfb	??_reading_eeprom^0,w,c
  2781   001E12  A0D8               	btfss	status,0,c
  2782   001E14  EF0E  F00F         	goto	u2001
  2783   001E18  EF10  F00F         	goto	u2000
  2784   001E1C                     u2001:
  2785   001E1C  EF11  F00D         	goto	l2742
  2786   001E20                     u2000:
  2787   001E20  0012               	return		;funcret
  2788   001E22                     __end_of_reading_eeprom:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _read_external_eeprom *****************
  2792 ;; Defined at:
  2793 ;;		line 27 in file "external_eeprom.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  address         1    wreg     unsigned char 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  address         1    1[COMRAM] unsigned char 
  2798 ;;  data            1    2[COMRAM] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      unsigned char 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2808 ;;      Params:         0       0       0       0       0       0       0
  2809 ;;      Locals:         2       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0
  2811 ;;      Totals:         2       0       0       0       0       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 3
  2815 ;; This function calls:
  2816 ;;		_i2c_read
  2817 ;;		_i2c_rep_start
  2818 ;;		_i2c_start
  2819 ;;		_i2c_stop
  2820 ;;		_i2c_write
  2821 ;; This function is called by:
  2822 ;;		_reading_eeprom
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text2
  2827   002608                     __ptext2:
  2828                           	callstack 0
  2829   002608                     _read_external_eeprom:
  2830                           	callstack 26
  2831                           
  2832                           ;incstack = 0
  2833                           ;read_external_eeprom@address stored from wreg
  2834   002608  6E02               	movwf	read_external_eeprom@address^0,c
  2835   00260A                     
  2836                           ;external_eeprom.c: 27: unsigned char read_external_eeprom(unsigned char address);extern
      +                          al_eeprom.c: 28: {;external_eeprom.c: 29:     unsigned char data;;external_eeprom.c: 31:
      +                               i2c_start();
  2837   00260A  ECD7  F013         	call	_i2c_start	;wreg free
  2838   00260E                     
  2839                           ;external_eeprom.c: 32:     i2c_write(0xA0);
  2840   00260E  0EA0               	movlw	160
  2841   002610  ECC5  F013         	call	_i2c_write
  2842   002614                     
  2843                           ;external_eeprom.c: 33:     i2c_write(address);
  2844   002614  5002               	movf	read_external_eeprom@address^0,w,c
  2845   002616  ECC5  F013         	call	_i2c_write
  2846   00261A                     
  2847                           ;external_eeprom.c: 34:     i2c_rep_start();
  2848   00261A  ECCB  F013         	call	_i2c_rep_start	;wreg free
  2849   00261E                     
  2850                           ;external_eeprom.c: 35:     i2c_write(0xA1);
  2851   00261E  0EA1               	movlw	161
  2852   002620  ECC5  F013         	call	_i2c_write
  2853                           
  2854                           ;external_eeprom.c: 36:     data = i2c_read();
  2855   002624  ECBF  F013         	call	_i2c_read	;wreg free
  2856   002628  6E03               	movwf	read_external_eeprom@data^0,c
  2857   00262A                     
  2858                           ;external_eeprom.c: 37:     i2c_stop();
  2859   00262A  ECD3  F013         	call	_i2c_stop	;wreg free
  2860                           
  2861                           ;external_eeprom.c: 39:     return data;
  2862   00262E  5003               	movf	read_external_eeprom@data^0,w,c
  2863   002630  0012               	return		;funcret
  2864   002632                     __end_of_read_external_eeprom:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function ___wmul *****************
  2868 ;; Defined at:
  2869 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  multiplier      2    0[COMRAM] unsigned int 
  2872 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  product         2    4[COMRAM] unsigned int 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2    0[COMRAM] unsigned int 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, prodl, prodh
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2884 ;;      Params:         4       0       0       0       0       0       0
  2885 ;;      Locals:         2       0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0
  2887 ;;      Totals:         6       0       0       0       0       0       0
  2888 ;;Total ram usage:        6 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_reading_eeprom
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text3
  2899   00265C                     __ptext3:
  2900                           	callstack 0
  2901   00265C                     ___wmul:
  2902                           	callstack 29
  2903   00265C  5001               	movf	___wmul@multiplier^0,w,c
  2904   00265E  0203               	mulwf	___wmul@multiplicand^0,c
  2905   002660  CFF3 F005          	movff	prodl,___wmul@product
  2906   002664  CFF4 F006          	movff	prodh,___wmul@product+1
  2907   002668  5001               	movf	___wmul@multiplier^0,w,c
  2908   00266A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2909   00266C  50F3               	movf	243,w,c
  2910   00266E  2606               	addwf	(___wmul@product+1)^0,f,c
  2911   002670  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2912   002672  0203               	mulwf	___wmul@multiplicand^0,c
  2913   002674  50F3               	movf	243,w,c
  2914   002676  2606               	addwf	(___wmul@product+1)^0,f,c
  2915   002678  C005  F001         	movff	___wmul@product,?___wmul
  2916   00267C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2917   002680  0012               	return		;funcret
  2918   002682                     __end_of___wmul:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _read_adc *****************
  2922 ;; Defined at:
  2923 ;;		line 43 in file "adc.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  channel         1    wreg     unsigned char 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  channel         1    6[COMRAM] unsigned char 
  2928 ;;  reg_val         2    4[COMRAM] unsigned short 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  2    0[COMRAM] unsigned short 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2938 ;;      Params:         2       0       0       0       0       0       0
  2939 ;;      Locals:         3       0       0       0       0       0       0
  2940 ;;      Temps:          2       0       0       0       0       0       0
  2941 ;;      Totals:         7       0       0       0       0       0       0
  2942 ;;Total ram usage:        7 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text4
  2952   002506                     __ptext4:
  2953                           	callstack 0
  2954   002506                     _read_adc:
  2955                           	callstack 30
  2956                           
  2957                           ;incstack = 0
  2958                           ;read_adc@channel stored from wreg
  2959   002506  6E07               	movwf	read_adc@channel^0,c
  2960   002508                     
  2961                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  2962   002508  C007  F003         	movff	read_adc@channel,??_read_adc
  2963   00250C  90D8               	bcf	status,0,c
  2964   00250E  3603               	rlcf	??_read_adc^0,f,c
  2965   002510  90D8               	bcf	status,0,c
  2966   002512  3603               	rlcf	??_read_adc^0,f,c
  2967   002514  50C2               	movf	194,w,c	;volatile
  2968   002516  0BC3               	andlw	195
  2969   002518  1003               	iorwf	??_read_adc^0,w,c
  2970   00251A  6EC2               	movwf	194,c	;volatile
  2971   00251C                     
  2972                           ;adc.c: 51:  GO = 1;
  2973   00251C  82C2               	bsf	4034,1,c	;volatile
  2974   00251E                     l359:
  2975   00251E  B2C2               	btfsc	4034,1,c	;volatile
  2976   002520  EF94  F012         	goto	u2721
  2977   002524  EF96  F012         	goto	u2720
  2978   002528                     u2721:
  2979   002528  EF8F  F012         	goto	l359
  2980   00252C                     u2720:
  2981   00252C                     
  2982                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  2983   00252C  50C3               	movf	195,w,c	;volatile
  2984   00252E  CFC4 F003          	movff	4036,??_read_adc	;volatile
  2985   002532  6A04               	clrf	(??_read_adc+1)^0,c
  2986   002534  C003  F004         	movff	??_read_adc,??_read_adc+1
  2987   002538  6A03               	clrf	??_read_adc^0,c
  2988   00253A  1003               	iorwf	??_read_adc^0,w,c
  2989   00253C  6E05               	movwf	read_adc@reg_val^0,c
  2990   00253E  5004               	movf	(??_read_adc+1)^0,w,c
  2991   002540  6E06               	movwf	(read_adc@reg_val+1)^0,c
  2992   002542                     
  2993                           ;adc.c: 55:  return reg_val;
  2994   002542  C005  F001         	movff	read_adc@reg_val,?_read_adc
  2995   002546  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  2996   00254A  0012               	return		;funcret
  2997   00254C                     __end_of_read_adc:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _puts *****************
  3001 ;; Defined at:
  3002 ;;		line 62 in file "uart.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3005 ;;		 -> STR_28(3), detail(180), 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  2    6[COMRAM] int 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3017 ;;      Params:         2       0       0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0
  3020 ;;      Totals:         2       0       0       0       0       0       0
  3021 ;;Total ram usage:        2 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 1
  3024 ;; This function calls:
  3025 ;;		_putch
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text5
  3032   002460                     __ptext5:
  3033                           	callstack 0
  3034   002460                     _puts:
  3035                           	callstack 29
  3036   002460                     
  3037                           ;uart.c: 62: int puts(const char *s);uart.c: 63: {;uart.c: 64:  while(*s)
  3038   002460  EF46  F012         	goto	l3162
  3039   002464                     l3158:
  3040                           
  3041                           ;uart.c: 65:  {;uart.c: 66:   putch(*s++);
  3042   002464  C007  FFF6         	movff	puts@s,tblptrl
  3043   002468  C008  FFF7         	movff	puts@s+1,tblptrh
  3044   00246C  6AF8               	clrf	tblptru,c
  3045   00246E  0E05               	movlw	(high __ramtop+-1)
  3046   002470  64F7               	cpfsgt	tblptrh,c
  3047   002472  D003               	bra	u2767
  3048   002474  0008               	tblrd		*
  3049   002476  50F5               	movf	tablat,w,c
  3050   002478  D005               	bra	u2760
  3051   00247A                     u2767:
  3052   00247A  CFF6 FFD9          	movff	tblptrl,fsr2l
  3053   00247E  CFF7 FFDA          	movff	tblptrh,fsr2h
  3054   002482  50DF               	movf	indf2,w,c
  3055   002484                     u2760:
  3056   002484  EC8A  F013         	call	_putch
  3057   002488  4A07               	infsnz	puts@s^0,f,c
  3058   00248A  2A08               	incf	(puts@s+1)^0,f,c
  3059   00248C                     l3162:
  3060                           
  3061                           ;uart.c: 64:  while(*s)
  3062   00248C  C007  FFF6         	movff	puts@s,tblptrl
  3063   002490  C008  FFF7         	movff	puts@s+1,tblptrh
  3064   002494  6AF8               	clrf	tblptru,c
  3065   002496  0E05               	movlw	(high __ramtop+-1)
  3066   002498  64F7               	cpfsgt	tblptrh,c
  3067   00249A  D003               	bra	u2777
  3068   00249C  0008               	tblrd		*
  3069   00249E  50F5               	movf	tablat,w,c
  3070   0024A0  D005               	bra	u2770
  3071   0024A2                     u2777:
  3072   0024A2  CFF6 FFD9          	movff	tblptrl,fsr2l
  3073   0024A6  CFF7 FFDA          	movff	tblptrh,fsr2h
  3074   0024AA  50DF               	movf	indf2,w,c
  3075   0024AC                     u2770:
  3076   0024AC  0900               	iorlw	0
  3077   0024AE  A4D8               	btfss	status,2,c
  3078   0024B0  EF5C  F012         	goto	u2781
  3079   0024B4  EF5E  F012         	goto	u2780
  3080   0024B8                     u2781:
  3081   0024B8  EF32  F012         	goto	l3158
  3082   0024BC                     u2780:
  3083   0024BC  0012               	return		;funcret
  3084   0024BE                     __end_of_puts:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _putch *****************
  3088 ;; Defined at:
  3089 ;;		line 50 in file "uart.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  byte            1    wreg     unsigned char 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  byte            1    0[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3103 ;;      Params:         0       0       0       0       0       0       0
  3104 ;;      Locals:         1       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0
  3106 ;;      Totals:         1       0       0       0       0       0       0
  3107 ;;Total ram usage:        1 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_puts
  3113 ;;		_getche
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text6
  3118   002714                     __ptext6:
  3119                           	callstack 0
  3120   002714                     _putch:
  3121                           	callstack 29
  3122                           
  3123                           ;incstack = 0
  3124                           ;putch@byte stored from wreg
  3125   002714  6E01               	movwf	putch@byte^0,c
  3126   002716                     l508:
  3127                           
  3128                           ;uart.c: 54:  while(!TXIF)
  3129   002716  A89E               	btfss	3998,4,c	;volatile
  3130   002718  EF90  F013         	goto	u1941
  3131   00271C  EF92  F013         	goto	u1940
  3132   002720                     u1941:
  3133   002720  EF8B  F013         	goto	l508
  3134   002724                     u1940:
  3135   002724                     
  3136                           ;uart.c: 58:  TXIF = 0;
  3137   002724  989E               	bcf	3998,4,c	;volatile
  3138   002726                     
  3139                           ;uart.c: 59:  TXREG = byte;
  3140   002726  C001  FFAD         	movff	putch@byte,4013	;volatile
  3141   00272A  0012               	return		;funcret
  3142   00272C                     __end_of_putch:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _init_config *****************
  3146 ;; Defined at:
  3147 ;;		line 328 in file "main.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3161 ;;      Params:         0       0       0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0
  3164 ;;      Totals:         0       0       0       0       0       0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 5
  3168 ;; This function calls:
  3169 ;;		_init_adc
  3170 ;;		_init_clcd
  3171 ;;		_init_ds1307
  3172 ;;		_init_i2c
  3173 ;;		_init_matrix_keypad
  3174 ;;		_init_uart
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text7
  3181   0026FA                     __ptext7:
  3182                           	callstack 0
  3183   0026FA                     _init_config:
  3184                           	callstack 25
  3185   0026FA                     
  3186                           ;main.c: 330:     init_clcd();
  3187   0026FA  ECD0  F010         	call	_init_clcd	;wreg free
  3188                           
  3189                           ;main.c: 331:     init_matrix_keypad();
  3190   0026FE  ECAD  F013         	call	_init_matrix_keypad	;wreg free
  3191   002702                     
  3192                           ;main.c: 332:     init_adc();
  3193   002702  EC51  F013         	call	_init_adc	;wreg free
  3194   002706                     
  3195                           ;main.c: 333:     init_i2c();
  3196   002706  ECA2  F013         	call	_init_i2c	;wreg free
  3197                           
  3198                           ;main.c: 334:  init_ds1307();
  3199   00270A  EC5F  F012         	call	_init_ds1307	;wreg free
  3200   00270E                     
  3201                           ;main.c: 335:     init_uart();
  3202   00270E  EC41  F013         	call	_init_uart	;wreg free
  3203   002712  0012               	return		;funcret
  3204   002714                     __end_of_init_config:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _init_uart *****************
  3208 ;; Defined at:
  3209 ;;		line 4 in file "uart.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3223 ;;      Params:         0       0       0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0
  3226 ;;      Totals:         0       0       0       0       0       0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_init_config
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text8
  3237   002682                     __ptext8:
  3238                           	callstack 0
  3239   002682                     _init_uart:
  3240                           	callstack 29
  3241   002682                     
  3242                           ;uart.c: 7:  TRISC7 = 1;
  3243   002682  8E94               	bsf	3988,7,c	;volatile
  3244                           
  3245                           ;uart.c: 8:  TRISC6 = 0;
  3246   002684  9C94               	bcf	3988,6,c	;volatile
  3247                           
  3248                           ;uart.c: 12:  TX9 = 0;
  3249   002686  9CAC               	bcf	4012,6,c	;volatile
  3250                           
  3251                           ;uart.c: 14:  TXEN = 1;
  3252   002688  8AAC               	bsf	4012,5,c	;volatile
  3253                           
  3254                           ;uart.c: 17:  SYNC = 0;
  3255   00268A  98AC               	bcf	4012,4,c	;volatile
  3256                           
  3257                           ;uart.c: 19:  SENDB = 0;
  3258   00268C  96AC               	bcf	4012,3,c	;volatile
  3259                           
  3260                           ;uart.c: 22:  BRGH = 1;
  3261   00268E  84AC               	bsf	4012,2,c	;volatile
  3262                           
  3263                           ;uart.c: 26:  SPEN = 1;
  3264   002690  8EAB               	bsf	4011,7,c	;volatile
  3265                           
  3266                           ;uart.c: 28:  RX9 = 0;
  3267   002692  9CAB               	bcf	4011,6,c	;volatile
  3268                           
  3269                           ;uart.c: 30:  CREN = 1;
  3270   002694  88AB               	bsf	4011,4,c	;volatile
  3271                           
  3272                           ;uart.c: 35:  BRG16 = 0;
  3273   002696  96B8               	bcf	4024,3,c	;volatile
  3274   002698                     
  3275                           ;uart.c: 40:  SPBRG = 129;
  3276   002698  0E81               	movlw	129
  3277   00269A  6EAF               	movwf	175,c	;volatile
  3278   00269C                     
  3279                           ;uart.c: 44:  TXIF = 0;
  3280   00269C  989E               	bcf	3998,4,c	;volatile
  3281   00269E                     
  3282                           ;uart.c: 47:  RCIF = 0;
  3283   00269E  9A9E               	bcf	3998,5,c	;volatile
  3284   0026A0  0012               	return		;funcret
  3285   0026A2                     __end_of_init_uart:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _init_matrix_keypad *****************
  3289 ;; Defined at:
  3290 ;;		line 12 in file "matrix_keypad.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3304 ;;      Params:         0       0       0       0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0
  3307 ;;      Totals:         0       0       0       0       0       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_init_config
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text9
  3318   00275A                     __ptext9:
  3319                           	callstack 0
  3320   00275A                     _init_matrix_keypad:
  3321                           	callstack 29
  3322   00275A                     
  3323                           ;matrix_keypad.c: 15:  ADCON1 = 0x0F;
  3324   00275A  0E0F               	movlw	15
  3325   00275C  6EC1               	movwf	193,c	;volatile
  3326                           
  3327                           ;matrix_keypad.c: 18:  TRISB = 0x1E;
  3328   00275E  0E1E               	movlw	30
  3329   002760  6E93               	movwf	147,c	;volatile
  3330   002762                     
  3331                           ;matrix_keypad.c: 21:  RBPU = 0;
  3332   002762  9EF1               	bcf	4081,7,c	;volatile
  3333   002764                     
  3334                           ;matrix_keypad.c: 23:  PORTB = PORTB | 0xE0;
  3335   002764  5081               	movf	129,w,c	;volatile
  3336   002766  09E0               	iorlw	224
  3337   002768  6E81               	movwf	129,c	;volatile
  3338   00276A  0012               	return		;funcret
  3339   00276C                     __end_of_init_matrix_keypad:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function _init_i2c *****************
  3343 ;; Defined at:
  3344 ;;		line 10 in file "i2c.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3358 ;;      Params:         0       0       0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0
  3361 ;;      Totals:         0       0       0       0       0       0       0
  3362 ;;Total ram usage:        0 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_init_config
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text10
  3372   002744                     __ptext10:
  3373                           	callstack 0
  3374   002744                     _init_i2c:
  3375                           	callstack 29
  3376   002744                     
  3377                           ;i2c.c: 13:  TRISC3 = 1;
  3378   002744  8694               	bsf	3988,3,c	;volatile
  3379                           
  3380                           ;i2c.c: 14:  TRISC4 = 1;
  3381   002746  8894               	bsf	3988,4,c	;volatile
  3382   002748                     
  3383                           ;i2c.c: 16:  SSPCON1 = 0x28;
  3384   002748  0E28               	movlw	40
  3385   00274A  6EC6               	movwf	198,c	;volatile
  3386                           
  3387                           ;i2c.c: 18:  SSPADD = 0x31;
  3388   00274C  0E31               	movlw	49
  3389   00274E  6EC8               	movwf	200,c	;volatile
  3390   002750                     
  3391                           ;i2c.c: 20:  CKE = 0;
  3392   002750  9CC7               	bcf	4039,6,c	;volatile
  3393   002752                     
  3394                           ;i2c.c: 22:  SMP = 1;
  3395   002752  8EC7               	bsf	4039,7,c	;volatile
  3396   002754                     
  3397                           ;i2c.c: 24:  SSPIF = 0;
  3398   002754  969E               	bcf	3998,3,c	;volatile
  3399   002756                     
  3400                           ;i2c.c: 26:  BCLIF = 0;
  3401   002756  96A1               	bcf	4001,3,c	;volatile
  3402   002758  0012               	return		;funcret
  3403   00275A                     __end_of_init_i2c:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _init_ds1307 *****************
  3407 ;; Defined at:
  3408 ;;		line 21 in file "ds1307.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  dummy           1   10[COMRAM] unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3422 ;;      Params:         0       0       0       0       0       0       0
  3423 ;;      Locals:         1       0       0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0
  3425 ;;      Totals:         1       0       0       0       0       0       0
  3426 ;;Total ram usage:        1 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 4
  3429 ;; This function calls:
  3430 ;;		_read_ds1307
  3431 ;;		_write_ds1307
  3432 ;; This function is called by:
  3433 ;;		_init_config
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text11
  3438   0024BE                     __ptext11:
  3439                           	callstack 0
  3440   0024BE                     _init_ds1307:
  3441                           	callstack 25
  3442   0024BE                     
  3443                           ;ds1307.c: 23:  unsigned char dummy;;ds1307.c: 26:  dummy = read_ds1307(0x00);
  3444   0024BE  0E00               	movlw	0
  3445   0024C0  EC19  F013         	call	_read_ds1307
  3446   0024C4  6E0B               	movwf	init_ds1307@dummy^0,c
  3447   0024C6                     
  3448                           ;ds1307.c: 27:  write_ds1307(0x00, dummy | 0x80);
  3449   0024C6  500B               	movf	init_ds1307@dummy^0,w,c
  3450   0024C8  0980               	iorlw	128
  3451   0024CA  6E09               	movwf	write_ds1307@data^0,c
  3452   0024CC  0E00               	movlw	0
  3453   0024CE  EC61  F013         	call	_write_ds1307
  3454   0024D2                     
  3455                           ;ds1307.c: 30:  dummy = read_ds1307(0x02);
  3456   0024D2  0E02               	movlw	2
  3457   0024D4  EC19  F013         	call	_read_ds1307
  3458   0024D8  6E0B               	movwf	init_ds1307@dummy^0,c
  3459                           
  3460                           ;ds1307.c: 31:  write_ds1307(0x02, dummy | 0x40);
  3461   0024DA  500B               	movf	init_ds1307@dummy^0,w,c
  3462   0024DC  0940               	iorlw	64
  3463   0024DE  6E09               	movwf	write_ds1307@data^0,c
  3464   0024E0  0E02               	movlw	2
  3465   0024E2  EC61  F013         	call	_write_ds1307
  3466   0024E6                     
  3467                           ;ds1307.c: 46:  write_ds1307(0x07, 0x93);
  3468   0024E6  0E93               	movlw	147
  3469   0024E8  6E09               	movwf	write_ds1307@data^0,c
  3470   0024EA  0E07               	movlw	7
  3471   0024EC  EC61  F013         	call	_write_ds1307
  3472   0024F0                     
  3473                           ;ds1307.c: 49:  dummy = read_ds1307(0x00);
  3474   0024F0  0E00               	movlw	0
  3475   0024F2  EC19  F013         	call	_read_ds1307
  3476   0024F6  6E0B               	movwf	init_ds1307@dummy^0,c
  3477                           
  3478                           ;ds1307.c: 50:  write_ds1307(0x00, dummy & 0x7F);
  3479   0024F8  500B               	movf	init_ds1307@dummy^0,w,c
  3480   0024FA  0B7F               	andlw	127
  3481   0024FC  6E09               	movwf	write_ds1307@data^0,c
  3482   0024FE  0E00               	movlw	0
  3483   002500  EC61  F013         	call	_write_ds1307
  3484   002504  0012               	return		;funcret
  3485   002506                     __end_of_init_ds1307:
  3486                           	callstack 0
  3487                           
  3488 ;; *************** function _init_clcd *****************
  3489 ;; Defined at:
  3490 ;;		line 34 in file "clcd.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3504 ;;      Params:         0       0       0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0       0       0
  3506 ;;      Temps:          1       0       0       0       0       0       0
  3507 ;;      Totals:         1       0       0       0       0       0       0
  3508 ;;Total ram usage:        1 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 1
  3511 ;; This function calls:
  3512 ;;		_clcd_write
  3513 ;; This function is called by:
  3514 ;;		_init_config
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text12
  3519   0021A0                     __ptext12:
  3520                           	callstack 0
  3521   0021A0                     _init_clcd:
  3522                           	callstack 28
  3523   0021A0                     
  3524                           ;clcd.c: 37:  TRISD = 0x00;
  3525   0021A0  0E00               	movlw	0
  3526   0021A2  6E95               	movwf	149,c	;volatile
  3527   0021A4                     
  3528                           ;clcd.c: 39:  TRISC = TRISC & 0xF8;
  3529   0021A4  5094               	movf	148,w,c	;volatile
  3530   0021A6  0BF8               	andlw	248
  3531   0021A8  6E94               	movwf	148,c	;volatile
  3532   0021AA                     
  3533                           ;clcd.c: 41:  RC0 = 0;
  3534   0021AA  9082               	bcf	3970,0,c	;volatile
  3535   0021AC                     
  3536                           ;clcd.c: 45:     _delay((unsigned long)((30)*(20000000/4000.0)));
  3537   0021AC  0EC3               	movlw	195
  3538   0021AE  6E03               	movwf	??_init_clcd^0,c
  3539   0021B0  0ECD               	movlw	205
  3540   0021B2                     u3187:
  3541   0021B2  2EE8               	decfsz	wreg,f,c
  3542   0021B4  D7FE               	bra	u3187
  3543   0021B6  2E03               	decfsz	??_init_clcd^0,f,c
  3544   0021B8  D7FC               	bra	u3187
  3545   0021BA  F000               	nop	
  3546   0021BC                     
  3547                           ;clcd.c: 48:     clcd_write(0x33, 0 );
  3548   0021BC  0E00               	movlw	0
  3549   0021BE  6E01               	movwf	clcd_write@control_bit^0,c
  3550   0021C0  0E33               	movlw	51
  3551   0021C2  ECE7  F012         	call	_clcd_write
  3552   0021C6                     
  3553                           ;clcd.c: 49:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3554   0021C6  0E1B               	movlw	27
  3555   0021C8  6E03               	movwf	??_init_clcd^0,c
  3556   0021CA  0E9E               	movlw	158
  3557   0021CC                     u3197:
  3558   0021CC  2EE8               	decfsz	wreg,f,c
  3559   0021CE  D7FE               	bra	u3197
  3560   0021D0  2E03               	decfsz	??_init_clcd^0,f,c
  3561   0021D2  D7FC               	bra	u3197
  3562   0021D4  D000               	nop2	
  3563   0021D6                     
  3564                           ;clcd.c: 50:     clcd_write(0x33, 0 );
  3565   0021D6  0E00               	movlw	0
  3566   0021D8  6E01               	movwf	clcd_write@control_bit^0,c
  3567   0021DA  0E33               	movlw	51
  3568   0021DC  ECE7  F012         	call	_clcd_write
  3569   0021E0                     
  3570                           ;clcd.c: 51:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3571   0021E0  0EA6               	movlw	166
  3572   0021E2                     u3207:
  3573   0021E2  2EE8               	decfsz	wreg,f,c
  3574   0021E4  D7FE               	bra	u3207
  3575   0021E6  D000               	nop2	
  3576   0021E8                     
  3577                           ;clcd.c: 52:     clcd_write(0x33, 0 );
  3578   0021E8  0E00               	movlw	0
  3579   0021EA  6E01               	movwf	clcd_write@control_bit^0,c
  3580   0021EC  0E33               	movlw	51
  3581   0021EE  ECE7  F012         	call	_clcd_write
  3582   0021F2                     
  3583                           ;clcd.c: 53:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3584   0021F2  D000               	nop2		;2 cycle nop
  3585   0021F4  D000               	nop2		;2 cycle nop
  3586   0021F6  F000               	nop	
  3587   0021F8                     
  3588                           ;clcd.c: 55:     clcd_write(0x02, 0);
  3589   0021F8  0E00               	movlw	0
  3590   0021FA  6E01               	movwf	clcd_write@control_bit^0,c
  3591   0021FC  0E02               	movlw	2
  3592   0021FE  ECE7  F012         	call	_clcd_write
  3593   002202                     
  3594                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3595   002202  0EA6               	movlw	166
  3596   002204                     u3217:
  3597   002204  2EE8               	decfsz	wreg,f,c
  3598   002206  D7FE               	bra	u3217
  3599   002208  D000               	nop2	
  3600   00220A                     
  3601                           ;clcd.c: 57:     clcd_write(0x38, 0);
  3602   00220A  0E00               	movlw	0
  3603   00220C  6E01               	movwf	clcd_write@control_bit^0,c
  3604   00220E  0E38               	movlw	56
  3605   002210  ECE7  F012         	call	_clcd_write
  3606   002214                     
  3607                           ;clcd.c: 58:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3608   002214  0EA6               	movlw	166
  3609   002216                     u3227:
  3610   002216  2EE8               	decfsz	wreg,f,c
  3611   002218  D7FE               	bra	u3227
  3612   00221A  D000               	nop2	
  3613   00221C                     
  3614                           ;clcd.c: 59:     clcd_write(0x01, 0);
  3615   00221C  0E00               	movlw	0
  3616   00221E  6E01               	movwf	clcd_write@control_bit^0,c
  3617   002220  0E01               	movlw	1
  3618   002222  ECE7  F012         	call	_clcd_write
  3619   002226                     
  3620                           ;clcd.c: 60:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  3621   002226  0E04               	movlw	4
  3622   002228  6E03               	movwf	??_init_clcd^0,c
  3623   00222A  0E3E               	movlw	62
  3624   00222C                     u3237:
  3625   00222C  2EE8               	decfsz	wreg,f,c
  3626   00222E  D7FE               	bra	u3237
  3627   002230  2E03               	decfsz	??_init_clcd^0,f,c
  3628   002232  D7FC               	bra	u3237
  3629   002234                     
  3630                           ;clcd.c: 61:     clcd_write(0x0C, 0);
  3631   002234  0E00               	movlw	0
  3632   002236  6E01               	movwf	clcd_write@control_bit^0,c
  3633   002238  0E0C               	movlw	12
  3634   00223A  ECE7  F012         	call	_clcd_write
  3635   00223E                     
  3636                           ;clcd.c: 62:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3637   00223E  0EA6               	movlw	166
  3638   002240                     u3247:
  3639   002240  2EE8               	decfsz	wreg,f,c
  3640   002242  D7FE               	bra	u3247
  3641   002244  D000               	nop2	
  3642   002246  0012               	return		;funcret
  3643   002248                     __end_of_init_clcd:
  3644                           	callstack 0
  3645                           
  3646 ;; *************** function _init_adc *****************
  3647 ;; Defined at:
  3648 ;;		line 4 in file "adc.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3662 ;;      Params:         0       0       0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0
  3665 ;;      Totals:         0       0       0       0       0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_init_config
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text13
  3676   0026A2                     __ptext13:
  3677                           	callstack 0
  3678   0026A2                     _init_adc:
  3679                           	callstack 29
  3680   0026A2                     
  3681                           ;adc.c: 7:  ADFM = 1;
  3682   0026A2  8EC0               	bsf	4032,7,c	;volatile
  3683                           
  3684                           ;adc.c: 13:  ACQT2 = 0;
  3685   0026A4  9AC0               	bcf	4032,5,c	;volatile
  3686                           
  3687                           ;adc.c: 14:  ACQT1 = 1;
  3688   0026A6  88C0               	bsf	4032,4,c	;volatile
  3689                           
  3690                           ;adc.c: 15:  ACQT0 = 0;
  3691   0026A8  96C0               	bcf	4032,3,c	;volatile
  3692                           
  3693                           ;adc.c: 21:  ADCS0 = 0;
  3694   0026AA  90C0               	bcf	4032,0,c	;volatile
  3695                           
  3696                           ;adc.c: 22:  ADCS1 = 1;
  3697   0026AC  82C0               	bsf	4032,1,c	;volatile
  3698                           
  3699                           ;adc.c: 23:  ADCS2 = 0;
  3700   0026AE  94C0               	bcf	4032,2,c	;volatile
  3701                           
  3702                           ;adc.c: 26:  GODONE = 0;
  3703   0026B0  92C2               	bcf	4034,1,c	;volatile
  3704                           
  3705                           ;adc.c: 31:  VCFG1 = 0;
  3706   0026B2  9AC1               	bcf	4033,5,c	;volatile
  3707                           
  3708                           ;adc.c: 33:  VCFG0 = 0;
  3709   0026B4  98C1               	bcf	4033,4,c	;volatile
  3710   0026B6                     
  3711                           ;adc.c: 36:  ADRESH = 0;
  3712   0026B6  0E00               	movlw	0
  3713   0026B8  6EC4               	movwf	196,c	;volatile
  3714                           
  3715                           ;adc.c: 37:  ADRESL = 0;
  3716   0026BA  0E00               	movlw	0
  3717   0026BC  6EC3               	movwf	195,c	;volatile
  3718   0026BE                     
  3719                           ;adc.c: 40:  ADON = 1;
  3720   0026BE  80C2               	bsf	4034,0,c	;volatile
  3721   0026C0  0012               	return		;funcret
  3722   0026C2                     __end_of_init_adc:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _get_time *****************
  3726 ;; Defined at:
  3727 ;;		line 93 in file "main.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3741 ;;      Params:         0       0       0       0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0
  3743 ;;      Temps:          0       0       0       0       0       0       0
  3744 ;;      Totals:         0       0       0       0       0       0       0
  3745 ;;Total ram usage:        0 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 4
  3748 ;; This function calls:
  3749 ;;		_read_ds1307
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text14
  3756   00239E                     __ptext14:
  3757                           	callstack 0
  3758   00239E                     _get_time:
  3759                           	callstack 26
  3760   00239E                     
  3761                           ;main.c: 95:  clock_reg[0] = read_ds1307(0x02);
  3762   00239E  0E02               	movlw	2
  3763   0023A0  EC19  F013         	call	_read_ds1307
  3764   0023A4  0100               	movlb	0	; () banked
  3765   0023A6  6F7A               	movwf	_clock_reg& (0+255),b
  3766                           
  3767                           ;main.c: 96:  clock_reg[1] = read_ds1307(0x01);
  3768   0023A8  0E01               	movlw	1
  3769   0023AA  EC19  F013         	call	_read_ds1307
  3770   0023AE  0100               	movlb	0	; () banked
  3771   0023B0  6F7B               	movwf	(_clock_reg+1)& (0+255),b
  3772                           
  3773                           ;main.c: 97:  clock_reg[2] = read_ds1307(0x00);
  3774   0023B2  0E00               	movlw	0
  3775   0023B4  EC19  F013         	call	_read_ds1307
  3776   0023B8  0100               	movlb	0	; () banked
  3777   0023BA  6F7C               	movwf	(_clock_reg+2)& (0+255),b
  3778   0023BC                     
  3779                           ; BSR set to: 0
  3780                           ;main.c: 99:  time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  3781   0023BC  397A               	swapf	_clock_reg& (0+255),w,b
  3782   0023BE  0B0F               	andlw	15
  3783   0023C0  0B03               	andlw	3
  3784   0023C2  0F30               	addlw	48
  3785   0023C4  6F89               	movwf	_time& (0+255),b
  3786   0023C6                     
  3787                           ; BSR set to: 0
  3788                           ;main.c: 100:     time[1] = '0' + (clock_reg[0] & 0x0F);
  3789   0023C6  517A               	movf	_clock_reg& (0+255),w,b
  3790   0023C8  0B0F               	andlw	15
  3791   0023CA  0F30               	addlw	48
  3792   0023CC  6F8A               	movwf	(_time+1)& (0+255),b
  3793   0023CE                     
  3794                           ; BSR set to: 0
  3795                           ;main.c: 101:  time[2] = ':';
  3796   0023CE  0E3A               	movlw	58
  3797   0023D0  6F8B               	movwf	(_time+2)& (0+255),b
  3798   0023D2                     
  3799                           ; BSR set to: 0
  3800                           ;main.c: 102:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  3801   0023D2  397B               	swapf	(_clock_reg+1)& (0+255),w,b
  3802   0023D4  0B0F               	andlw	15
  3803   0023D6  0B0F               	andlw	15
  3804   0023D8  0F30               	addlw	48
  3805   0023DA  6F8C               	movwf	(_time+3)& (0+255),b
  3806   0023DC                     
  3807                           ; BSR set to: 0
  3808                           ;main.c: 103:  time[4] = '0' + (clock_reg[1] & 0x0F);
  3809   0023DC  517B               	movf	(_clock_reg+1)& (0+255),w,b
  3810   0023DE  0B0F               	andlw	15
  3811   0023E0  0F30               	addlw	48
  3812   0023E2  6F8D               	movwf	(_time+4)& (0+255),b
  3813   0023E4                     
  3814                           ; BSR set to: 0
  3815                           ;main.c: 104:  time[5] = ':';
  3816   0023E4  0E3A               	movlw	58
  3817   0023E6  6F8E               	movwf	(_time+5)& (0+255),b
  3818   0023E8                     
  3819                           ; BSR set to: 0
  3820                           ;main.c: 105:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  3821   0023E8  397C               	swapf	(_clock_reg+2)& (0+255),w,b
  3822   0023EA  0B0F               	andlw	15
  3823   0023EC  0B0F               	andlw	15
  3824   0023EE  0F30               	addlw	48
  3825   0023F0  6F8F               	movwf	(_time+6)& (0+255),b
  3826   0023F2                     
  3827                           ; BSR set to: 0
  3828                           ;main.c: 106:  time[7] = '0' + (clock_reg[2] & 0x0F);
  3829   0023F2  517C               	movf	(_clock_reg+2)& (0+255),w,b
  3830   0023F4  0B0F               	andlw	15
  3831   0023F6  0F30               	addlw	48
  3832   0023F8  6F90               	movwf	(_time+7)& (0+255),b
  3833   0023FA                     
  3834                           ; BSR set to: 0
  3835                           ;main.c: 107:  time[8] = '\0';
  3836   0023FA  0E00               	movlw	0
  3837   0023FC  6F91               	movwf	(_time+8)& (0+255),b
  3838   0023FE                     
  3839                           ; BSR set to: 0
  3840   0023FE  0012               	return		;funcret
  3841   002400                     __end_of_get_time:
  3842                           	callstack 0
  3843                           
  3844 ;; *************** function _read_ds1307 *****************
  3845 ;; Defined at:
  3846 ;;		line 63 in file "ds1307.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  address         1    wreg     unsigned char 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  address         1    1[COMRAM] unsigned char 
  3851 ;;  data            1    2[COMRAM] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      unsigned char 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3861 ;;      Params:         0       0       0       0       0       0       0
  3862 ;;      Locals:         2       0       0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0
  3864 ;;      Totals:         2       0       0       0       0       0       0
  3865 ;;Total ram usage:        2 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 3
  3868 ;; This function calls:
  3869 ;;		_i2c_read
  3870 ;;		_i2c_rep_start
  3871 ;;		_i2c_start
  3872 ;;		_i2c_stop
  3873 ;;		_i2c_write
  3874 ;; This function is called by:
  3875 ;;		_get_time
  3876 ;;		_init_ds1307
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text15
  3881   002632                     __ptext15:
  3882                           	callstack 0
  3883   002632                     _read_ds1307:
  3884                           	callstack 25
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;incstack = 0
  3888                           ;read_ds1307@address stored from wreg
  3889   002632  6E02               	movwf	read_ds1307@address^0,c
  3890   002634                     
  3891                           ;ds1307.c: 63: unsigned char read_ds1307(unsigned char address);ds1307.c: 64: {;ds1307.c
      +                          : 65:  unsigned char data;;ds1307.c: 67:  i2c_start();
  3892   002634  ECD7  F013         	call	_i2c_start	;wreg free
  3893   002638                     
  3894                           ;ds1307.c: 68:  i2c_write(0xD0);
  3895   002638  0ED0               	movlw	208
  3896   00263A  ECC5  F013         	call	_i2c_write
  3897   00263E                     
  3898                           ;ds1307.c: 69:  i2c_write(address);
  3899   00263E  5002               	movf	read_ds1307@address^0,w,c
  3900   002640  ECC5  F013         	call	_i2c_write
  3901   002644                     
  3902                           ;ds1307.c: 70:  i2c_rep_start();
  3903   002644  ECCB  F013         	call	_i2c_rep_start	;wreg free
  3904   002648                     
  3905                           ;ds1307.c: 71:  i2c_write(0xD1);
  3906   002648  0ED1               	movlw	209
  3907   00264A  ECC5  F013         	call	_i2c_write
  3908                           
  3909                           ;ds1307.c: 72:  data = i2c_read();
  3910   00264E  ECBF  F013         	call	_i2c_read	;wreg free
  3911   002652  6E03               	movwf	read_ds1307@data^0,c
  3912   002654                     
  3913                           ;ds1307.c: 73:  i2c_stop();
  3914   002654  ECD3  F013         	call	_i2c_stop	;wreg free
  3915                           
  3916                           ;ds1307.c: 75:  return data;
  3917   002658  5003               	movf	read_ds1307@data^0,w,c
  3918   00265A  0012               	return		;funcret
  3919   00265C                     __end_of_read_ds1307:
  3920                           	callstack 0
  3921                           
  3922 ;; *************** function _i2c_rep_start *****************
  3923 ;; Defined at:
  3924 ;;		line 55 in file "i2c.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;		None
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3938 ;;      Params:         0       0       0       0       0       0       0
  3939 ;;      Locals:         0       0       0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0
  3941 ;;      Totals:         0       0       0       0       0       0       0
  3942 ;;Total ram usage:        0 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; Hardware stack levels required when called: 1
  3945 ;; This function calls:
  3946 ;;		_i2c_idle
  3947 ;; This function is called by:
  3948 ;;		_read_ds1307
  3949 ;;		_read_external_eeprom
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text16
  3954   002796                     __ptext16:
  3955                           	callstack 0
  3956   002796                     _i2c_rep_start:
  3957                           	callstack 27
  3958   002796                     
  3959                           ;i2c.c: 57:  RSEN = 1;
  3960   002796  82C5               	bsf	4037,1,c	;volatile
  3961   002798                     
  3962                           ;i2c.c: 58:  i2c_idle();
  3963   002798  ECB6  F013         	call	_i2c_idle	;wreg free
  3964   00279C  0012               	return		;funcret
  3965   00279E                     __end_of_i2c_rep_start:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _i2c_read *****************
  3969 ;; Defined at:
  3970 ;;		line 79 in file "i2c.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      unsigned char 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3984 ;;      Params:         0       0       0       0       0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0
  3987 ;;      Totals:         0       0       0       0       0       0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; Hardware stack levels required when called: 2
  3991 ;; This function calls:
  3992 ;;		_i2c_no_ack
  3993 ;;		_i2c_rx_mode
  3994 ;; This function is called by:
  3995 ;;		_read_ds1307
  3996 ;;		_read_external_eeprom
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text17
  4001   00277E                     __ptext17:
  4002                           	callstack 0
  4003   00277E                     _i2c_read:
  4004                           	callstack 26
  4005   00277E                     
  4006                           ;i2c.c: 81:  i2c_rx_mode();
  4007   00277E  ECCF  F013         	call	_i2c_rx_mode	;wreg free
  4008                           
  4009                           ;i2c.c: 82:  i2c_no_ack();
  4010   002782  ECDB  F013         	call	_i2c_no_ack	;wreg free
  4011   002786                     
  4012                           ;i2c.c: 84:  return SSPBUF;
  4013   002786  50C9               	movf	201,w,c	;volatile
  4014   002788  0012               	return		;funcret
  4015   00278A                     __end_of_i2c_read:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function _i2c_rx_mode *****************
  4019 ;; Defined at:
  4020 ;;		line 67 in file "i2c.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4034 ;;      Params:         0       0       0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0
  4037 ;;      Totals:         0       0       0       0       0       0       0
  4038 ;;Total ram usage:        0 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 1
  4041 ;; This function calls:
  4042 ;;		_i2c_idle
  4043 ;; This function is called by:
  4044 ;;		_i2c_read
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text18
  4049   00279E                     __ptext18:
  4050                           	callstack 0
  4051   00279E                     _i2c_rx_mode:
  4052                           	callstack 26
  4053   00279E                     
  4054                           ;i2c.c: 69:  RCEN = 1;
  4055   00279E  86C5               	bsf	4037,3,c	;volatile
  4056   0027A0                     
  4057                           ;i2c.c: 70:  i2c_idle();
  4058   0027A0  ECB6  F013         	call	_i2c_idle	;wreg free
  4059   0027A4  0012               	return		;funcret
  4060   0027A6                     __end_of_i2c_rx_mode:
  4061                           	callstack 0
  4062                           
  4063 ;; *************** function _i2c_no_ack *****************
  4064 ;; Defined at:
  4065 ;;		line 73 in file "i2c.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		None
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4079 ;;      Params:         0       0       0       0       0       0       0
  4080 ;;      Locals:         0       0       0       0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0       0       0
  4082 ;;      Totals:         0       0       0       0       0       0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_i2c_read
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text19
  4093   0027B6                     __ptext19:
  4094                           	callstack 0
  4095   0027B6                     _i2c_no_ack:
  4096                           	callstack 27
  4097   0027B6                     
  4098                           ;i2c.c: 75:  ACKDT = 1;
  4099   0027B6  8AC5               	bsf	4037,5,c	;volatile
  4100                           
  4101                           ;i2c.c: 76:  ACKEN = 1;
  4102   0027B8  88C5               	bsf	4037,4,c	;volatile
  4103   0027BA  0012               	return		;funcret
  4104   0027BC                     __end_of_i2c_no_ack:
  4105                           	callstack 0
  4106                           
  4107 ;; *************** function _clcd_putch *****************
  4108 ;; Defined at:
  4109 ;;		line 74 in file "clcd.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  data            1    wreg     const unsigned char 
  4112 ;;  addr            1    8[COMRAM] unsigned char 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  data            1    9[COMRAM] const unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4124 ;;      Params:         1       0       0       0       0       0       0
  4125 ;;      Locals:         1       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0
  4127 ;;      Totals:         2       0       0       0       0       0       0
  4128 ;;Total ram usage:        2 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; Hardware stack levels required when called: 1
  4131 ;; This function calls:
  4132 ;;		_clcd_write
  4133 ;; This function is called by:
  4134 ;;		_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text20
  4139   00272C                     __ptext20:
  4140                           	callstack 0
  4141   00272C                     _clcd_putch:
  4142                           	callstack 29
  4143                           
  4144                           ;incstack = 0
  4145                           ;clcd_putch@data stored from wreg
  4146   00272C  6E0A               	movwf	clcd_putch@data^0,c
  4147   00272E                     
  4148                           ;clcd.c: 74: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 75: {
      +                          ;clcd.c: 76:  clcd_write(addr, 0);
  4149   00272E  0E00               	movlw	0
  4150   002730  6E01               	movwf	clcd_write@control_bit^0,c
  4151   002732  5009               	movf	clcd_putch@addr^0,w,c
  4152   002734  ECE7  F012         	call	_clcd_write
  4153                           
  4154                           ;clcd.c: 77:  clcd_write(data, 1);
  4155   002738  0E01               	movlw	1
  4156   00273A  6E01               	movwf	clcd_write@control_bit^0,c
  4157   00273C  500A               	movf	clcd_putch@data^0,w,c
  4158   00273E  ECE7  F012         	call	_clcd_write
  4159   002742  0012               	return		;funcret
  4160   002744                     __end_of_clcd_putch:
  4161                           	callstack 0
  4162                           
  4163 ;; *************** function _clcd_print *****************
  4164 ;; Defined at:
  4165 ;;		line 65 in file "clcd.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  data            2    6[COMRAM] PTR const unsigned char 
  4168 ;;		 -> STR_33(3), STR_32(3), STR_31(3), STR_30(7), 
  4169 ;;		 -> STR_29(21), STR_27(15), STR_26(14), STR_25(18), 
  4170 ;;		 -> STR_24(11), STR_23(14), STR_22(17), STR_21(14), 
  4171 ;;		 -> STR_20(19), STR_19(19), STR_18(17), STR_17(11), 
  4172 ;;		 -> STR_16(19), STR_15(19), STR_14(17), detail(180), 
  4173 ;;		 -> time(9), STR_13(10), STR_12(13), STR_11(9), 
  4174 ;;		 -> STR_10(9), STR_9(3), STR_8(3), STR_7(3), 
  4175 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  4176 ;;		 -> STR_2(3), STR_1(3), 
  4177 ;;  addr            1    8[COMRAM] unsigned char 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4189 ;;      Params:         3       0       0       0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0
  4192 ;;      Totals:         3       0       0       0       0       0       0
  4193 ;;Total ram usage:        3 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; Hardware stack levels required when called: 1
  4196 ;; This function calls:
  4197 ;;		_clcd_write
  4198 ;; This function is called by:
  4199 ;;		_main
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text21
  4204   002332                     __ptext21:
  4205                           	callstack 0
  4206   002332                     _clcd_print:
  4207                           	callstack 29
  4208   002332                     
  4209                           ;clcd.c: 65: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 66: 
      +                          {;clcd.c: 67:  clcd_write(addr, 0);
  4210   002332  0E00               	movlw	0
  4211   002334  6E01               	movwf	clcd_write@control_bit^0,c
  4212   002336  5009               	movf	clcd_print@addr^0,w,c
  4213   002338  ECE7  F012         	call	_clcd_write
  4214                           
  4215                           ;clcd.c: 68:  while (*data != '\0')
  4216   00233C  EFB6  F011         	goto	l3152
  4217   002340                     l3148:
  4218                           
  4219                           ;clcd.c: 69:  {;clcd.c: 70:   clcd_write(*data++, 1);
  4220   002340  0E01               	movlw	1
  4221   002342  6E01               	movwf	clcd_write@control_bit^0,c
  4222   002344  C007  FFF6         	movff	clcd_print@data,tblptrl
  4223   002348  C008  FFF7         	movff	clcd_print@data+1,tblptrh
  4224   00234C  6AF8               	clrf	tblptru,c
  4225   00234E  0E05               	movlw	(high __ramtop+-1)
  4226   002350  64F7               	cpfsgt	tblptrh,c
  4227   002352  D003               	bra	u2737
  4228   002354  0008               	tblrd		*
  4229   002356  50F5               	movf	tablat,w,c
  4230   002358  D005               	bra	u2730
  4231   00235A                     u2737:
  4232   00235A  CFF6 FFD9          	movff	tblptrl,fsr2l
  4233   00235E  CFF7 FFDA          	movff	tblptrh,fsr2h
  4234   002362  50DF               	movf	indf2,w,c
  4235   002364                     u2730:
  4236   002364  ECE7  F012         	call	_clcd_write
  4237   002368  4A07               	infsnz	clcd_print@data^0,f,c
  4238   00236A  2A08               	incf	(clcd_print@data+1)^0,f,c
  4239   00236C                     l3152:
  4240                           
  4241                           ;clcd.c: 68:  while (*data != '\0')
  4242   00236C  C007  FFF6         	movff	clcd_print@data,tblptrl
  4243   002370  C008  FFF7         	movff	clcd_print@data+1,tblptrh
  4244   002374  6AF8               	clrf	tblptru,c
  4245   002376  0E05               	movlw	(high __ramtop+-1)
  4246   002378  64F7               	cpfsgt	tblptrh,c
  4247   00237A  D003               	bra	u2747
  4248   00237C  0008               	tblrd		*
  4249   00237E  50F5               	movf	tablat,w,c
  4250   002380  D005               	bra	u2740
  4251   002382                     u2747:
  4252   002382  CFF6 FFD9          	movff	tblptrl,fsr2l
  4253   002386  CFF7 FFDA          	movff	tblptrh,fsr2h
  4254   00238A  50DF               	movf	indf2,w,c
  4255   00238C                     u2740:
  4256   00238C  0900               	iorlw	0
  4257   00238E  A4D8               	btfss	status,2,c
  4258   002390  EFCC  F011         	goto	u2751
  4259   002394  EFCE  F011         	goto	u2750
  4260   002398                     u2751:
  4261   002398  EFA0  F011         	goto	l3148
  4262   00239C                     u2750:
  4263   00239C  0012               	return		;funcret
  4264   00239E                     __end_of_clcd_print:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _check_matrix_keypad *****************
  4268 ;; Defined at:
  4269 ;;		line 118 in file "main.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  key             1   17[COMRAM] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4283 ;;      Params:         0       0       0       0       0       0       0
  4284 ;;      Locals:         1       0       0       0       0       0       0
  4285 ;;      Temps:          3       0       0       0       0       0       0
  4286 ;;      Totals:         4       0       0       0       0       0       0
  4287 ;;Total ram usage:        4 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 4
  4290 ;; This function calls:
  4291 ;;		___awdiv
  4292 ;;		___awmod
  4293 ;;		_clcd_write
  4294 ;;		_read_switches
  4295 ;;		_write_ds1307
  4296 ;;		_writing_eeprom
  4297 ;; This function is called by:
  4298 ;;		_main
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text22
  4303   001112                     __ptext22:
  4304                           	callstack 0
  4305   001112                     _check_matrix_keypad:
  4306                           	callstack 26
  4307   001112                     
  4308                           ;main.c: 120:  unsigned char key;;main.c: 121:  key = read_switches(1);
  4309   001112  0E01               	movlw	1
  4310   001114  EC24  F011         	call	_read_switches
  4311   001118  6E12               	movwf	check_matrix_keypad@key^0,c
  4312   00111A                     
  4313                           ;main.c: 123:     if(key==1 && settime_flag==1)
  4314   00111A  0412               	decf	check_matrix_keypad@key^0,w,c
  4315   00111C  A4D8               	btfss	status,2,c
  4316   00111E  EF93  F008         	goto	u2021
  4317   001122  EF95  F008         	goto	u2020
  4318   001126                     u2021:
  4319   001126  EFF2  F008         	goto	l2872
  4320   00112A                     u2020:
  4321   00112A  0443               	decf	_settime_flag^0,w,c
  4322   00112C  1044               	iorwf	(_settime_flag+1)^0,w,c
  4323   00112E  A4D8               	btfss	status,2,c
  4324   001130  EF9C  F008         	goto	u2031
  4325   001134  EF9E  F008         	goto	u2030
  4326   001138                     u2031:
  4327   001138  EFF2  F008         	goto	l2872
  4328   00113C                     u2030:
  4329   00113C                     
  4330                           ;main.c: 124:     {;main.c: 127:         if(field==0)
  4331   00113C  504B               	movf	_field^0,w,c
  4332   00113E  104C               	iorwf	(_field+1)^0,w,c
  4333   001140  A4D8               	btfss	status,2,c
  4334   001142  EFA5  F008         	goto	u2041
  4335   001146  EFA7  F008         	goto	u2040
  4336   00114A                     u2041:
  4337   00114A  EFBB  F008         	goto	l2852
  4338   00114E                     u2040:
  4339   00114E                     
  4340                           ;main.c: 128:         {;main.c: 129:             hour++;
  4341   00114E  4A51               	infsnz	_hour^0,f,c
  4342   001150  2A52               	incf	(_hour+1)^0,f,c
  4343   001152                     
  4344                           ;main.c: 130:             if(hour==24)
  4345   001152  0E18               	movlw	24
  4346   001154  1851               	xorwf	_hour^0,w,c
  4347   001156  1052               	iorwf	(_hour+1)^0,w,c
  4348   001158  A4D8               	btfss	status,2,c
  4349   00115A  EFB1  F008         	goto	u2051
  4350   00115E  EFB3  F008         	goto	u2050
  4351   001162                     u2051:
  4352   001162  EFE1  F00C         	goto	l115
  4353   001166                     u2050:
  4354   001166                     
  4355                           ;main.c: 131:                 hour=0;
  4356   001166  0E00               	movlw	0
  4357   001168  6E52               	movwf	(_hour+1)^0,c
  4358   00116A  0E00               	movlw	0
  4359   00116C  6E51               	movwf	_hour^0,c
  4360   00116E  EFE1  F00C         	goto	l115
  4361   001172                     l108:
  4362                           
  4363                           ;main.c: 132:         }
  4364   001172  EFE1  F00C         	goto	l115
  4365   001176                     l2852:
  4366   001176  044B               	decf	_field^0,w,c
  4367   001178  104C               	iorwf	(_field+1)^0,w,c
  4368   00117A  A4D8               	btfss	status,2,c
  4369   00117C  EFC2  F008         	goto	u2061
  4370   001180  EFC4  F008         	goto	u2060
  4371   001184                     u2061:
  4372   001184  EFD6  F008         	goto	l2860
  4373   001188                     u2060:
  4374   001188                     
  4375                           ;main.c: 134:         {;main.c: 135:             min++;
  4376   001188  4A4F               	infsnz	_min^0,f,c
  4377   00118A  2A50               	incf	(_min+1)^0,f,c
  4378   00118C                     
  4379                           ;main.c: 136:             if(min==60)
  4380   00118C  0E3C               	movlw	60
  4381   00118E  184F               	xorwf	_min^0,w,c
  4382   001190  1050               	iorwf	(_min+1)^0,w,c
  4383   001192  A4D8               	btfss	status,2,c
  4384   001194  EFCE  F008         	goto	u2071
  4385   001198  EFD0  F008         	goto	u2070
  4386   00119C                     u2071:
  4387   00119C  EFE1  F00C         	goto	l115
  4388   0011A0                     u2070:
  4389   0011A0                     
  4390                           ;main.c: 137:                 min=0;
  4391   0011A0  0E00               	movlw	0
  4392   0011A2  6E50               	movwf	(_min+1)^0,c
  4393   0011A4  0E00               	movlw	0
  4394   0011A6  6E4F               	movwf	_min^0,c
  4395   0011A8  EFE1  F00C         	goto	l115
  4396   0011AC                     l2860:
  4397   0011AC  0E02               	movlw	2
  4398   0011AE  184B               	xorwf	_field^0,w,c
  4399   0011B0  104C               	iorwf	(_field+1)^0,w,c
  4400   0011B2  A4D8               	btfss	status,2,c
  4401   0011B4  EFDE  F008         	goto	u2081
  4402   0011B8  EFE0  F008         	goto	u2080
  4403   0011BC                     u2081:
  4404   0011BC  EFB9  F008         	goto	l108
  4405   0011C0                     u2080:
  4406   0011C0                     
  4407                           ;main.c: 140:         {;main.c: 141:             sec++;
  4408   0011C0  4A4D               	infsnz	_sec^0,f,c
  4409   0011C2  2A4E               	incf	(_sec+1)^0,f,c
  4410   0011C4                     
  4411                           ;main.c: 142:             if(sec==60)
  4412   0011C4  0E3C               	movlw	60
  4413   0011C6  184D               	xorwf	_sec^0,w,c
  4414   0011C8  104E               	iorwf	(_sec+1)^0,w,c
  4415   0011CA  A4D8               	btfss	status,2,c
  4416   0011CC  EFEA  F008         	goto	u2091
  4417   0011D0  EFEC  F008         	goto	u2090
  4418   0011D4                     u2091:
  4419   0011D4  EFE1  F00C         	goto	l115
  4420   0011D8                     u2090:
  4421   0011D8                     
  4422                           ;main.c: 143:                 sec=0;
  4423   0011D8  0E00               	movlw	0
  4424   0011DA  6E4E               	movwf	(_sec+1)^0,c
  4425   0011DC  0E00               	movlw	0
  4426   0011DE  6E4D               	movwf	_sec^0,c
  4427   0011E0  EFE1  F00C         	goto	l115
  4428   0011E4                     l2872:
  4429   0011E4  0E02               	movlw	2
  4430   0011E6  1812               	xorwf	check_matrix_keypad@key^0,w,c
  4431   0011E8  A4D8               	btfss	status,2,c
  4432   0011EA  EFF9  F008         	goto	u2101
  4433   0011EE  EFFB  F008         	goto	u2100
  4434   0011F2                     u2101:
  4435   0011F2  EF16  F009         	goto	l2886
  4436   0011F6                     u2100:
  4437   0011F6  0443               	decf	_settime_flag^0,w,c
  4438   0011F8  1044               	iorwf	(_settime_flag+1)^0,w,c
  4439   0011FA  A4D8               	btfss	status,2,c
  4440   0011FC  EF02  F009         	goto	u2111
  4441   001200  EF04  F009         	goto	u2110
  4442   001204                     u2111:
  4443   001204  EF16  F009         	goto	l2886
  4444   001208                     u2110:
  4445   001208                     
  4446                           ;main.c: 148:     {;main.c: 149:         field++;
  4447   001208  4A4B               	infsnz	_field^0,f,c
  4448   00120A  2A4C               	incf	(_field+1)^0,f,c
  4449   00120C                     
  4450                           ;main.c: 150:         if(field==3)
  4451   00120C  0E03               	movlw	3
  4452   00120E  184B               	xorwf	_field^0,w,c
  4453   001210  104C               	iorwf	(_field+1)^0,w,c
  4454   001212  A4D8               	btfss	status,2,c
  4455   001214  EF0E  F009         	goto	u2121
  4456   001218  EF10  F009         	goto	u2120
  4457   00121C                     u2121:
  4458   00121C  EFE1  F00C         	goto	l115
  4459   001220                     u2120:
  4460   001220                     l2880:
  4461                           
  4462                           ;main.c: 151:             field=0;
  4463   001220  0E00               	movlw	0
  4464   001222  6E4C               	movwf	(_field+1)^0,c
  4465   001224  0E00               	movlw	0
  4466   001226  6E4B               	movwf	_field^0,c
  4467   001228  EFE1  F00C         	goto	l115
  4468   00122C                     l2886:
  4469   00122C  0E0B               	movlw	11
  4470   00122E  1812               	xorwf	check_matrix_keypad@key^0,w,c
  4471   001230  A4D8               	btfss	status,2,c
  4472   001232  EF1D  F009         	goto	u2131
  4473   001236  EF1F  F009         	goto	u2130
  4474   00123A                     u2131:
  4475   00123A  EFA4  F009         	goto	l2912
  4476   00123E                     u2130:
  4477   00123E  0443               	decf	_settime_flag^0,w,c
  4478   001240  1044               	iorwf	(_settime_flag+1)^0,w,c
  4479   001242  A4D8               	btfss	status,2,c
  4480   001244  EF26  F009         	goto	u2141
  4481   001248  EF28  F009         	goto	u2140
  4482   00124C                     u2141:
  4483   00124C  EFA4  F009         	goto	l2912
  4484   001250                     u2140:
  4485   001250                     
  4486                           ;main.c: 155:     {;main.c: 159:         write_ds1307(0x02,((hour/10)<<4 ) | (hour%10));
  4487   001250  C051  F001         	movff	_hour,___awmod@dividend
  4488   001254  C052  F002         	movff	_hour+1,___awmod@dividend+1
  4489   001258  0E00               	movlw	0
  4490   00125A  6E04               	movwf	(___awmod@divisor+1)^0,c
  4491   00125C  0E0A               	movlw	10
  4492   00125E  6E03               	movwf	___awmod@divisor^0,c
  4493   001260  EC78  F010         	call	___awmod	;wreg free
  4494   001264  C001  F00F         	movff	?___awmod,??_check_matrix_keypad
  4495   001268  C002  F010         	movff	?___awmod+1,??_check_matrix_keypad+1
  4496   00126C  C051  F001         	movff	_hour,___awdiv@dividend
  4497   001270  C052  F002         	movff	_hour+1,___awdiv@dividend+1
  4498   001274  0E00               	movlw	0
  4499   001276  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4500   001278  0E0A               	movlw	10
  4501   00127A  6E03               	movwf	___awdiv@divisor^0,c
  4502   00127C  EC16  F010         	call	___awdiv	;wreg free
  4503   001280  3801               	swapf	?___awdiv^0,w,c
  4504   001282  0BF0               	andlw	240
  4505   001284  100F               	iorwf	??_check_matrix_keypad^0,w,c
  4506   001286  6E09               	movwf	write_ds1307@data^0,c
  4507   001288  0E02               	movlw	2
  4508   00128A  EC61  F013         	call	_write_ds1307
  4509                           
  4510                           ;main.c: 160:         write_ds1307(0x01, ((min/10)<<4 ) | (min%10));
  4511   00128E  C04F  F001         	movff	_min,___awmod@dividend
  4512   001292  C050  F002         	movff	_min+1,___awmod@dividend+1
  4513   001296  0E00               	movlw	0
  4514   001298  6E04               	movwf	(___awmod@divisor+1)^0,c
  4515   00129A  0E0A               	movlw	10
  4516   00129C  6E03               	movwf	___awmod@divisor^0,c
  4517   00129E  EC78  F010         	call	___awmod	;wreg free
  4518   0012A2  C001  F00F         	movff	?___awmod,??_check_matrix_keypad
  4519   0012A6  C002  F010         	movff	?___awmod+1,??_check_matrix_keypad+1
  4520   0012AA  C04F  F001         	movff	_min,___awdiv@dividend
  4521   0012AE  C050  F002         	movff	_min+1,___awdiv@dividend+1
  4522   0012B2  0E00               	movlw	0
  4523   0012B4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4524   0012B6  0E0A               	movlw	10
  4525   0012B8  6E03               	movwf	___awdiv@divisor^0,c
  4526   0012BA  EC16  F010         	call	___awdiv	;wreg free
  4527   0012BE  3801               	swapf	?___awdiv^0,w,c
  4528   0012C0  0BF0               	andlw	240
  4529   0012C2  100F               	iorwf	??_check_matrix_keypad^0,w,c
  4530   0012C4  6E09               	movwf	write_ds1307@data^0,c
  4531   0012C6  0E01               	movlw	1
  4532   0012C8  EC61  F013         	call	_write_ds1307
  4533                           
  4534                           ;main.c: 161:         write_ds1307(0x00, ((sec/10)<<4 ) | (sec%10));
  4535   0012CC  C04D  F001         	movff	_sec,___awmod@dividend
  4536   0012D0  C04E  F002         	movff	_sec+1,___awmod@dividend+1
  4537   0012D4  0E00               	movlw	0
  4538   0012D6  6E04               	movwf	(___awmod@divisor+1)^0,c
  4539   0012D8  0E0A               	movlw	10
  4540   0012DA  6E03               	movwf	___awmod@divisor^0,c
  4541   0012DC  EC78  F010         	call	___awmod	;wreg free
  4542   0012E0  C001  F00F         	movff	?___awmod,??_check_matrix_keypad
  4543   0012E4  C002  F010         	movff	?___awmod+1,??_check_matrix_keypad+1
  4544   0012E8  C04D  F001         	movff	_sec,___awdiv@dividend
  4545   0012EC  C04E  F002         	movff	_sec+1,___awdiv@dividend+1
  4546   0012F0  0E00               	movlw	0
  4547   0012F2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4548   0012F4  0E0A               	movlw	10
  4549   0012F6  6E03               	movwf	___awdiv@divisor^0,c
  4550   0012F8  EC16  F010         	call	___awdiv	;wreg free
  4551   0012FC  3801               	swapf	?___awdiv^0,w,c
  4552   0012FE  0BF0               	andlw	240
  4553   001300  100F               	iorwf	??_check_matrix_keypad^0,w,c
  4554   001302  6E09               	movwf	write_ds1307@data^0,c
  4555   001304  0E00               	movlw	0
  4556   001306  EC61  F013         	call	_write_ds1307
  4557   00130A                     
  4558                           ;main.c: 162:         menu_flag=0;
  4559   00130A  0E00               	movlw	0
  4560   00130C  6E42               	movwf	(_menu_flag+1)^0,c
  4561   00130E  0E00               	movlw	0
  4562   001310  6E41               	movwf	_menu_flag^0,c
  4563   001312                     
  4564                           ;main.c: 163:         settime_flag=0;
  4565   001312  0E00               	movlw	0
  4566   001314  6E44               	movwf	(_settime_flag+1)^0,c
  4567   001316  0E00               	movlw	0
  4568   001318  6E43               	movwf	_settime_flag^0,c
  4569   00131A                     
  4570                           ;main.c: 164:         j=0;
  4571   00131A  0E00               	movlw	0
  4572   00131C  6E5A               	movwf	(_j+1)^0,c
  4573   00131E  0E00               	movlw	0
  4574   001320  6E59               	movwf	_j^0,c
  4575   001322                     
  4576                           ;main.c: 165:         star=0;
  4577   001322  0E00               	movlw	0
  4578   001324  6E56               	movwf	(_star+1)^0,c
  4579   001326  0E00               	movlw	0
  4580   001328  6E55               	movwf	_star^0,c
  4581   00132A                     
  4582                           ;main.c: 166:         k=0;
  4583   00132A  0E00               	movlw	0
  4584   00132C  6E58               	movwf	(_k+1)^0,c
  4585   00132E  0E00               	movlw	0
  4586   001330  6E57               	movwf	_k^0,c
  4587   001332                     
  4588                           ;main.c: 167:         flag=0;
  4589   001332  0E00               	movlw	0
  4590   001334  0100               	movlb	0	; () banked
  4591   001336  6F80               	movwf	(_flag+1)& (0+255),b
  4592   001338  0E00               	movlw	0
  4593   00133A  6F7F               	movwf	_flag& (0+255),b
  4594   00133C                     
  4595                           ; BSR set to: 0
  4596                           ;main.c: 168:         time_flag=0;
  4597   00133C  0E00               	movlw	0
  4598   00133E  6F88               	movwf	(_time_flag+1)& (0+255),b
  4599   001340  0E00               	movlw	0
  4600   001342  6F87               	movwf	_time_flag& (0+255),b
  4601   001344  EF10  F009         	goto	l2880
  4602   001348                     l2912:
  4603   001348  0E0C               	movlw	12
  4604   00134A  1812               	xorwf	check_matrix_keypad@key^0,w,c
  4605   00134C  A4D8               	btfss	status,2,c
  4606   00134E  EFAB  F009         	goto	u2151
  4607   001352  EFAD  F009         	goto	u2150
  4608   001356                     u2151:
  4609   001356  EFD9  F009         	goto	l119
  4610   00135A                     u2150:
  4611   00135A  0443               	decf	_settime_flag^0,w,c
  4612   00135C  1044               	iorwf	(_settime_flag+1)^0,w,c
  4613   00135E  A4D8               	btfss	status,2,c
  4614   001360  EFB4  F009         	goto	u2161
  4615   001364  EFB6  F009         	goto	u2160
  4616   001368                     u2161:
  4617   001368  EFD9  F009         	goto	l119
  4618   00136C                     u2160:
  4619   00136C                     
  4620                           ;main.c: 173:     {;main.c: 174:         menu_flag=1;
  4621   00136C  0E00               	movlw	0
  4622   00136E  6E42               	movwf	(_menu_flag+1)^0,c
  4623   001370  0E01               	movlw	1
  4624   001372  6E41               	movwf	_menu_flag^0,c
  4625                           
  4626                           ;main.c: 175:         settime_flag=0;
  4627   001374  0E00               	movlw	0
  4628   001376  6E44               	movwf	(_settime_flag+1)^0,c
  4629   001378  0E00               	movlw	0
  4630   00137A  6E43               	movwf	_settime_flag^0,c
  4631                           
  4632                           ;main.c: 176:         j=0;
  4633   00137C  0E00               	movlw	0
  4634   00137E  6E5A               	movwf	(_j+1)^0,c
  4635   001380  0E00               	movlw	0
  4636   001382  6E59               	movwf	_j^0,c
  4637                           
  4638                           ;main.c: 177:         star=0;
  4639   001384  0E00               	movlw	0
  4640   001386  6E56               	movwf	(_star+1)^0,c
  4641   001388  0E00               	movlw	0
  4642   00138A  6E55               	movwf	_star^0,c
  4643                           
  4644                           ;main.c: 178:         k=0;
  4645   00138C  0E00               	movlw	0
  4646   00138E  6E58               	movwf	(_k+1)^0,c
  4647   001390  0E00               	movlw	0
  4648   001392  6E57               	movwf	_k^0,c
  4649                           
  4650                           ;main.c: 179:         flag=0;
  4651   001394  0E00               	movlw	0
  4652   001396  0100               	movlb	0	; () banked
  4653   001398  6F80               	movwf	(_flag+1)& (0+255),b
  4654   00139A  0E00               	movlw	0
  4655   00139C  6F7F               	movwf	_flag& (0+255),b
  4656                           
  4657                           ;main.c: 180:         time_flag=0;
  4658   00139E  0E00               	movlw	0
  4659   0013A0  6F88               	movwf	(_time_flag+1)& (0+255),b
  4660   0013A2  0E00               	movlw	0
  4661   0013A4  6F87               	movwf	_time_flag& (0+255),b
  4662                           
  4663                           ;main.c: 181:         field=0;
  4664   0013A6  0E00               	movlw	0
  4665   0013A8  6E4C               	movwf	(_field+1)^0,c
  4666   0013AA  0E00               	movlw	0
  4667   0013AC  6E4B               	movwf	_field^0,c
  4668   0013AE  EFE1  F00C         	goto	l115
  4669   0013B2                     l119:
  4670   0013B2                     
  4671                           ;main.c: 185:     if(key==12 && menu_flag!=0)
  4672   0013B2  0E0C               	movlw	12
  4673   0013B4  1812               	xorwf	check_matrix_keypad@key^0,w,c
  4674   0013B6  A4D8               	btfss	status,2,c
  4675   0013B8  EFE0  F009         	goto	u2171
  4676   0013BC  EFE2  F009         	goto	u2170
  4677   0013C0                     u2171:
  4678   0013C0  EF16  F00A         	goto	l2946
  4679   0013C4                     u2170:
  4680   0013C4  5041               	movf	_menu_flag^0,w,c
  4681   0013C6  1042               	iorwf	(_menu_flag+1)^0,w,c
  4682   0013C8  B4D8               	btfsc	status,2,c
  4683   0013CA  EFE9  F009         	goto	u2181
  4684   0013CE  EFEB  F009         	goto	u2180
  4685   0013D2                     u2181:
  4686   0013D2  EF16  F00A         	goto	l2946
  4687   0013D6                     u2180:
  4688   0013D6                     
  4689                           ;main.c: 186:     {;main.c: 187:         clcd_write(0x01, 0);
  4690   0013D6  0E00               	movlw	0
  4691   0013D8  6E01               	movwf	clcd_write@control_bit^0,c
  4692   0013DA  0E01               	movlw	1
  4693   0013DC  ECE7  F012         	call	_clcd_write
  4694   0013E0                     
  4695                           ;main.c: 188:         menu_flag--;
  4696   0013E0  0641               	decf	_menu_flag^0,f,c
  4697   0013E2  A0D8               	btfss	status,0,c
  4698   0013E4  0642               	decf	(_menu_flag+1)^0,f,c
  4699   0013E6                     
  4700                           ;main.c: 189:         view_flag=0;
  4701   0013E6  0E00               	movlw	0
  4702   0013E8  6E46               	movwf	(_view_flag+1)^0,c
  4703   0013EA  0E00               	movlw	0
  4704   0013EC  6E45               	movwf	_view_flag^0,c
  4705   0013EE                     
  4706                           ;main.c: 190:         settime_flag=0;
  4707   0013EE  0E00               	movlw	0
  4708   0013F0  6E44               	movwf	(_settime_flag+1)^0,c
  4709   0013F2  0E00               	movlw	0
  4710   0013F4  6E43               	movwf	_settime_flag^0,c
  4711   0013F6                     
  4712                           ;main.c: 191:         download_flag=0;
  4713   0013F6  0E00               	movlw	0
  4714   0013F8  0100               	movlb	0	; () banked
  4715   0013FA  6F84               	movwf	(_download_flag+1)& (0+255),b
  4716   0013FC  0E00               	movlw	0
  4717   0013FE  6F83               	movwf	_download_flag& (0+255),b
  4718   001400                     
  4719                           ; BSR set to: 0
  4720                           ;main.c: 192:         settime_flag=0;
  4721   001400  0E00               	movlw	0
  4722   001402  6E44               	movwf	(_settime_flag+1)^0,c
  4723   001404  0E00               	movlw	0
  4724   001406  6E43               	movwf	_settime_flag^0,c
  4725   001408                     
  4726                           ; BSR set to: 0
  4727                           ;main.c: 193:         j=0;
  4728   001408  0E00               	movlw	0
  4729   00140A  6E5A               	movwf	(_j+1)^0,c
  4730   00140C  0E00               	movlw	0
  4731   00140E  6E59               	movwf	_j^0,c
  4732   001410                     
  4733                           ; BSR set to: 0
  4734                           ;main.c: 194:         star=0;
  4735   001410  0E00               	movlw	0
  4736   001412  6E56               	movwf	(_star+1)^0,c
  4737   001414  0E00               	movlw	0
  4738   001416  6E55               	movwf	_star^0,c
  4739   001418                     
  4740                           ; BSR set to: 0
  4741                           ;main.c: 195:         k=0;
  4742   001418  0E00               	movlw	0
  4743   00141A  6E58               	movwf	(_k+1)^0,c
  4744   00141C  0E00               	movlw	0
  4745   00141E  6E57               	movwf	_k^0,c
  4746   001420                     
  4747                           ; BSR set to: 0
  4748                           ;main.c: 196:         flag=0;
  4749   001420  0E00               	movlw	0
  4750   001422  6F80               	movwf	(_flag+1)& (0+255),b
  4751   001424  0E00               	movlw	0
  4752   001426  6F7F               	movwf	_flag& (0+255),b
  4753   001428  EFE1  F00C         	goto	l115
  4754   00142C                     l2946:
  4755                           
  4756                           ;main.c: 200:     if(view_flag==1 && key==2 && j<9)
  4757   00142C  0445               	decf	_view_flag^0,w,c
  4758   00142E  1046               	iorwf	(_view_flag+1)^0,w,c
  4759   001430  A4D8               	btfss	status,2,c
  4760   001432  EF1D  F00A         	goto	u2191
  4761   001436  EF1F  F00A         	goto	u2190
  4762   00143A                     u2191:
  4763   00143A  EF6D  F00A         	goto	l2966
  4764   00143E                     u2190:
  4765   00143E  0E02               	movlw	2
  4766   001440  1812               	xorwf	check_matrix_keypad@key^0,w,c
  4767   001442  A4D8               	btfss	status,2,c
  4768   001444  EF26  F00A         	goto	u2201
  4769   001448  EF28  F00A         	goto	u2200
  4770   00144C                     u2201:
  4771   00144C  EF6D  F00A         	goto	l2966
  4772   001450                     u2200:
  4773   001450  BE5A               	btfsc	(_j+1)^0,7,c
  4774   001452  EF36  F00A         	goto	u2210
  4775   001456  505A               	movf	(_j+1)^0,w,c
  4776   001458  E107               	bnz	u2211
  4777   00145A  0E09               	movlw	9
  4778   00145C  5C59               	subwf	_j^0,w,c
  4779   00145E  B0D8               	btfsc	status,0,c
  4780   001460  EF34  F00A         	goto	u2211
  4781   001464  EF36  F00A         	goto	u2210
  4782   001468                     u2211:
  4783   001468  EF6D  F00A         	goto	l2966
  4784   00146C                     u2210:
  4785   00146C                     
  4786                           ;main.c: 201:     {;main.c: 202:         if(flag_count==1)
  4787   00146C  043F               	decf	_flag_count^0,w,c
  4788   00146E  1040               	iorwf	(_flag_count+1)^0,w,c
  4789   001470  A4D8               	btfss	status,2,c
  4790   001472  EF3D  F00A         	goto	u2221
  4791   001476  EF3F  F00A         	goto	u2220
  4792   00147A                     u2221:
  4793   00147A  EF43  F00A         	goto	l2956
  4794   00147E                     u2220:
  4795   00147E                     l2954:
  4796                           
  4797                           ;main.c: 203:             j++;
  4798   00147E  4A59               	infsnz	_j^0,f,c
  4799   001480  2A5A               	incf	(_j+1)^0,f,c
  4800   001482  EFE1  F00C         	goto	l115
  4801   001486                     l2956:
  4802   001486  503F               	movf	_flag_count^0,w,c
  4803   001488  1040               	iorwf	(_flag_count+1)^0,w,c
  4804   00148A  A4D8               	btfss	status,2,c
  4805   00148C  EF4A  F00A         	goto	u2231
  4806   001490  EF4C  F00A         	goto	u2230
  4807   001494                     u2231:
  4808   001494  EFE1  F00C         	goto	l115
  4809   001498                     u2230:
  4810   001498  C047  F001         	movff	_add,___awdiv@dividend
  4811   00149C  C048  F002         	movff	_add+1,___awdiv@dividend+1
  4812   0014A0  0E00               	movlw	0
  4813   0014A2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4814   0014A4  0E0A               	movlw	10
  4815   0014A6  6E03               	movwf	___awdiv@divisor^0,c
  4816   0014A8  EC16  F010         	call	___awdiv	;wreg free
  4817   0014AC  0EFF               	movlw	255
  4818   0014AE  2401               	addwf	?___awdiv^0,w,c
  4819   0014B0  6E0F               	movwf	??_check_matrix_keypad^0,c
  4820   0014B2  0EFF               	movlw	255
  4821   0014B4  2002               	addwfc	(?___awdiv+1)^0,w,c
  4822   0014B6  6E10               	movwf	(??_check_matrix_keypad+1)^0,c
  4823   0014B8  500F               	movf	??_check_matrix_keypad^0,w,c
  4824   0014BA  5C59               	subwf	_j^0,w,c
  4825   0014BC  505A               	movf	(_j+1)^0,w,c
  4826   0014BE  0A80               	xorlw	128
  4827   0014C0  6E11               	movwf	(??_check_matrix_keypad+2)^0,c
  4828   0014C2  5010               	movf	(??_check_matrix_keypad+1)^0,w,c
  4829   0014C4  0A80               	xorlw	128
  4830   0014C6  5811               	subwfb	(??_check_matrix_keypad+2)^0,w,c
  4831   0014C8  B0D8               	btfsc	status,0,c
  4832   0014CA  EF69  F00A         	goto	u2241
  4833   0014CE  EF6B  F00A         	goto	u2240
  4834   0014D2                     u2241:
  4835   0014D2  EFE1  F00C         	goto	l115
  4836   0014D6                     u2240:
  4837   0014D6  EF3F  F00A         	goto	l2954
  4838   0014DA                     l2966:
  4839   0014DA  0445               	decf	_view_flag^0,w,c
  4840   0014DC  1046               	iorwf	(_view_flag+1)^0,w,c
  4841   0014DE  A4D8               	btfss	status,2,c
  4842   0014E0  EF74  F00A         	goto	u2251
  4843   0014E4  EF76  F00A         	goto	u2250
  4844   0014E8                     u2251:
  4845   0014E8  EF90  F00A         	goto	l2976
  4846   0014EC                     u2250:
  4847   0014EC  0412               	decf	check_matrix_keypad@key^0,w,c
  4848   0014EE  A4D8               	btfss	status,2,c
  4849   0014F0  EF7C  F00A         	goto	u2261
  4850   0014F4  EF7E  F00A         	goto	u2260
  4851   0014F8                     u2261:
  4852   0014F8  EF90  F00A         	goto	l2976
  4853   0014FC                     u2260:
  4854   0014FC  BE5A               	btfsc	(_j+1)^0,7,c
  4855   0014FE  EF89  F00A         	goto	u2271
  4856   001502  505A               	movf	(_j+1)^0,w,c
  4857   001504  E108               	bnz	u2270
  4858   001506  0459               	decf	_j^0,w,c
  4859   001508  A0D8               	btfss	status,0,c
  4860   00150A  EF89  F00A         	goto	u2271
  4861   00150E  EF8B  F00A         	goto	u2270
  4862   001512                     u2271:
  4863   001512  EF90  F00A         	goto	l2976
  4864   001516                     u2270:
  4865   001516                     
  4866                           ;main.c: 209:     {;main.c: 210:         j--;
  4867   001516  0659               	decf	_j^0,f,c
  4868   001518  A0D8               	btfss	status,0,c
  4869   00151A  065A               	decf	(_j+1)^0,f,c
  4870   00151C  EFE1  F00C         	goto	l115
  4871   001520                     l2976:
  4872                           
  4873                           ;main.c: 214:     if(key==1 && i<=8 && menu_flag==0)
  4874   001520  0412               	decf	check_matrix_keypad@key^0,w,c
  4875   001522  A4D8               	btfss	status,2,c
  4876   001524  EF96  F00A         	goto	u2281
  4877   001528  EF98  F00A         	goto	u2280
  4878   00152C                     u2281:
  4879   00152C  EFE8  F00A         	goto	l3000
  4880   001530                     u2280:
  4881   001530  BE5C               	btfsc	(_i+1)^0,7,c
  4882   001532  EFA6  F00A         	goto	u2290
  4883   001536  505C               	movf	(_i+1)^0,w,c
  4884   001538  E107               	bnz	u2291
  4885   00153A  0E09               	movlw	9
  4886   00153C  5C5B               	subwf	_i^0,w,c
  4887   00153E  B0D8               	btfsc	status,0,c
  4888   001540  EFA4  F00A         	goto	u2291
  4889   001544  EFA6  F00A         	goto	u2290
  4890   001548                     u2291:
  4891   001548  EFE8  F00A         	goto	l3000
  4892   00154C                     u2290:
  4893   00154C  5041               	movf	_menu_flag^0,w,c
  4894   00154E  1042               	iorwf	(_menu_flag+1)^0,w,c
  4895   001550  A4D8               	btfss	status,2,c
  4896   001552  EFAD  F00A         	goto	u2301
  4897   001556  EFAF  F00A         	goto	u2300
  4898   00155A                     u2301:
  4899   00155A  EFE8  F00A         	goto	l3000
  4900   00155E                     u2300:
  4901   00155E                     
  4902                           ;main.c: 215:     {;main.c: 216:         if(add==100)
  4903   00155E  0E64               	movlw	100
  4904   001560  1847               	xorwf	_add^0,w,c
  4905   001562  1048               	iorwf	(_add+1)^0,w,c
  4906   001564  A4D8               	btfss	status,2,c
  4907   001566  EFB7  F00A         	goto	u2311
  4908   00156A  EFB9  F00A         	goto	u2310
  4909   00156E                     u2311:
  4910   00156E  EFC1  F00A         	goto	l131
  4911   001572                     u2310:
  4912   001572                     
  4913                           ;main.c: 217:         {;main.c: 218:             flag_count=1;
  4914   001572  0E00               	movlw	0
  4915   001574  6E40               	movwf	(_flag_count+1)^0,c
  4916   001576  0E01               	movlw	1
  4917   001578  6E3F               	movwf	_flag_count^0,c
  4918                           
  4919                           ;main.c: 219:             add=0;
  4920   00157A  0E00               	movlw	0
  4921   00157C  6E48               	movwf	(_add+1)^0,c
  4922   00157E  0E00               	movlw	0
  4923   001580  6E47               	movwf	_add^0,c
  4924   001582                     l131:
  4925                           
  4926                           ;main.c: 221:         save_flag=0;
  4927   001582  0E00               	movlw	0
  4928   001584  0100               	movlb	0	; () banked
  4929   001586  6F86               	movwf	(_save_flag+1)& (0+255),b
  4930   001588  0E00               	movlw	0
  4931   00158A  6F85               	movwf	_save_flag& (0+255),b
  4932   00158C                     
  4933                           ; BSR set to: 0
  4934                           ;main.c: 222:         if(i==7)
  4935   00158C  0E07               	movlw	7
  4936   00158E  185B               	xorwf	_i^0,w,c
  4937   001590  105C               	iorwf	(_i+1)^0,w,c
  4938   001592  A4D8               	btfss	status,2,c
  4939   001594  EFCE  F00A         	goto	u2321
  4940   001598  EFD0  F00A         	goto	u2320
  4941   00159C                     u2321:
  4942   00159C  EFD2  F00A         	goto	l2992
  4943   0015A0                     u2320:
  4944   0015A0  EFE1  F00C         	goto	l115
  4945   0015A4                     l2992:
  4946                           
  4947                           ; BSR set to: 0
  4948   0015A4  0E08               	movlw	8
  4949   0015A6  185B               	xorwf	_i^0,w,c
  4950   0015A8  105C               	iorwf	(_i+1)^0,w,c
  4951   0015AA  A4D8               	btfss	status,2,c
  4952   0015AC  EFDA  F00A         	goto	u2331
  4953   0015B0  EFDC  F00A         	goto	u2330
  4954   0015B4                     u2331:
  4955   0015B4  EFE2  F00A         	goto	l2996
  4956   0015B8                     u2330:
  4957   0015B8                     l2994:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;main.c: 225:             i=1;
  4961   0015B8  0E00               	movlw	0
  4962   0015BA  6E5C               	movwf	(_i+1)^0,c
  4963   0015BC  0E01               	movlw	1
  4964   0015BE  6E5B               	movwf	_i^0,c
  4965   0015C0  EFE4  F00A         	goto	l2998
  4966   0015C4                     l2996:
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;main.c: 227:             i++;
  4970   0015C4  4A5B               	infsnz	_i^0,f,c
  4971   0015C6  2A5C               	incf	(_i+1)^0,f,c
  4972   0015C8                     l2998:
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;main.c: 228:         writing_eeprom();
  4976   0015C8  EC95  F00F         	call	_writing_eeprom	;wreg free
  4977                           
  4978                           ;main.c: 229:     }
  4979   0015CC  EF67  F00B         	goto	l3032
  4980   0015D0                     l3000:
  4981   0015D0  0E02               	movlw	2
  4982   0015D2  1812               	xorwf	check_matrix_keypad@key^0,w,c
  4983   0015D4  A4D8               	btfss	status,2,c
  4984   0015D6  EFEF  F00A         	goto	u2341
  4985   0015DA  EFF1  F00A         	goto	u2340
  4986   0015DE                     u2341:
  4987   0015DE  EF30  F00B         	goto	l3018
  4988   0015E2                     u2340:
  4989   0015E2  BE5C               	btfsc	(_i+1)^0,7,c
  4990   0015E4  EFFD  F00A         	goto	u2351
  4991   0015E8  505C               	movf	(_i+1)^0,w,c
  4992   0015EA  E109               	bnz	u2350
  4993   0015EC  0E02               	movlw	2
  4994   0015EE  5C5B               	subwf	_i^0,w,c
  4995   0015F0  A0D8               	btfss	status,0,c
  4996   0015F2  EFFD  F00A         	goto	u2351
  4997   0015F6  EFFF  F00A         	goto	u2350
  4998   0015FA                     u2351:
  4999   0015FA  EF30  F00B         	goto	l3018
  5000   0015FE                     u2350:
  5001   0015FE  5041               	movf	_menu_flag^0,w,c
  5002   001600  1042               	iorwf	(_menu_flag+1)^0,w,c
  5003   001602  A4D8               	btfss	status,2,c
  5004   001604  EF06  F00B         	goto	u2361
  5005   001608  EF08  F00B         	goto	u2360
  5006   00160C                     u2361:
  5007   00160C  EF30  F00B         	goto	l3018
  5008   001610                     u2360:
  5009   001610                     
  5010                           ;main.c: 231:     {;main.c: 232:         if(add==100)
  5011   001610  0E64               	movlw	100
  5012   001612  1847               	xorwf	_add^0,w,c
  5013   001614  1048               	iorwf	(_add+1)^0,w,c
  5014   001616  A4D8               	btfss	status,2,c
  5015   001618  EF10  F00B         	goto	u2371
  5016   00161C  EF12  F00B         	goto	u2370
  5017   001620                     u2371:
  5018   001620  EF1A  F00B         	goto	l138
  5019   001624                     u2370:
  5020   001624                     
  5021                           ;main.c: 233:         {;main.c: 234:             flag_count=1;
  5022   001624  0E00               	movlw	0
  5023   001626  6E40               	movwf	(_flag_count+1)^0,c
  5024   001628  0E01               	movlw	1
  5025   00162A  6E3F               	movwf	_flag_count^0,c
  5026                           
  5027                           ;main.c: 235:             add=0;
  5028   00162C  0E00               	movlw	0
  5029   00162E  6E48               	movwf	(_add+1)^0,c
  5030   001630  0E00               	movlw	0
  5031   001632  6E47               	movwf	_add^0,c
  5032   001634                     l138:
  5033                           
  5034                           ;main.c: 237:         save_flag=0;
  5035   001634  0E00               	movlw	0
  5036   001636  0100               	movlb	0	; () banked
  5037   001638  6F86               	movwf	(_save_flag+1)& (0+255),b
  5038   00163A  0E00               	movlw	0
  5039   00163C  6F85               	movwf	_save_flag& (0+255),b
  5040   00163E                     
  5041                           ; BSR set to: 0
  5042                           ;main.c: 238:         if(i==8)
  5043   00163E  0E08               	movlw	8
  5044   001640  185B               	xorwf	_i^0,w,c
  5045   001642  105C               	iorwf	(_i+1)^0,w,c
  5046   001644  A4D8               	btfss	status,2,c
  5047   001646  EF27  F00B         	goto	u2381
  5048   00164A  EF29  F00B         	goto	u2380
  5049   00164E                     u2381:
  5050   00164E  EF2B  F00B         	goto	l3014
  5051   001652                     u2380:
  5052   001652  EFDC  F00A         	goto	l2994
  5053   001656                     l3014:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;main.c: 241:             i--;
  5057   001656  065B               	decf	_i^0,f,c
  5058   001658  A0D8               	btfss	status,0,c
  5059   00165A  065C               	decf	(_i+1)^0,f,c
  5060   00165C  EFE4  F00A         	goto	l2998
  5061   001660                     l3018:
  5062   001660  0E03               	movlw	3
  5063   001662  1812               	xorwf	check_matrix_keypad@key^0,w,c
  5064   001664  A4D8               	btfss	status,2,c
  5065   001666  EF37  F00B         	goto	u2391
  5066   00166A  EF39  F00B         	goto	u2390
  5067   00166E                     u2391:
  5068   00166E  EF67  F00B         	goto	l3032
  5069   001672                     u2390:
  5070   001672  5041               	movf	_menu_flag^0,w,c
  5071   001674  1042               	iorwf	(_menu_flag+1)^0,w,c
  5072   001676  A4D8               	btfss	status,2,c
  5073   001678  EF40  F00B         	goto	u2401
  5074   00167C  EF42  F00B         	goto	u2400
  5075   001680                     u2401:
  5076   001680  EF67  F00B         	goto	l3032
  5077   001684                     u2400:
  5078   001684                     
  5079                           ;main.c: 245:     {;main.c: 246:         if(add==100)
  5080   001684  0E64               	movlw	100
  5081   001686  1847               	xorwf	_add^0,w,c
  5082   001688  1048               	iorwf	(_add+1)^0,w,c
  5083   00168A  A4D8               	btfss	status,2,c
  5084   00168C  EF4A  F00B         	goto	u2411
  5085   001690  EF4C  F00B         	goto	u2410
  5086   001694                     u2411:
  5087   001694  EF54  F00B         	goto	l143
  5088   001698                     u2410:
  5089   001698                     
  5090                           ;main.c: 247:         {;main.c: 248:             flag_count=1;
  5091   001698  0E00               	movlw	0
  5092   00169A  6E40               	movwf	(_flag_count+1)^0,c
  5093   00169C  0E01               	movlw	1
  5094   00169E  6E3F               	movwf	_flag_count^0,c
  5095                           
  5096                           ;main.c: 249:             add=0;
  5097   0016A0  0E00               	movlw	0
  5098   0016A2  6E48               	movwf	(_add+1)^0,c
  5099   0016A4  0E00               	movlw	0
  5100   0016A6  6E47               	movwf	_add^0,c
  5101   0016A8                     l143:
  5102                           
  5103                           ;main.c: 251:         i=8;
  5104   0016A8  0E00               	movlw	0
  5105   0016AA  6E5C               	movwf	(_i+1)^0,c
  5106   0016AC  0E08               	movlw	8
  5107   0016AE  6E5B               	movwf	_i^0,c
  5108   0016B0                     
  5109                           ;main.c: 253:         if(save_flag==0)
  5110   0016B0  0100               	movlb	0	; () banked
  5111   0016B2  5185               	movf	_save_flag& (0+255),w,b
  5112   0016B4  1186               	iorwf	(_save_flag+1)& (0+255),w,b
  5113   0016B6  A4D8               	btfss	status,2,c
  5114   0016B8  EF60  F00B         	goto	u2421
  5115   0016BC  EF62  F00B         	goto	u2420
  5116   0016C0                     u2421:
  5117   0016C0  EF64  F00B         	goto	l3030
  5118   0016C4                     u2420:
  5119   0016C4                     
  5120                           ; BSR set to: 0
  5121                           ;main.c: 254:             writing_eeprom();
  5122   0016C4  EC95  F00F         	call	_writing_eeprom	;wreg free
  5123   0016C8                     l3030:
  5124                           
  5125                           ;main.c: 255:         save_flag++;
  5126   0016C8  0100               	movlb	0	; () banked
  5127   0016CA  4B85               	infsnz	_save_flag& (0+255),f,b
  5128   0016CC  2B86               	incf	(_save_flag+1)& (0+255),f,b
  5129   0016CE                     l3032:
  5130                           
  5131                           ;main.c: 258:     if(key==11 && menu_flag<2)
  5132   0016CE  0E0B               	movlw	11
  5133   0016D0  1812               	xorwf	check_matrix_keypad@key^0,w,c
  5134   0016D2  A4D8               	btfss	status,2,c
  5135   0016D4  EF6E  F00B         	goto	u2431
  5136   0016D8  EF70  F00B         	goto	u2430
  5137   0016DC                     u2431:
  5138   0016DC  EF80  F00B         	goto	l3038
  5139   0016E0                     u2430:
  5140   0016E0  BE42               	btfsc	(_menu_flag+1)^0,7,c
  5141   0016E2  EF7E  F00B         	goto	u2440
  5142   0016E6  5042               	movf	(_menu_flag+1)^0,w,c
  5143   0016E8  E107               	bnz	u2441
  5144   0016EA  0E02               	movlw	2
  5145   0016EC  5C41               	subwf	_menu_flag^0,w,c
  5146   0016EE  B0D8               	btfsc	status,0,c
  5147   0016F0  EF7C  F00B         	goto	u2441
  5148   0016F4  EF7E  F00B         	goto	u2440
  5149   0016F8                     u2441:
  5150   0016F8  EF80  F00B         	goto	l3038
  5151   0016FC                     u2440:
  5152   0016FC                     
  5153                           ;main.c: 259:     {;main.c: 260:         menu_flag++;
  5154   0016FC  4A41               	infsnz	_menu_flag^0,f,c
  5155   0016FE  2A42               	incf	(_menu_flag+1)^0,f,c
  5156   001700                     l3038:
  5157                           
  5158                           ;main.c: 263:     if(key==2 && k<3 && menu_flag==1)
  5159   001700  0E02               	movlw	2
  5160   001702  1812               	xorwf	check_matrix_keypad@key^0,w,c
  5161   001704  A4D8               	btfss	status,2,c
  5162   001706  EF87  F00B         	goto	u2451
  5163   00170A  EF89  F00B         	goto	u2450
  5164   00170E                     u2451:
  5165   00170E  EFE6  F00B         	goto	l3064
  5166   001712                     u2450:
  5167   001712  BE58               	btfsc	(_k+1)^0,7,c
  5168   001714  EF97  F00B         	goto	u2460
  5169   001718  5058               	movf	(_k+1)^0,w,c
  5170   00171A  E107               	bnz	u2461
  5171   00171C  0E03               	movlw	3
  5172   00171E  5C57               	subwf	_k^0,w,c
  5173   001720  B0D8               	btfsc	status,0,c
  5174   001722  EF95  F00B         	goto	u2461
  5175   001726  EF97  F00B         	goto	u2460
  5176   00172A                     u2461:
  5177   00172A  EFE6  F00B         	goto	l3064
  5178   00172E                     u2460:
  5179   00172E  0441               	decf	_menu_flag^0,w,c
  5180   001730  1042               	iorwf	(_menu_flag+1)^0,w,c
  5181   001732  A4D8               	btfss	status,2,c
  5182   001734  EF9E  F00B         	goto	u2471
  5183   001738  EFA0  F00B         	goto	u2470
  5184   00173C                     u2471:
  5185   00173C  EFE6  F00B         	goto	l3064
  5186   001740                     u2470:
  5187   001740                     
  5188                           ;main.c: 264:     {;main.c: 265:         if(add==100)
  5189   001740  0E64               	movlw	100
  5190   001742  1847               	xorwf	_add^0,w,c
  5191   001744  1048               	iorwf	(_add+1)^0,w,c
  5192   001746  A4D8               	btfss	status,2,c
  5193   001748  EFA8  F00B         	goto	u2481
  5194   00174C  EFAA  F00B         	goto	u2480
  5195   001750                     u2481:
  5196   001750  EFB2  F00B         	goto	l3048
  5197   001754                     u2480:
  5198   001754                     
  5199                           ;main.c: 266:         {;main.c: 267:             flag_count=1;
  5200   001754  0E00               	movlw	0
  5201   001756  6E40               	movwf	(_flag_count+1)^0,c
  5202   001758  0E01               	movlw	1
  5203   00175A  6E3F               	movwf	_flag_count^0,c
  5204                           
  5205                           ;main.c: 268:             add=0;
  5206   00175C  0E00               	movlw	0
  5207   00175E  6E48               	movwf	(_add+1)^0,c
  5208   001760  0E00               	movlw	0
  5209   001762  6E47               	movwf	_add^0,c
  5210   001764                     l3048:
  5211                           
  5212                           ;main.c: 270:         if(star==0)
  5213   001764  5055               	movf	_star^0,w,c
  5214   001766  1056               	iorwf	(_star+1)^0,w,c
  5215   001768  A4D8               	btfss	status,2,c
  5216   00176A  EFB9  F00B         	goto	u2491
  5217   00176E  EFBB  F00B         	goto	u2490
  5218   001772                     u2491:
  5219   001772  EFC4  F00B         	goto	l3056
  5220   001776                     u2490:
  5221   001776                     
  5222                           ;main.c: 271:         {;main.c: 272:             star=1;
  5223   001776  0E00               	movlw	0
  5224   001778  6E56               	movwf	(_star+1)^0,c
  5225   00177A  0E01               	movlw	1
  5226   00177C  6E55               	movwf	_star^0,c
  5227   00177E                     
  5228                           ;main.c: 273:             flag++;
  5229   00177E  0100               	movlb	0	; () banked
  5230   001780  4B7F               	infsnz	_flag& (0+255),f,b
  5231   001782  2B80               	incf	(_flag+1)& (0+255),f,b
  5232   001784  EFE1  F00C         	goto	l115
  5233   001788                     l3056:
  5234                           
  5235                           ;main.c: 276:         if(flag!=0)
  5236   001788  0100               	movlb	0	; () banked
  5237   00178A  517F               	movf	_flag& (0+255),w,b
  5238   00178C  1180               	iorwf	(_flag+1)& (0+255),w,b
  5239   00178E  B4D8               	btfsc	status,2,c
  5240   001790  EFCC  F00B         	goto	u2501
  5241   001794  EFCE  F00B         	goto	u2500
  5242   001798                     u2501:
  5243   001798  EFD0  F00B         	goto	l149
  5244   00179C                     u2500:
  5245   00179C                     
  5246                           ; BSR set to: 0
  5247                           ;main.c: 277:             k++;
  5248   00179C  4A57               	infsnz	_k^0,f,c
  5249   00179E  2A58               	incf	(_k+1)^0,f,c
  5250   0017A0                     l149:
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;main.c: 278:         flag++;
  5254   0017A0  4B7F               	infsnz	_flag& (0+255),f,b
  5255   0017A2  2B80               	incf	(_flag+1)& (0+255),f,b
  5256   0017A4                     
  5257                           ; BSR set to: 0
  5258                           ;main.c: 279:         if(k==3)
  5259   0017A4  0E03               	movlw	3
  5260   0017A6  1857               	xorwf	_k^0,w,c
  5261   0017A8  1058               	iorwf	(_k+1)^0,w,c
  5262   0017AA  A4D8               	btfss	status,2,c
  5263   0017AC  EFDA  F00B         	goto	u2511
  5264   0017B0  EFDC  F00B         	goto	u2510
  5265   0017B4                     u2511:
  5266   0017B4  EF4D  F00C         	goto	l3090
  5267   0017B8                     u2510:
  5268   0017B8                     
  5269                           ; BSR set to: 0
  5270                           ;main.c: 280:         {;main.c: 281:             k=2;
  5271   0017B8  0E00               	movlw	0
  5272   0017BA  6E58               	movwf	(_k+1)^0,c
  5273   0017BC  0E02               	movlw	2
  5274   0017BE  6E57               	movwf	_k^0,c
  5275                           
  5276                           ;main.c: 282:             flag=3;
  5277   0017C0  0E00               	movlw	0
  5278   0017C2  6F80               	movwf	(_flag+1)& (0+255),b
  5279   0017C4  0E03               	movlw	3
  5280   0017C6  6F7F               	movwf	_flag& (0+255),b
  5281   0017C8  EF4D  F00C         	goto	l3090
  5282   0017CC                     l3064:
  5283   0017CC  0412               	decf	check_matrix_keypad@key^0,w,c
  5284   0017CE  A4D8               	btfss	status,2,c
  5285   0017D0  EFEC  F00B         	goto	u2521
  5286   0017D4  EFEE  F00B         	goto	u2520
  5287   0017D8                     u2521:
  5288   0017D8  EF4D  F00C         	goto	l3090
  5289   0017DC                     u2520:
  5290   0017DC  BE58               	btfsc	(_k+1)^0,7,c
  5291   0017DE  EFFC  F00B         	goto	u2530
  5292   0017E2  5058               	movf	(_k+1)^0,w,c
  5293   0017E4  E107               	bnz	u2531
  5294   0017E6  0E03               	movlw	3
  5295   0017E8  5C57               	subwf	_k^0,w,c
  5296   0017EA  B0D8               	btfsc	status,0,c
  5297   0017EC  EFFA  F00B         	goto	u2531
  5298   0017F0  EFFC  F00B         	goto	u2530
  5299   0017F4                     u2531:
  5300   0017F4  EF4D  F00C         	goto	l3090
  5301   0017F8                     u2530:
  5302   0017F8  0441               	decf	_menu_flag^0,w,c
  5303   0017FA  1042               	iorwf	(_menu_flag+1)^0,w,c
  5304   0017FC  A4D8               	btfss	status,2,c
  5305   0017FE  EF03  F00C         	goto	u2541
  5306   001802  EF05  F00C         	goto	u2540
  5307   001806                     u2541:
  5308   001806  EF4D  F00C         	goto	l3090
  5309   00180A                     u2540:
  5310   00180A                     
  5311                           ;main.c: 286:     {;main.c: 287:         if(add==100)
  5312   00180A  0E64               	movlw	100
  5313   00180C  1847               	xorwf	_add^0,w,c
  5314   00180E  1048               	iorwf	(_add+1)^0,w,c
  5315   001810  A4D8               	btfss	status,2,c
  5316   001812  EF0D  F00C         	goto	u2551
  5317   001816  EF0F  F00C         	goto	u2550
  5318   00181A                     u2551:
  5319   00181A  EF17  F00C         	goto	l3074
  5320   00181E                     u2550:
  5321   00181E                     
  5322                           ;main.c: 288:         {;main.c: 289:             flag_count=1;
  5323   00181E  0E00               	movlw	0
  5324   001820  6E40               	movwf	(_flag_count+1)^0,c
  5325   001822  0E01               	movlw	1
  5326   001824  6E3F               	movwf	_flag_count^0,c
  5327                           
  5328                           ;main.c: 290:             add=0;
  5329   001826  0E00               	movlw	0
  5330   001828  6E48               	movwf	(_add+1)^0,c
  5331   00182A  0E00               	movlw	0
  5332   00182C  6E47               	movwf	_add^0,c
  5333   00182E                     l3074:
  5334                           
  5335                           ;main.c: 292:         if(star==1)
  5336   00182E  0455               	decf	_star^0,w,c
  5337   001830  1056               	iorwf	(_star+1)^0,w,c
  5338   001832  A4D8               	btfss	status,2,c
  5339   001834  EF1E  F00C         	goto	u2561
  5340   001838  EF20  F00C         	goto	u2560
  5341   00183C                     u2561:
  5342   00183C  EF2A  F00C         	goto	l3082
  5343   001840                     u2560:
  5344   001840                     
  5345                           ;main.c: 293:         {;main.c: 294:             star=0;
  5346   001840  0E00               	movlw	0
  5347   001842  6E56               	movwf	(_star+1)^0,c
  5348   001844  0E00               	movlw	0
  5349   001846  6E55               	movwf	_star^0,c
  5350   001848                     
  5351                           ;main.c: 295:             flag--;
  5352   001848  0100               	movlb	0	; () banked
  5353   00184A  077F               	decf	_flag& (0+255),f,b
  5354   00184C  A0D8               	btfss	status,0,c
  5355   00184E  0780               	decf	(_flag+1)& (0+255),f,b
  5356   001850  EFE1  F00C         	goto	l115
  5357   001854                     l3082:
  5358                           
  5359                           ;main.c: 298:         if(flag!=3)
  5360   001854  0E03               	movlw	3
  5361   001856  0100               	movlb	0	; () banked
  5362   001858  197F               	xorwf	_flag& (0+255),w,b
  5363   00185A  1180               	iorwf	(_flag+1)& (0+255),w,b
  5364   00185C  B4D8               	btfsc	status,2,c
  5365   00185E  EF33  F00C         	goto	u2571
  5366   001862  EF35  F00C         	goto	u2570
  5367   001866                     u2571:
  5368   001866  EF38  F00C         	goto	l155
  5369   00186A                     u2570:
  5370   00186A                     
  5371                           ; BSR set to: 0
  5372                           ;main.c: 299:             k--;
  5373   00186A  0657               	decf	_k^0,f,c
  5374   00186C  A0D8               	btfss	status,0,c
  5375   00186E  0658               	decf	(_k+1)^0,f,c
  5376   001870                     l155:
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;main.c: 300:         flag--;
  5380   001870  077F               	decf	_flag& (0+255),f,b
  5381   001872  A0D8               	btfss	status,0,c
  5382   001874  0780               	decf	(_flag+1)& (0+255),f,b
  5383   001876                     
  5384                           ; BSR set to: 0
  5385                           ;main.c: 301:         if(k==-1)
  5386   001876  2857               	incf	_k^0,w,c
  5387   001878  E106               	bnz	u2581
  5388   00187A  2858               	incf	(_k+1)^0,w,c
  5389   00187C  A4D8               	btfss	status,2,c
  5390   00187E  EF43  F00C         	goto	u2581
  5391   001882  EF45  F00C         	goto	u2580
  5392   001886                     u2581:
  5393   001886  EF4D  F00C         	goto	l3090
  5394   00188A                     u2580:
  5395   00188A                     
  5396                           ; BSR set to: 0
  5397                           ;main.c: 302:         {;main.c: 303:             k=0;
  5398   00188A  0E00               	movlw	0
  5399   00188C  6E58               	movwf	(_k+1)^0,c
  5400   00188E  0E00               	movlw	0
  5401   001890  6E57               	movwf	_k^0,c
  5402                           
  5403                           ;main.c: 304:             flag=0;
  5404   001892  0E00               	movlw	0
  5405   001894  6F80               	movwf	(_flag+1)& (0+255),b
  5406   001896  0E00               	movlw	0
  5407   001898  6F7F               	movwf	_flag& (0+255),b
  5408   00189A                     l3090:
  5409                           
  5410                           ;main.c: 310:     if(menu_flag==2)
  5411   00189A  0E02               	movlw	2
  5412   00189C  1841               	xorwf	_menu_flag^0,w,c
  5413   00189E  1042               	iorwf	(_menu_flag+1)^0,w,c
  5414   0018A0  A4D8               	btfss	status,2,c
  5415   0018A2  EF55  F00C         	goto	u2591
  5416   0018A6  EF57  F00C         	goto	u2590
  5417   0018AA                     u2591:
  5418   0018AA  EFE1  F00C         	goto	l115
  5419   0018AE                     u2590:
  5420   0018AE                     
  5421                           ;main.c: 311:     {;main.c: 312:         if(star==0 && k==0)
  5422   0018AE  5055               	movf	_star^0,w,c
  5423   0018B0  1056               	iorwf	(_star+1)^0,w,c
  5424   0018B2  A4D8               	btfss	status,2,c
  5425   0018B4  EF5E  F00C         	goto	u2601
  5426   0018B8  EF60  F00C         	goto	u2600
  5427   0018BC                     u2601:
  5428   0018BC  EF6F  F00C         	goto	l3098
  5429   0018C0                     u2600:
  5430   0018C0  5057               	movf	_k^0,w,c
  5431   0018C2  1058               	iorwf	(_k+1)^0,w,c
  5432   0018C4  A4D8               	btfss	status,2,c
  5433   0018C6  EF67  F00C         	goto	u2611
  5434   0018CA  EF69  F00C         	goto	u2610
  5435   0018CE                     u2611:
  5436   0018CE  EF6F  F00C         	goto	l3098
  5437   0018D2                     u2610:
  5438   0018D2                     
  5439                           ;main.c: 313:             view_flag=1;
  5440   0018D2  0E00               	movlw	0
  5441   0018D4  6E46               	movwf	(_view_flag+1)^0,c
  5442   0018D6  0E01               	movlw	1
  5443   0018D8  6E45               	movwf	_view_flag^0,c
  5444   0018DA  EFE1  F00C         	goto	l115
  5445   0018DE                     l3098:
  5446   0018DE  0455               	decf	_star^0,w,c
  5447   0018E0  1056               	iorwf	(_star+1)^0,w,c
  5448   0018E2  A4D8               	btfss	status,2,c
  5449   0018E4  EF76  F00C         	goto	u2621
  5450   0018E8  EF78  F00C         	goto	u2620
  5451   0018EC                     u2621:
  5452   0018EC  EF87  F00C         	goto	l3104
  5453   0018F0                     u2620:
  5454   0018F0  5057               	movf	_k^0,w,c
  5455   0018F2  1058               	iorwf	(_k+1)^0,w,c
  5456   0018F4  A4D8               	btfss	status,2,c
  5457   0018F6  EF7F  F00C         	goto	u2631
  5458   0018FA  EF81  F00C         	goto	u2630
  5459   0018FE                     u2631:
  5460   0018FE  EF87  F00C         	goto	l3104
  5461   001902                     u2630:
  5462   001902                     l3102:
  5463                           
  5464                           ;main.c: 315:             settime_flag=1;
  5465   001902  0E00               	movlw	0
  5466   001904  6E44               	movwf	(_settime_flag+1)^0,c
  5467   001906  0E01               	movlw	1
  5468   001908  6E43               	movwf	_settime_flag^0,c
  5469   00190A  EFE1  F00C         	goto	l115
  5470   00190E                     l3104:
  5471   00190E  5055               	movf	_star^0,w,c
  5472   001910  1056               	iorwf	(_star+1)^0,w,c
  5473   001912  A4D8               	btfss	status,2,c
  5474   001914  EF8E  F00C         	goto	u2641
  5475   001918  EF90  F00C         	goto	u2640
  5476   00191C                     u2641:
  5477   00191C  EF9B  F00C         	goto	l3110
  5478   001920                     u2640:
  5479   001920  0457               	decf	_k^0,w,c
  5480   001922  1058               	iorwf	(_k+1)^0,w,c
  5481   001924  A4D8               	btfss	status,2,c
  5482   001926  EF97  F00C         	goto	u2651
  5483   00192A  EF99  F00C         	goto	u2650
  5484   00192E                     u2651:
  5485   00192E  EF9B  F00C         	goto	l3110
  5486   001932                     u2650:
  5487   001932  EF81  F00C         	goto	l3102
  5488   001936                     l3110:
  5489   001936  0455               	decf	_star^0,w,c
  5490   001938  1056               	iorwf	(_star+1)^0,w,c
  5491   00193A  A4D8               	btfss	status,2,c
  5492   00193C  EFA2  F00C         	goto	u2661
  5493   001940  EFA4  F00C         	goto	u2660
  5494   001944                     u2661:
  5495   001944  EFB4  F00C         	goto	l3116
  5496   001948                     u2660:
  5497   001948  0457               	decf	_k^0,w,c
  5498   00194A  1058               	iorwf	(_k+1)^0,w,c
  5499   00194C  A4D8               	btfss	status,2,c
  5500   00194E  EFAB  F00C         	goto	u2671
  5501   001952  EFAD  F00C         	goto	u2670
  5502   001956                     u2671:
  5503   001956  EFB4  F00C         	goto	l3116
  5504   00195A                     u2670:
  5505   00195A                     l3114:
  5506                           
  5507                           ;main.c: 319:             download_flag=1;
  5508   00195A  0E00               	movlw	0
  5509   00195C  0100               	movlb	0	; () banked
  5510   00195E  6F84               	movwf	(_download_flag+1)& (0+255),b
  5511   001960  0E01               	movlw	1
  5512   001962  6F83               	movwf	_download_flag& (0+255),b
  5513   001964  EFE1  F00C         	goto	l115
  5514   001968                     l3116:
  5515   001968  5055               	movf	_star^0,w,c
  5516   00196A  1056               	iorwf	(_star+1)^0,w,c
  5517   00196C  A4D8               	btfss	status,2,c
  5518   00196E  EFBB  F00C         	goto	u2681
  5519   001972  EFBD  F00C         	goto	u2680
  5520   001976                     u2681:
  5521   001976  EFC9  F00C         	goto	l3122
  5522   00197A                     u2680:
  5523   00197A  0E02               	movlw	2
  5524   00197C  1857               	xorwf	_k^0,w,c
  5525   00197E  1058               	iorwf	(_k+1)^0,w,c
  5526   001980  A4D8               	btfss	status,2,c
  5527   001982  EFC5  F00C         	goto	u2691
  5528   001986  EFC7  F00C         	goto	u2690
  5529   00198A                     u2691:
  5530   00198A  EFC9  F00C         	goto	l3122
  5531   00198E                     u2690:
  5532   00198E  EFAD  F00C         	goto	l3114
  5533   001992                     l3122:
  5534   001992  0455               	decf	_star^0,w,c
  5535   001994  1056               	iorwf	(_star+1)^0,w,c
  5536   001996  A4D8               	btfss	status,2,c
  5537   001998  EFD0  F00C         	goto	u2701
  5538   00199C  EFD2  F00C         	goto	u2700
  5539   0019A0                     u2701:
  5540   0019A0  EFB9  F008         	goto	l108
  5541   0019A4                     u2700:
  5542   0019A4  0E02               	movlw	2
  5543   0019A6  1857               	xorwf	_k^0,w,c
  5544   0019A8  1058               	iorwf	(_k+1)^0,w,c
  5545   0019AA  A4D8               	btfss	status,2,c
  5546   0019AC  EFDA  F00C         	goto	u2711
  5547   0019B0  EFDC  F00C         	goto	u2710
  5548   0019B4                     u2711:
  5549   0019B4  EFB9  F008         	goto	l108
  5550   0019B8                     u2710:
  5551   0019B8                     
  5552                           ;main.c: 323:             clear_flag=1;
  5553   0019B8  0E00               	movlw	0
  5554   0019BA  0100               	movlb	0	; () banked
  5555   0019BC  6F82               	movwf	(_clear_flag+1)& (0+255),b
  5556   0019BE  0E01               	movlw	1
  5557   0019C0  6F81               	movwf	_clear_flag& (0+255),b
  5558   0019C2                     l115:
  5559   0019C2  0012               	return		;funcret
  5560   0019C4                     __end_of_check_matrix_keypad:
  5561                           	callstack 0
  5562                           
  5563 ;; *************** function _writing_eeprom *****************
  5564 ;; Defined at:
  5565 ;;		line 34 in file "main.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5579 ;;      Params:         0       0       0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0
  5581 ;;      Temps:          2       0       0       0       0       0       0
  5582 ;;      Totals:         2       0       0       0       0       0       0
  5583 ;;Total ram usage:        2 bytes
  5584 ;; Hardware stack levels used: 1
  5585 ;; Hardware stack levels required when called: 3
  5586 ;; This function calls:
  5587 ;;		___awdiv
  5588 ;;		___awmod
  5589 ;;		_write_external_eeprom
  5590 ;; This function is called by:
  5591 ;;		_check_matrix_keypad
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text23
  5596   001F2A                     __ptext23:
  5597                           	callstack 0
  5598   001F2A                     _writing_eeprom:
  5599                           	callstack 26
  5600   001F2A                     
  5601                           ;main.c: 38:     write_external_eeprom(add++,time[0]);
  5602   001F2A  C089  F009         	movff	_time,write_external_eeprom@data
  5603   001F2E  5047               	movf	_add^0,w,c
  5604   001F30  ECC7  F012         	call	_write_external_eeprom
  5605   001F34  4A47               	infsnz	_add^0,f,c
  5606   001F36  2A48               	incf	(_add+1)^0,f,c
  5607   001F38                     
  5608                           ;main.c: 39:     write_external_eeprom(add++,time[1]);
  5609   001F38  C08A  F009         	movff	_time+1,write_external_eeprom@data
  5610   001F3C  5047               	movf	_add^0,w,c
  5611   001F3E  ECC7  F012         	call	_write_external_eeprom
  5612   001F42  4A47               	infsnz	_add^0,f,c
  5613   001F44  2A48               	incf	(_add+1)^0,f,c
  5614   001F46                     
  5615                           ;main.c: 40:     write_external_eeprom(add++,time[3]);
  5616   001F46  C08C  F009         	movff	_time+3,write_external_eeprom@data
  5617   001F4A  5047               	movf	_add^0,w,c
  5618   001F4C  ECC7  F012         	call	_write_external_eeprom
  5619   001F50  4A47               	infsnz	_add^0,f,c
  5620   001F52  2A48               	incf	(_add+1)^0,f,c
  5621                           
  5622                           ;main.c: 41:     write_external_eeprom(add++,time[4]);
  5623   001F54  C08D  F009         	movff	_time+4,write_external_eeprom@data
  5624   001F58  5047               	movf	_add^0,w,c
  5625   001F5A  ECC7  F012         	call	_write_external_eeprom
  5626   001F5E  4A47               	infsnz	_add^0,f,c
  5627   001F60  2A48               	incf	(_add+1)^0,f,c
  5628   001F62                     
  5629                           ;main.c: 42:     write_external_eeprom(add++,time[6]);
  5630   001F62  C08F  F009         	movff	_time+6,write_external_eeprom@data
  5631   001F66  5047               	movf	_add^0,w,c
  5632   001F68  ECC7  F012         	call	_write_external_eeprom
  5633   001F6C  4A47               	infsnz	_add^0,f,c
  5634   001F6E  2A48               	incf	(_add+1)^0,f,c
  5635   001F70                     
  5636                           ;main.c: 43:     write_external_eeprom(add++,time[7]);
  5637   001F70  C090  F009         	movff	_time+7,write_external_eeprom@data
  5638   001F74  5047               	movf	_add^0,w,c
  5639   001F76  ECC7  F012         	call	_write_external_eeprom
  5640   001F7A  4A47               	infsnz	_add^0,f,c
  5641   001F7C  2A48               	incf	(_add+1)^0,f,c
  5642   001F7E                     
  5643                           ;main.c: 44:     write_external_eeprom(add++,message[i][0]);
  5644   001F7E  90D8               	bcf	status,0,c
  5645   001F80  345B               	rlcf	_i^0,w,c
  5646   001F82  6ED9               	movwf	fsr2l,c
  5647   001F84  345C               	rlcf	(_i+1)^0,w,c
  5648   001F86  6EDA               	movwf	fsr2h,c
  5649   001F88  0E60               	movlw	low _message
  5650   001F8A  26D9               	addwf	fsr2l,f,c
  5651   001F8C  0E00               	movlw	high _message
  5652   001F8E  22DA               	addwfc	fsr2h,f,c
  5653   001F90  CFDE FFF6          	movff	postinc2,tblptrl
  5654   001F94  CFDD FFF7          	movff	postdec2,tblptrh
  5655   001F98                     	if	0	;tblptru may be non-zero
  5656   001F98                     	endif
  5657   001F98                     	if	0	;tblptru may be non-zero
  5658   001F98                     	endif
  5659   001F98  0008               	tblrd		*
  5660   001F9A  CFF5 F009          	movff	tablat,write_external_eeprom@data
  5661   001F9E  5047               	movf	_add^0,w,c
  5662   001FA0  ECC7  F012         	call	_write_external_eeprom
  5663   001FA4  4A47               	infsnz	_add^0,f,c
  5664   001FA6  2A48               	incf	(_add+1)^0,f,c
  5665   001FA8                     
  5666                           ;main.c: 45:     write_external_eeprom(add++,message[i][1]);
  5667   001FA8  90D8               	bcf	status,0,c
  5668   001FAA  345B               	rlcf	_i^0,w,c
  5669   001FAC  6ED9               	movwf	fsr2l,c
  5670   001FAE  345C               	rlcf	(_i+1)^0,w,c
  5671   001FB0  6EDA               	movwf	fsr2h,c
  5672   001FB2  0E60               	movlw	low _message
  5673   001FB4  26D9               	addwf	fsr2l,f,c
  5674   001FB6  0E00               	movlw	high _message
  5675   001FB8  22DA               	addwfc	fsr2h,f,c
  5676   001FBA  CFDE F00D          	movff	postinc2,??_writing_eeprom
  5677   001FBE  CFDD F00E          	movff	postdec2,??_writing_eeprom+1
  5678   001FC2  0E01               	movlw	1
  5679   001FC4  260D               	addwf	??_writing_eeprom^0,f,c
  5680   001FC6  0E00               	movlw	0
  5681   001FC8  220E               	addwfc	(??_writing_eeprom+1)^0,f,c
  5682   001FCA  C00D  FFF6         	movff	??_writing_eeprom,tblptrl
  5683   001FCE  C00E  FFF7         	movff	??_writing_eeprom+1,tblptrh
  5684   001FD2                     	if	0	;tblptru may be non-zero
  5685   001FD2                     	endif
  5686   001FD2                     	if	0	;tblptru may be non-zero
  5687   001FD2                     	endif
  5688   001FD2  0008               	tblrd		*
  5689   001FD4  CFF5 F009          	movff	tablat,write_external_eeprom@data
  5690   001FD8  5047               	movf	_add^0,w,c
  5691   001FDA  ECC7  F012         	call	_write_external_eeprom
  5692   001FDE  4A47               	infsnz	_add^0,f,c
  5693   001FE0  2A48               	incf	(_add+1)^0,f,c
  5694                           
  5695                           ;main.c: 46:     write_external_eeprom(add++,(speed / 10) + 48);
  5696   001FE2  C049  F001         	movff	_speed,___awdiv@dividend
  5697   001FE6  C04A  F002         	movff	_speed+1,___awdiv@dividend+1
  5698   001FEA  0E00               	movlw	0
  5699   001FEC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5700   001FEE  0E0A               	movlw	10
  5701   001FF0  6E03               	movwf	___awdiv@divisor^0,c
  5702   001FF2  EC16  F010         	call	___awdiv	;wreg free
  5703   001FF6  5001               	movf	?___awdiv^0,w,c
  5704   001FF8  0F30               	addlw	48
  5705   001FFA  6E09               	movwf	write_external_eeprom@data^0,c
  5706   001FFC  5047               	movf	_add^0,w,c
  5707   001FFE  ECC7  F012         	call	_write_external_eeprom
  5708   002002  4A47               	infsnz	_add^0,f,c
  5709   002004  2A48               	incf	(_add+1)^0,f,c
  5710   002006                     
  5711                           ;main.c: 47:     write_external_eeprom(add++,(speed % 10) + 48);
  5712   002006  C049  F001         	movff	_speed,___awmod@dividend
  5713   00200A  C04A  F002         	movff	_speed+1,___awmod@dividend+1
  5714   00200E  0E00               	movlw	0
  5715   002010  6E04               	movwf	(___awmod@divisor+1)^0,c
  5716   002012  0E0A               	movlw	10
  5717   002014  6E03               	movwf	___awmod@divisor^0,c
  5718   002016  EC78  F010         	call	___awmod	;wreg free
  5719   00201A  5001               	movf	?___awmod^0,w,c
  5720   00201C  0F30               	addlw	48
  5721   00201E  6E09               	movwf	write_external_eeprom@data^0,c
  5722   002020  5047               	movf	_add^0,w,c
  5723   002022  ECC7  F012         	call	_write_external_eeprom
  5724   002026  4A47               	infsnz	_add^0,f,c
  5725   002028  2A48               	incf	(_add+1)^0,f,c
  5726   00202A  0012               	return		;funcret
  5727   00202C                     __end_of_writing_eeprom:
  5728                           	callstack 0
  5729                           
  5730 ;; *************** function _write_external_eeprom *****************
  5731 ;; Defined at:
  5732 ;;		line 14 in file "external_eeprom.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  address         1    wreg     unsigned char 
  5735 ;;  data            1    8[COMRAM] unsigned char 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  address         1   11[COMRAM] unsigned char 
  5738 ;;  wait            2    9[COMRAM] unsigned int 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5748 ;;      Params:         1       0       0       0       0       0       0
  5749 ;;      Locals:         3       0       0       0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0
  5751 ;;      Totals:         4       0       0       0       0       0       0
  5752 ;;Total ram usage:        4 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; Hardware stack levels required when called: 2
  5755 ;; This function calls:
  5756 ;;		_i2c_start
  5757 ;;		_i2c_stop
  5758 ;;		_i2c_write
  5759 ;; This function is called by:
  5760 ;;		_writing_eeprom
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text24
  5765   00258E                     __ptext24:
  5766                           	callstack 0
  5767   00258E                     _write_external_eeprom:
  5768                           	callstack 26
  5769                           
  5770                           ;incstack = 0
  5771                           ;write_external_eeprom@address stored from wreg
  5772   00258E  6E0C               	movwf	write_external_eeprom@address^0,c
  5773   002590                     
  5774                           ;external_eeprom.c: 14: void write_external_eeprom(unsigned char address, unsigned char 
      +                          data);external_eeprom.c: 15: {;external_eeprom.c: 16:     i2c_start();
  5775   002590  ECD7  F013         	call	_i2c_start	;wreg free
  5776   002594                     
  5777                           ;external_eeprom.c: 17:     i2c_write(0xA0);
  5778   002594  0EA0               	movlw	160
  5779   002596  ECC5  F013         	call	_i2c_write
  5780   00259A                     
  5781                           ;external_eeprom.c: 18:     i2c_write(address);
  5782   00259A  500C               	movf	write_external_eeprom@address^0,w,c
  5783   00259C  ECC5  F013         	call	_i2c_write
  5784   0025A0                     
  5785                           ;external_eeprom.c: 19:     i2c_write(data);
  5786   0025A0  5009               	movf	write_external_eeprom@data^0,w,c
  5787   0025A2  ECC5  F013         	call	_i2c_write
  5788   0025A6                     
  5789                           ;external_eeprom.c: 20:     i2c_stop();
  5790   0025A6  ECD3  F013         	call	_i2c_stop	;wreg free
  5791   0025AA                     
  5792                           ;external_eeprom.c: 23:     for (unsigned int wait = 3000; wait--;);
  5793   0025AA  0E0B               	movlw	11
  5794   0025AC  6E0B               	movwf	(write_external_eeprom@wait+1)^0,c
  5795   0025AE  0EB8               	movlw	184
  5796   0025B0  6E0A               	movwf	write_external_eeprom@wait^0,c
  5797   0025B2                     l2348:
  5798   0025B2  060A               	decf	write_external_eeprom@wait^0,f,c
  5799   0025B4  A0D8               	btfss	status,0,c
  5800   0025B6  060B               	decf	(write_external_eeprom@wait+1)^0,f,c
  5801   0025B8  280A               	incf	write_external_eeprom@wait^0,w,c
  5802   0025BA  E106               	bnz	u1611
  5803   0025BC  280B               	incf	(write_external_eeprom@wait+1)^0,w,c
  5804   0025BE  A4D8               	btfss	status,2,c
  5805   0025C0  EFE4  F012         	goto	u1611
  5806   0025C4  EFE6  F012         	goto	u1610
  5807   0025C8                     u1611:
  5808   0025C8  EFD9  F012         	goto	l2348
  5809   0025CC                     u1610:
  5810   0025CC  0012               	return		;funcret
  5811   0025CE                     __end_of_write_external_eeprom:
  5812                           	callstack 0
  5813                           
  5814 ;; *************** function ___awmod *****************
  5815 ;; Defined at:
  5816 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  dividend        2    0[COMRAM] int 
  5819 ;;  divisor         2    2[COMRAM] int 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  sign            1    5[COMRAM] unsigned char 
  5822 ;;  counter         1    4[COMRAM] unsigned char 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  2    0[COMRAM] int 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5832 ;;      Params:         4       0       0       0       0       0       0
  5833 ;;      Locals:         2       0       0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0
  5835 ;;      Totals:         6       0       0       0       0       0       0
  5836 ;;Total ram usage:        6 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_writing_eeprom
  5842 ;;		_check_matrix_keypad
  5843 ;;		_main
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text25
  5848   0020F0                     __ptext25:
  5849                           	callstack 0
  5850   0020F0                     ___awmod:
  5851                           	callstack 28
  5852   0020F0  0E00               	movlw	0
  5853   0020F2  6E06               	movwf	___awmod@sign^0,c
  5854   0020F4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5855   0020F6  EF81  F010         	goto	u1830
  5856   0020FA  EF7F  F010         	goto	u1831
  5857   0020FE                     u1831:
  5858   0020FE  EF87  F010         	goto	l2518
  5859   002102                     u1830:
  5860   002102  6C01               	negf	___awmod@dividend^0,c
  5861   002104  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5862   002106  B0D8               	btfsc	status,0,c
  5863   002108  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5864   00210A  0E01               	movlw	1
  5865   00210C  6E06               	movwf	___awmod@sign^0,c
  5866   00210E                     l2518:
  5867   00210E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5868   002110  EF8E  F010         	goto	u1840
  5869   002114  EF8C  F010         	goto	u1841
  5870   002118                     u1841:
  5871   002118  EF92  F010         	goto	l2522
  5872   00211C                     u1840:
  5873   00211C  6C03               	negf	___awmod@divisor^0,c
  5874   00211E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5875   002120  B0D8               	btfsc	status,0,c
  5876   002122  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5877   002124                     l2522:
  5878   002124  5003               	movf	___awmod@divisor^0,w,c
  5879   002126  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5880   002128  B4D8               	btfsc	status,2,c
  5881   00212A  EF99  F010         	goto	u1851
  5882   00212E  EF9B  F010         	goto	u1850
  5883   002132                     u1851:
  5884   002132  EFBF  F010         	goto	l2538
  5885   002136                     u1850:
  5886   002136  0E01               	movlw	1
  5887   002138  6E05               	movwf	___awmod@counter^0,c
  5888   00213A  EFA3  F010         	goto	l2528
  5889   00213E                     l2526:
  5890   00213E  90D8               	bcf	status,0,c
  5891   002140  3603               	rlcf	___awmod@divisor^0,f,c
  5892   002142  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5893   002144  2A05               	incf	___awmod@counter^0,f,c
  5894   002146                     l2528:
  5895   002146  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5896   002148  EFA8  F010         	goto	u1861
  5897   00214C  EFAA  F010         	goto	u1860
  5898   002150                     u1861:
  5899   002150  EF9F  F010         	goto	l2526
  5900   002154                     u1860:
  5901   002154                     l2530:
  5902   002154  5003               	movf	___awmod@divisor^0,w,c
  5903   002156  5C01               	subwf	___awmod@dividend^0,w,c
  5904   002158  5004               	movf	(___awmod@divisor+1)^0,w,c
  5905   00215A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5906   00215C  A0D8               	btfss	status,0,c
  5907   00215E  EFB3  F010         	goto	u1871
  5908   002162  EFB5  F010         	goto	u1870
  5909   002166                     u1871:
  5910   002166  EFB9  F010         	goto	l2534
  5911   00216A                     u1870:
  5912   00216A  5003               	movf	___awmod@divisor^0,w,c
  5913   00216C  5E01               	subwf	___awmod@dividend^0,f,c
  5914   00216E  5004               	movf	(___awmod@divisor+1)^0,w,c
  5915   002170  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5916   002172                     l2534:
  5917   002172  90D8               	bcf	status,0,c
  5918   002174  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5919   002176  3203               	rrcf	___awmod@divisor^0,f,c
  5920   002178  2E05               	decfsz	___awmod@counter^0,f,c
  5921   00217A  EFAA  F010         	goto	l2530
  5922   00217E                     l2538:
  5923   00217E  5006               	movf	___awmod@sign^0,w,c
  5924   002180  B4D8               	btfsc	status,2,c
  5925   002182  EFC5  F010         	goto	u1881
  5926   002186  EFC7  F010         	goto	u1880
  5927   00218A                     u1881:
  5928   00218A  EFCB  F010         	goto	l2542
  5929   00218E                     u1880:
  5930   00218E  6C01               	negf	___awmod@dividend^0,c
  5931   002190  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5932   002192  B0D8               	btfsc	status,0,c
  5933   002194  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5934   002196                     l2542:
  5935   002196  C001  F001         	movff	___awmod@dividend,?___awmod
  5936   00219A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5937   00219E  0012               	return		;funcret
  5938   0021A0                     __end_of___awmod:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function ___awdiv *****************
  5942 ;; Defined at:
  5943 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  dividend        2    0[COMRAM] int 
  5946 ;;  divisor         2    2[COMRAM] int 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  quotient        2    6[COMRAM] int 
  5949 ;;  sign            1    5[COMRAM] unsigned char 
  5950 ;;  counter         1    4[COMRAM] unsigned char 
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  2    0[COMRAM] int 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5960 ;;      Params:         4       0       0       0       0       0       0
  5961 ;;      Locals:         4       0       0       0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0
  5963 ;;      Totals:         8       0       0       0       0       0       0
  5964 ;;Total ram usage:        8 bytes
  5965 ;; Hardware stack levels used: 1
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_writing_eeprom
  5970 ;;		_reading_eeprom
  5971 ;;		_check_matrix_keypad
  5972 ;;		_main
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text26
  5977   00202C                     __ptext26:
  5978                           	callstack 0
  5979   00202C                     ___awdiv:
  5980                           	callstack 29
  5981   00202C  0E00               	movlw	0
  5982   00202E  6E06               	movwf	___awdiv@sign^0,c
  5983   002030  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5984   002032  EF1F  F010         	goto	u1770
  5985   002036  EF1D  F010         	goto	u1771
  5986   00203A                     u1771:
  5987   00203A  EF25  F010         	goto	l2474
  5988   00203E                     u1770:
  5989   00203E  6C03               	negf	___awdiv@divisor^0,c
  5990   002040  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5991   002042  B0D8               	btfsc	status,0,c
  5992   002044  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5993   002046  0E01               	movlw	1
  5994   002048  6E06               	movwf	___awdiv@sign^0,c
  5995   00204A                     l2474:
  5996   00204A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5997   00204C  EF2C  F010         	goto	u1780
  5998   002050  EF2A  F010         	goto	u1781
  5999   002054                     u1781:
  6000   002054  EF32  F010         	goto	l2480
  6001   002058                     u1780:
  6002   002058  6C01               	negf	___awdiv@dividend^0,c
  6003   00205A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6004   00205C  B0D8               	btfsc	status,0,c
  6005   00205E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6006   002060  0E01               	movlw	1
  6007   002062  1A06               	xorwf	___awdiv@sign^0,f,c
  6008   002064                     l2480:
  6009   002064  0E00               	movlw	0
  6010   002066  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6011   002068  0E00               	movlw	0
  6012   00206A  6E07               	movwf	___awdiv@quotient^0,c
  6013   00206C  5003               	movf	___awdiv@divisor^0,w,c
  6014   00206E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6015   002070  B4D8               	btfsc	status,2,c
  6016   002072  EF3D  F010         	goto	u1791
  6017   002076  EF3F  F010         	goto	u1790
  6018   00207A                     u1791:
  6019   00207A  EF67  F010         	goto	l2502
  6020   00207E                     u1790:
  6021   00207E  0E01               	movlw	1
  6022   002080  6E05               	movwf	___awdiv@counter^0,c
  6023   002082  EF47  F010         	goto	l2488
  6024   002086                     l2486:
  6025   002086  90D8               	bcf	status,0,c
  6026   002088  3603               	rlcf	___awdiv@divisor^0,f,c
  6027   00208A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6028   00208C  2A05               	incf	___awdiv@counter^0,f,c
  6029   00208E                     l2488:
  6030   00208E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6031   002090  EF4C  F010         	goto	u1801
  6032   002094  EF4E  F010         	goto	u1800
  6033   002098                     u1801:
  6034   002098  EF43  F010         	goto	l2486
  6035   00209C                     u1800:
  6036   00209C                     l2490:
  6037   00209C  90D8               	bcf	status,0,c
  6038   00209E  3607               	rlcf	___awdiv@quotient^0,f,c
  6039   0020A0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6040   0020A2  5003               	movf	___awdiv@divisor^0,w,c
  6041   0020A4  5C01               	subwf	___awdiv@dividend^0,w,c
  6042   0020A6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6043   0020A8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6044   0020AA  A0D8               	btfss	status,0,c
  6045   0020AC  EF5A  F010         	goto	u1811
  6046   0020B0  EF5C  F010         	goto	u1810
  6047   0020B4                     u1811:
  6048   0020B4  EF61  F010         	goto	l2498
  6049   0020B8                     u1810:
  6050   0020B8  5003               	movf	___awdiv@divisor^0,w,c
  6051   0020BA  5E01               	subwf	___awdiv@dividend^0,f,c
  6052   0020BC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6053   0020BE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6054   0020C0  8007               	bsf	___awdiv@quotient^0,0,c
  6055   0020C2                     l2498:
  6056   0020C2  90D8               	bcf	status,0,c
  6057   0020C4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6058   0020C6  3203               	rrcf	___awdiv@divisor^0,f,c
  6059   0020C8  2E05               	decfsz	___awdiv@counter^0,f,c
  6060   0020CA  EF4E  F010         	goto	l2490
  6061   0020CE                     l2502:
  6062   0020CE  5006               	movf	___awdiv@sign^0,w,c
  6063   0020D0  B4D8               	btfsc	status,2,c
  6064   0020D2  EF6D  F010         	goto	u1821
  6065   0020D6  EF6F  F010         	goto	u1820
  6066   0020DA                     u1821:
  6067   0020DA  EF73  F010         	goto	l2506
  6068   0020DE                     u1820:
  6069   0020DE  6C07               	negf	___awdiv@quotient^0,c
  6070   0020E0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6071   0020E2  B0D8               	btfsc	status,0,c
  6072   0020E4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6073   0020E6                     l2506:
  6074   0020E6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6075   0020EA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6076   0020EE  0012               	return		;funcret
  6077   0020F0                     __end_of___awdiv:
  6078                           	callstack 0
  6079                           
  6080 ;; *************** function _write_ds1307 *****************
  6081 ;; Defined at:
  6082 ;;		line 54 in file "ds1307.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  address         1    wreg     unsigned char 
  6085 ;;  data            1    8[COMRAM] unsigned char 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  address         1    9[COMRAM] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6097 ;;      Params:         1       0       0       0       0       0       0
  6098 ;;      Locals:         1       0       0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0
  6100 ;;      Totals:         2       0       0       0       0       0       0
  6101 ;;Total ram usage:        2 bytes
  6102 ;; Hardware stack levels used: 1
  6103 ;; Hardware stack levels required when called: 2
  6104 ;; This function calls:
  6105 ;;		_i2c_start
  6106 ;;		_i2c_stop
  6107 ;;		_i2c_write
  6108 ;; This function is called by:
  6109 ;;		_check_matrix_keypad
  6110 ;;		_init_ds1307
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text27
  6115   0026C2                     __ptext27:
  6116                           	callstack 0
  6117   0026C2                     _write_ds1307:
  6118                           	callstack 26
  6119                           
  6120                           ;incstack = 0
  6121                           ;write_ds1307@address stored from wreg
  6122   0026C2  6E0A               	movwf	write_ds1307@address^0,c
  6123   0026C4                     
  6124                           ;ds1307.c: 54: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 55
      +                          : {;ds1307.c: 56:  i2c_start();
  6125   0026C4  ECD7  F013         	call	_i2c_start	;wreg free
  6126   0026C8                     
  6127                           ;ds1307.c: 57:  i2c_write(0xD0);
  6128   0026C8  0ED0               	movlw	208
  6129   0026CA  ECC5  F013         	call	_i2c_write
  6130   0026CE                     
  6131                           ;ds1307.c: 58:  i2c_write(address);
  6132   0026CE  500A               	movf	write_ds1307@address^0,w,c
  6133   0026D0  ECC5  F013         	call	_i2c_write
  6134   0026D4                     
  6135                           ;ds1307.c: 59:  i2c_write(data);
  6136   0026D4  5009               	movf	write_ds1307@data^0,w,c
  6137   0026D6  ECC5  F013         	call	_i2c_write
  6138   0026DA                     
  6139                           ;ds1307.c: 60:  i2c_stop();
  6140   0026DA  ECD3  F013         	call	_i2c_stop	;wreg free
  6141   0026DE  0012               	return		;funcret
  6142   0026E0                     __end_of_write_ds1307:
  6143                           	callstack 0
  6144                           
  6145 ;; *************** function _i2c_write *****************
  6146 ;; Defined at:
  6147 ;;		line 61 in file "i2c.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  data            1    wreg     unsigned char 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  data            1    0[COMRAM] unsigned char 
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		wreg, cstack
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6161 ;;      Params:         0       0       0       0       0       0       0
  6162 ;;      Locals:         1       0       0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0
  6164 ;;      Totals:         1       0       0       0       0       0       0
  6165 ;;Total ram usage:        1 bytes
  6166 ;; Hardware stack levels used: 1
  6167 ;; Hardware stack levels required when called: 1
  6168 ;; This function calls:
  6169 ;;		_i2c_idle
  6170 ;; This function is called by:
  6171 ;;		_write_ds1307
  6172 ;;		_read_ds1307
  6173 ;;		_write_external_eeprom
  6174 ;;		_read_external_eeprom
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text28
  6179   00278A                     __ptext28:
  6180                           	callstack 0
  6181   00278A                     _i2c_write:
  6182                           	callstack 27
  6183                           
  6184                           ;incstack = 0
  6185                           ;i2c_write@data stored from wreg
  6186   00278A  6E01               	movwf	i2c_write@data^0,c
  6187   00278C                     
  6188                           ;i2c.c: 61: void i2c_write(unsigned char data);i2c.c: 62: {;i2c.c: 63:  SSPBUF = data;
  6189   00278C  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  6190   002790                     
  6191                           ;i2c.c: 64:  i2c_idle();
  6192   002790  ECB6  F013         	call	_i2c_idle	;wreg free
  6193   002794  0012               	return		;funcret
  6194   002796                     __end_of_i2c_write:
  6195                           	callstack 0
  6196                           
  6197 ;; *************** function _i2c_stop *****************
  6198 ;; Defined at:
  6199 ;;		line 49 in file "i2c.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6213 ;;      Params:         0       0       0       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0
  6216 ;;      Totals:         0       0       0       0       0       0       0
  6217 ;;Total ram usage:        0 bytes
  6218 ;; Hardware stack levels used: 1
  6219 ;; Hardware stack levels required when called: 1
  6220 ;; This function calls:
  6221 ;;		_i2c_idle
  6222 ;; This function is called by:
  6223 ;;		_write_ds1307
  6224 ;;		_read_ds1307
  6225 ;;		_write_external_eeprom
  6226 ;;		_read_external_eeprom
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text29
  6231   0027A6                     __ptext29:
  6232                           	callstack 0
  6233   0027A6                     _i2c_stop:
  6234                           	callstack 27
  6235   0027A6                     
  6236                           ;i2c.c: 51:  PEN = 1;
  6237   0027A6  84C5               	bsf	4037,2,c	;volatile
  6238   0027A8                     
  6239                           ;i2c.c: 52:  i2c_idle();
  6240   0027A8  ECB6  F013         	call	_i2c_idle	;wreg free
  6241   0027AC  0012               	return		;funcret
  6242   0027AE                     __end_of_i2c_stop:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _i2c_start *****************
  6246 ;; Defined at:
  6247 ;;		line 43 in file "i2c.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6261 ;;      Params:         0       0       0       0       0       0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0
  6264 ;;      Totals:         0       0       0       0       0       0       0
  6265 ;;Total ram usage:        0 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; Hardware stack levels required when called: 1
  6268 ;; This function calls:
  6269 ;;		_i2c_idle
  6270 ;; This function is called by:
  6271 ;;		_write_ds1307
  6272 ;;		_read_ds1307
  6273 ;;		_write_external_eeprom
  6274 ;;		_read_external_eeprom
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text30
  6279   0027AE                     __ptext30:
  6280                           	callstack 0
  6281   0027AE                     _i2c_start:
  6282                           	callstack 27
  6283   0027AE                     
  6284                           ;i2c.c: 45:  SEN = 1;
  6285   0027AE  80C5               	bsf	4037,0,c	;volatile
  6286   0027B0                     
  6287                           ;i2c.c: 46:  i2c_idle();
  6288   0027B0  ECB6  F013         	call	_i2c_idle	;wreg free
  6289   0027B4  0012               	return		;funcret
  6290   0027B6                     __end_of_i2c_start:
  6291                           	callstack 0
  6292                           
  6293 ;; *************** function _i2c_idle *****************
  6294 ;; Defined at:
  6295 ;;		line 29 in file "i2c.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		None
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6309 ;;      Params:         0       0       0       0       0       0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0
  6312 ;;      Totals:         0       0       0       0       0       0       0
  6313 ;;Total ram usage:        0 bytes
  6314 ;; Hardware stack levels used: 1
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_i2c_start
  6319 ;;		_i2c_stop
  6320 ;;		_i2c_rep_start
  6321 ;;		_i2c_write
  6322 ;;		_i2c_rx_mode
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text31
  6327   00276C                     __ptext31:
  6328                           	callstack 0
  6329   00276C                     _i2c_idle:
  6330                           	callstack 27
  6331   00276C                     l400:
  6332   00276C  A69E               	btfss	3998,3,c	;volatile
  6333   00276E  EFBB  F013         	goto	u1601
  6334   002772  EFBD  F013         	goto	u1600
  6335   002776                     u1601:
  6336   002776  EFB6  F013         	goto	l400
  6337   00277A                     u1600:
  6338   00277A                     
  6339                           ;i2c.c: 32:  SSPIF = 0;
  6340   00277A  969E               	bcf	3998,3,c	;volatile
  6341   00277C  0012               	return		;funcret
  6342   00277E                     __end_of_i2c_idle:
  6343                           	callstack 0
  6344                           
  6345 ;; *************** function _read_switches *****************
  6346 ;; Defined at:
  6347 ;;		line 96 in file "matrix_keypad.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  detection_ty    1    wreg     unsigned char 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  detection_ty    1    0[COMRAM] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      unsigned char 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6361 ;;      Params:         0       0       0       0       0       0       0
  6362 ;;      Locals:         1       0       0       0       0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0
  6364 ;;      Totals:         1       0       0       0       0       0       0
  6365 ;;Total ram usage:        1 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; Hardware stack levels required when called: 1
  6368 ;; This function calls:
  6369 ;;		_scan_key
  6370 ;; This function is called by:
  6371 ;;		_check_matrix_keypad
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text32
  6376   002248                     __ptext32:
  6377                           	callstack 0
  6378   002248                     _read_switches:
  6379                           	callstack 28
  6380                           
  6381                           ;incstack = 0
  6382                           ;read_switches@detection_type stored from wreg
  6383   002248  6E01               	movwf	read_switches@detection_type^0,c
  6384   00224A                     
  6385                           ;matrix_keypad.c: 96: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 97: {;matrix_keypad.c: 98:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 100:  if (detection_type == 1)
  6386   00224A  0401               	decf	read_switches@detection_type^0,w,c
  6387   00224C  A4D8               	btfss	status,2,c
  6388   00224E  EF2B  F011         	goto	u1891
  6389   002252  EF2D  F011         	goto	u1890
  6390   002256                     u1891:
  6391   002256  EF51  F011         	goto	l2608
  6392   00225A                     u1890:
  6393   00225A                     
  6394                           ;matrix_keypad.c: 101:  {;matrix_keypad.c: 102:   key = scan_key();
  6395   00225A  EC11  F00F         	call	_scan_key	;wreg free
  6396   00225E  6E5D               	movwf	read_switches@key^0,c
  6397   002260                     
  6398                           ;matrix_keypad.c: 103:   if(key != 0xFF && once )
  6399   002260  285D               	incf	read_switches@key^0,w,c
  6400   002262  B4D8               	btfsc	status,2,c
  6401   002264  EF36  F011         	goto	u1901
  6402   002268  EF38  F011         	goto	u1900
  6403   00226C                     u1901:
  6404   00226C  EF45  F011         	goto	l2604
  6405   002270                     u1900:
  6406   002270  505E               	movf	read_switches@once^0,w,c
  6407   002272  B4D8               	btfsc	status,2,c
  6408   002274  EF3E  F011         	goto	u1911
  6409   002278  EF40  F011         	goto	u1910
  6410   00227C                     u1911:
  6411   00227C  EF45  F011         	goto	l2604
  6412   002280                     u1910:
  6413   002280                     
  6414                           ;matrix_keypad.c: 104:   {;matrix_keypad.c: 105:    once = 0;
  6415   002280  0E00               	movlw	0
  6416   002282  6E5E               	movwf	read_switches@once^0,c
  6417                           
  6418                           ;matrix_keypad.c: 106:    return key;
  6419   002284  505D               	movf	read_switches@key^0,w,c
  6420   002286  EF5E  F011         	goto	l319
  6421   00228A                     l2604:
  6422   00228A  285D               	incf	read_switches@key^0,w,c
  6423   00228C  A4D8               	btfss	status,2,c
  6424   00228E  EF4B  F011         	goto	u1921
  6425   002292  EF4D  F011         	goto	u1920
  6426   002296                     u1921:
  6427   002296  EF5D  F011         	goto	l2614
  6428   00229A                     u1920:
  6429   00229A                     
  6430                           ;matrix_keypad.c: 109:   {;matrix_keypad.c: 110:    once = 1;
  6431   00229A  0E01               	movlw	1
  6432   00229C  6E5E               	movwf	read_switches@once^0,c
  6433   00229E  EF5D  F011         	goto	l2614
  6434   0022A2                     l2608:
  6435   0022A2  5001               	movf	read_switches@detection_type^0,w,c
  6436   0022A4  A4D8               	btfss	status,2,c
  6437   0022A6  EF57  F011         	goto	u1931
  6438   0022AA  EF59  F011         	goto	u1930
  6439   0022AE                     u1931:
  6440   0022AE  EF5D  F011         	goto	l2614
  6441   0022B2                     u1930:
  6442   0022B2                     
  6443                           ;matrix_keypad.c: 114:  {;matrix_keypad.c: 115:   return scan_key();
  6444   0022B2  EC11  F00F         	call	_scan_key	;wreg free
  6445   0022B6  EF5E  F011         	goto	l319
  6446   0022BA                     l2614:
  6447                           
  6448                           ;matrix_keypad.c: 118:  return 0xFF;
  6449   0022BA  0EFF               	movlw	255
  6450   0022BC                     l319:
  6451   0022BC  0012               	return		;funcret
  6452   0022BE                     __end_of_read_switches:
  6453                           	callstack 0
  6454                           
  6455 ;; *************** function _scan_key *****************
  6456 ;; Defined at:
  6457 ;;		line 26 in file "matrix_keypad.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;		None
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      unsigned char 
  6464 ;; Registers used:
  6465 ;;		wreg
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6471 ;;      Params:         0       0       0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0
  6474 ;;      Totals:         0       0       0       0       0       0       0
  6475 ;;Total ram usage:        0 bytes
  6476 ;; Hardware stack levels used: 1
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_read_switches
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text33
  6485   001E22                     __ptext33:
  6486                           	callstack 0
  6487   001E22                     _scan_key:
  6488                           	callstack 28
  6489   001E22                     
  6490                           ;matrix_keypad.c: 28:  PORTBbits.RB5 = 0;
  6491   001E22  9A81               	bcf	129,5,c	;volatile
  6492                           
  6493                           ;matrix_keypad.c: 29:  PORTBbits.RB6 = 1;
  6494   001E24  8C81               	bsf	129,6,c	;volatile
  6495                           
  6496                           ;matrix_keypad.c: 30:  PORTBbits.RB7 = 1;
  6497   001E26  8E81               	bsf	129,7,c	;volatile
  6498                           
  6499                           ;matrix_keypad.c: 32:  if (PORTBbits.RB1 == 0)
  6500   001E28  B281               	btfsc	129,1,c	;volatile
  6501   001E2A  EF19  F00F         	goto	u1651
  6502   001E2E  EF1B  F00F         	goto	u1650
  6503   001E32                     u1651:
  6504   001E32  EF1E  F00F         	goto	l289
  6505   001E36                     u1650:
  6506   001E36                     
  6507                           ;matrix_keypad.c: 33:  {;matrix_keypad.c: 34:   return 1;
  6508   001E36  0E01               	movlw	1
  6509   001E38  EF94  F00F         	goto	l290
  6510   001E3C                     l289:
  6511   001E3C  B481               	btfsc	129,2,c	;volatile
  6512   001E3E  EF23  F00F         	goto	u1661
  6513   001E42  EF25  F00F         	goto	u1660
  6514   001E46                     u1661:
  6515   001E46  EF28  F00F         	goto	l292
  6516   001E4A                     u1660:
  6517   001E4A                     
  6518                           ;matrix_keypad.c: 37:  {;matrix_keypad.c: 38:   return 4;
  6519   001E4A  0E04               	movlw	4
  6520   001E4C  EF94  F00F         	goto	l290
  6521   001E50                     l292:
  6522   001E50  B681               	btfsc	129,3,c	;volatile
  6523   001E52  EF2D  F00F         	goto	u1671
  6524   001E56  EF2F  F00F         	goto	u1670
  6525   001E5A                     u1671:
  6526   001E5A  EF32  F00F         	goto	l294
  6527   001E5E                     u1670:
  6528   001E5E                     
  6529                           ;matrix_keypad.c: 41:  {;matrix_keypad.c: 42:   return 7;
  6530   001E5E  0E07               	movlw	7
  6531   001E60  EF94  F00F         	goto	l290
  6532   001E64                     l294:
  6533   001E64  B881               	btfsc	129,4,c	;volatile
  6534   001E66  EF37  F00F         	goto	u1681
  6535   001E6A  EF39  F00F         	goto	u1680
  6536   001E6E                     u1681:
  6537   001E6E  EF3C  F00F         	goto	l291
  6538   001E72                     u1680:
  6539   001E72                     
  6540                           ;matrix_keypad.c: 45:  {;matrix_keypad.c: 46:   return 10;
  6541   001E72  0E0A               	movlw	10
  6542   001E74  EF94  F00F         	goto	l290
  6543   001E78                     l291:
  6544                           
  6545                           ;matrix_keypad.c: 49:  PORTBbits.RB5 = 1;
  6546   001E78  8A81               	bsf	129,5,c	;volatile
  6547                           
  6548                           ;matrix_keypad.c: 50:  PORTBbits.RB6 = 0;
  6549   001E7A  9C81               	bcf	129,6,c	;volatile
  6550                           
  6551                           ;matrix_keypad.c: 51:  PORTBbits.RB7 = 1;
  6552   001E7C  8E81               	bsf	129,7,c	;volatile
  6553                           
  6554                           ;matrix_keypad.c: 53:  if (PORTBbits.RB1 == 0)
  6555   001E7E  B281               	btfsc	129,1,c	;volatile
  6556   001E80  EF44  F00F         	goto	u1691
  6557   001E84  EF46  F00F         	goto	u1690
  6558   001E88                     u1691:
  6559   001E88  EF49  F00F         	goto	l297
  6560   001E8C                     u1690:
  6561   001E8C                     
  6562                           ;matrix_keypad.c: 54:  {;matrix_keypad.c: 55:   return 2;
  6563   001E8C  0E02               	movlw	2
  6564   001E8E  EF94  F00F         	goto	l290
  6565   001E92                     l297:
  6566   001E92  B481               	btfsc	129,2,c	;volatile
  6567   001E94  EF4E  F00F         	goto	u1701
  6568   001E98  EF50  F00F         	goto	u1700
  6569   001E9C                     u1701:
  6570   001E9C  EF53  F00F         	goto	l299
  6571   001EA0                     u1700:
  6572   001EA0                     
  6573                           ;matrix_keypad.c: 58:  {;matrix_keypad.c: 59:   return 5;
  6574   001EA0  0E05               	movlw	5
  6575   001EA2  EF94  F00F         	goto	l290
  6576   001EA6                     l299:
  6577   001EA6  B681               	btfsc	129,3,c	;volatile
  6578   001EA8  EF58  F00F         	goto	u1711
  6579   001EAC  EF5A  F00F         	goto	u1710
  6580   001EB0                     u1711:
  6581   001EB0  EF5D  F00F         	goto	l301
  6582   001EB4                     u1710:
  6583   001EB4                     
  6584                           ;matrix_keypad.c: 62:  {;matrix_keypad.c: 63:   return 8;
  6585   001EB4  0E08               	movlw	8
  6586   001EB6  EF94  F00F         	goto	l290
  6587   001EBA                     l301:
  6588   001EBA  B881               	btfsc	129,4,c	;volatile
  6589   001EBC  EF62  F00F         	goto	u1721
  6590   001EC0  EF64  F00F         	goto	u1720
  6591   001EC4                     u1721:
  6592   001EC4  EF67  F00F         	goto	l298
  6593   001EC8                     u1720:
  6594   001EC8                     
  6595                           ;matrix_keypad.c: 66:  {;matrix_keypad.c: 67:   return 11;
  6596   001EC8  0E0B               	movlw	11
  6597   001ECA  EF94  F00F         	goto	l290
  6598   001ECE                     l298:
  6599                           
  6600                           ;matrix_keypad.c: 70:  PORTBbits.RB5 = 1;
  6601   001ECE  8A81               	bsf	129,5,c	;volatile
  6602                           
  6603                           ;matrix_keypad.c: 71:  PORTBbits.RB6 = 1;
  6604   001ED0  8C81               	bsf	129,6,c	;volatile
  6605                           
  6606                           ;matrix_keypad.c: 72:  PORTBbits.RB7 = 0;
  6607   001ED2  9E81               	bcf	129,7,c	;volatile
  6608                           
  6609                           ;matrix_keypad.c: 74:  PORTBbits.RB7 = 0;
  6610   001ED4  9E81               	bcf	129,7,c	;volatile
  6611                           
  6612                           ;matrix_keypad.c: 76:  if (PORTBbits.RB1 == 0)
  6613   001ED6  B281               	btfsc	129,1,c	;volatile
  6614   001ED8  EF70  F00F         	goto	u1731
  6615   001EDC  EF72  F00F         	goto	u1730
  6616   001EE0                     u1731:
  6617   001EE0  EF75  F00F         	goto	l304
  6618   001EE4                     u1730:
  6619   001EE4                     
  6620                           ;matrix_keypad.c: 77:  {;matrix_keypad.c: 78:   return 3;
  6621   001EE4  0E03               	movlw	3
  6622   001EE6  EF94  F00F         	goto	l290
  6623   001EEA                     l304:
  6624   001EEA  B481               	btfsc	129,2,c	;volatile
  6625   001EEC  EF7A  F00F         	goto	u1741
  6626   001EF0  EF7C  F00F         	goto	u1740
  6627   001EF4                     u1741:
  6628   001EF4  EF7F  F00F         	goto	l306
  6629   001EF8                     u1740:
  6630   001EF8                     
  6631                           ;matrix_keypad.c: 81:  {;matrix_keypad.c: 82:   return 6;
  6632   001EF8  0E06               	movlw	6
  6633   001EFA  EF94  F00F         	goto	l290
  6634   001EFE                     l306:
  6635   001EFE  B681               	btfsc	129,3,c	;volatile
  6636   001F00  EF84  F00F         	goto	u1751
  6637   001F04  EF86  F00F         	goto	u1750
  6638   001F08                     u1751:
  6639   001F08  EF89  F00F         	goto	l308
  6640   001F0C                     u1750:
  6641   001F0C                     
  6642                           ;matrix_keypad.c: 85:  {;matrix_keypad.c: 86:   return 9;
  6643   001F0C  0E09               	movlw	9
  6644   001F0E  EF94  F00F         	goto	l290
  6645   001F12                     l308:
  6646   001F12  B881               	btfsc	129,4,c	;volatile
  6647   001F14  EF8E  F00F         	goto	u1761
  6648   001F18  EF90  F00F         	goto	u1760
  6649   001F1C                     u1761:
  6650   001F1C  EF93  F00F         	goto	l307
  6651   001F20                     u1760:
  6652   001F20                     
  6653                           ;matrix_keypad.c: 89:  {;matrix_keypad.c: 90:   return 12;
  6654   001F20  0E0C               	movlw	12
  6655   001F22  EF94  F00F         	goto	l290
  6656   001F26                     l307:
  6657   001F26                     
  6658                           ;matrix_keypad.c: 93:  return 0xFF;
  6659   001F26  0EFF               	movlw	255
  6660   001F28                     l290:
  6661   001F28  0012               	return		;funcret
  6662   001F2A                     __end_of_scan_key:
  6663                           	callstack 0
  6664                           
  6665 ;; *************** function _clcd_write *****************
  6666 ;; Defined at:
  6667 ;;		line 11 in file "clcd.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  byte            1    wreg     unsigned char 
  6670 ;;  control_bit     1    0[COMRAM] unsigned char 
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;  byte            1    1[COMRAM] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      void 
  6675 ;; Registers used:
  6676 ;;		wreg
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6682 ;;      Params:         1       0       0       0       0       0       0
  6683 ;;      Locals:         1       0       0       0       0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0
  6685 ;;      Totals:         2       0       0       0       0       0       0
  6686 ;;Total ram usage:        2 bytes
  6687 ;; Hardware stack levels used: 1
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_check_matrix_keypad
  6692 ;;		_main
  6693 ;;		_init_clcd
  6694 ;;		_clcd_print
  6695 ;;		_clcd_putch
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text34
  6700   0025CE                     __ptext34:
  6701                           	callstack 0
  6702   0025CE                     _clcd_write:
  6703                           	callstack 28
  6704                           
  6705                           ;incstack = 0
  6706                           ;clcd_write@byte stored from wreg
  6707   0025CE  6E02               	movwf	clcd_write@byte^0,c
  6708   0025D0                     
  6709                           ;clcd.c: 11: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 12: 
      +                          {;clcd.c: 13:  RC1 = control_bit;
  6710   0025D0  B001               	btfsc	clcd_write@control_bit^0,0,c
  6711   0025D2  EFED  F012         	goto	u1621
  6712   0025D6  EFF0  F012         	goto	u1620
  6713   0025DA                     u1621:
  6714   0025DA  8282               	bsf	3970,1,c	;volatile
  6715   0025DC  EFF1  F012         	goto	u1635
  6716   0025E0                     u1620:
  6717   0025E0  9282               	bcf	3970,1,c	;volatile
  6718   0025E2                     u1635:
  6719   0025E2                     
  6720                           ;clcd.c: 14:  PORTD = byte;
  6721   0025E2  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  6722   0025E6                     
  6723                           ;clcd.c: 17:  RC2 = 1;
  6724   0025E6  8482               	bsf	3970,2,c	;volatile
  6725   0025E8                     
  6726                           ;clcd.c: 18:  RC2 = 0;
  6727   0025E8  9482               	bcf	3970,2,c	;volatile
  6728   0025EA                     
  6729                           ;clcd.c: 20:  TRISD7 = 0xFF;
  6730   0025EA  8E95               	bsf	3989,7,c	;volatile
  6731   0025EC                     
  6732                           ;clcd.c: 21:  RC0 = 1;
  6733   0025EC  8082               	bsf	3970,0,c	;volatile
  6734   0025EE                     
  6735                           ;clcd.c: 22:  RC1 = 0;
  6736   0025EE  9282               	bcf	3970,1,c	;volatile
  6737   0025F0                     l2388:
  6738                           
  6739                           ;clcd.c: 25:  {;clcd.c: 26:   RC2 = 1;
  6740   0025F0  8482               	bsf	3970,2,c	;volatile
  6741   0025F2                     
  6742                           ;clcd.c: 27:   RC2 = 0;
  6743   0025F2  9482               	bcf	3970,2,c	;volatile
  6744   0025F4                     
  6745                           ;clcd.c: 28:  } while (RD7);
  6746   0025F4  BE83               	btfsc	3971,7,c	;volatile
  6747   0025F6  EFFF  F012         	goto	u1641
  6748   0025FA  EF01  F013         	goto	u1640
  6749   0025FE                     u1641:
  6750   0025FE  EFF8  F012         	goto	l2388
  6751   002602                     u1640:
  6752   002602                     
  6753                           ;clcd.c: 30:  RC0 = 0;
  6754   002602  9082               	bcf	3970,0,c	;volatile
  6755                           
  6756                           ;clcd.c: 31:  TRISD7 = 0x00;
  6757   002604  9E95               	bcf	3989,7,c	;volatile
  6758   002606  0012               	return		;funcret
  6759   002608                     __end_of_clcd_write:
  6760                           	callstack 0
  6761                           
  6762 ;; *************** function _calculate_speed *****************
  6763 ;; Defined at:
  6764 ;;		line 110 in file "main.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  adc_reg_val     2    7[COMRAM] unsigned short 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      void 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6778 ;;      Params:         2       0       0       0       0       0       0
  6779 ;;      Locals:         0       0       0       0       0       0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0
  6781 ;;      Totals:         2       0       0       0       0       0       0
  6782 ;;Total ram usage:        2 bytes
  6783 ;; Hardware stack levels used: 1
  6784 ;; Hardware stack levels required when called: 1
  6785 ;; This function calls:
  6786 ;;		___lwdiv
  6787 ;; This function is called by:
  6788 ;;		_main
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text35
  6793   00254C                     __ptext35:
  6794                           	callstack 0
  6795   00254C                     _calculate_speed:
  6796                           	callstack 29
  6797   00254C                     
  6798                           ;main.c: 110: void calculate_speed(unsigned short adc_reg_val);main.c: 111: {;main.c: 11
      +                          3:     speed = (adc_reg_val/10);
  6799   00254C  C008  F001         	movff	calculate_speed@adc_reg_val,___lwdiv@dividend
  6800   002550  C009  F002         	movff	calculate_speed@adc_reg_val+1,___lwdiv@dividend+1
  6801   002554  0E00               	movlw	0
  6802   002556  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  6803   002558  0E0A               	movlw	10
  6804   00255A  6E03               	movwf	___lwdiv@divisor^0,c
  6805   00255C  EC5F  F011         	call	___lwdiv	;wreg free
  6806   002560  C001  F049         	movff	?___lwdiv,_speed
  6807   002564  C002  F04A         	movff	?___lwdiv+1,_speed+1
  6808   002568                     
  6809                           ;main.c: 114:     if(speed>99)
  6810   002568  BE4A               	btfsc	(_speed+1)^0,7,c
  6811   00256A  EFC0  F012         	goto	u2011
  6812   00256E  504A               	movf	(_speed+1)^0,w,c
  6813   002570  E109               	bnz	u2010
  6814   002572  0E64               	movlw	100
  6815   002574  5C49               	subwf	_speed^0,w,c
  6816   002576  A0D8               	btfss	status,0,c
  6817   002578  EFC0  F012         	goto	u2011
  6818   00257C  EFC2  F012         	goto	u2010
  6819   002580                     u2011:
  6820   002580  EFC6  F012         	goto	l103
  6821   002584                     u2010:
  6822   002584                     
  6823                           ;main.c: 115:         speed=99;
  6824   002584  0E00               	movlw	0
  6825   002586  6E4A               	movwf	(_speed+1)^0,c
  6826   002588  0E63               	movlw	99
  6827   00258A  6E49               	movwf	_speed^0,c
  6828   00258C                     l103:
  6829   00258C  0012               	return		;funcret
  6830   00258E                     __end_of_calculate_speed:
  6831                           	callstack 0
  6832                           
  6833 ;; *************** function ___lwdiv *****************
  6834 ;; Defined at:
  6835 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  dividend        2    0[COMRAM] unsigned int 
  6838 ;;  divisor         2    2[COMRAM] unsigned int 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  quotient        2    4[COMRAM] unsigned int 
  6841 ;;  counter         1    6[COMRAM] unsigned char 
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  2    0[COMRAM] unsigned int 
  6844 ;; Registers used:
  6845 ;;		wreg, status,2, status,0
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6851 ;;      Params:         4       0       0       0       0       0       0
  6852 ;;      Locals:         3       0       0       0       0       0       0
  6853 ;;      Temps:          0       0       0       0       0       0       0
  6854 ;;      Totals:         7       0       0       0       0       0       0
  6855 ;;Total ram usage:        7 bytes
  6856 ;; Hardware stack levels used: 1
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_calculate_speed
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text36
  6865   0022BE                     __ptext36:
  6866                           	callstack 0
  6867   0022BE                     ___lwdiv:
  6868                           	callstack 29
  6869   0022BE  0E00               	movlw	0
  6870   0022C0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  6871   0022C2  0E00               	movlw	0
  6872   0022C4  6E05               	movwf	___lwdiv@quotient^0,c
  6873   0022C6  5003               	movf	___lwdiv@divisor^0,w,c
  6874   0022C8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6875   0022CA  B4D8               	btfsc	status,2,c
  6876   0022CC  EF6A  F011         	goto	u1951
  6877   0022D0  EF6C  F011         	goto	u1950
  6878   0022D4                     u1951:
  6879   0022D4  EF94  F011         	goto	l1020
  6880   0022D8                     u1950:
  6881   0022D8  0E01               	movlw	1
  6882   0022DA  6E07               	movwf	___lwdiv@counter^0,c
  6883   0022DC  EF74  F011         	goto	l2714
  6884   0022E0                     l2712:
  6885   0022E0  90D8               	bcf	status,0,c
  6886   0022E2  3603               	rlcf	___lwdiv@divisor^0,f,c
  6887   0022E4  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6888   0022E6  2A07               	incf	___lwdiv@counter^0,f,c
  6889   0022E8                     l2714:
  6890   0022E8  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  6891   0022EA  EF79  F011         	goto	u1961
  6892   0022EE  EF7B  F011         	goto	u1960
  6893   0022F2                     u1961:
  6894   0022F2  EF70  F011         	goto	l2712
  6895   0022F6                     u1960:
  6896   0022F6                     l2716:
  6897   0022F6  90D8               	bcf	status,0,c
  6898   0022F8  3605               	rlcf	___lwdiv@quotient^0,f,c
  6899   0022FA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6900   0022FC  5003               	movf	___lwdiv@divisor^0,w,c
  6901   0022FE  5C01               	subwf	___lwdiv@dividend^0,w,c
  6902   002300  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6903   002302  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6904   002304  A0D8               	btfss	status,0,c
  6905   002306  EF87  F011         	goto	u1971
  6906   00230A  EF89  F011         	goto	u1970
  6907   00230E                     u1971:
  6908   00230E  EF8E  F011         	goto	l2724
  6909   002312                     u1970:
  6910   002312  5003               	movf	___lwdiv@divisor^0,w,c
  6911   002314  5E01               	subwf	___lwdiv@dividend^0,f,c
  6912   002316  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6913   002318  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6914   00231A  8005               	bsf	___lwdiv@quotient^0,0,c
  6915   00231C                     l2724:
  6916   00231C  90D8               	bcf	status,0,c
  6917   00231E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6918   002320  3203               	rrcf	___lwdiv@divisor^0,f,c
  6919   002322  2E07               	decfsz	___lwdiv@counter^0,f,c
  6920   002324  EF7B  F011         	goto	l2716
  6921   002328                     l1020:
  6922   002328  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  6923   00232C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6924   002330  0012               	return		;funcret
  6925   002332                     __end_of___lwdiv:
  6926                           	callstack 0
  6927                           
  6928                           	psect	rparam
  6929   000000                     
  6930                           	psect	idloc
  6931                           
  6932                           ;Config register IDLOC0 @ 0x200000
  6933                           ;	unspecified, using default values
  6934   200000                     	org	2097152
  6935   200000  FF                 	db	255
  6936                           
  6937                           ;Config register IDLOC1 @ 0x200001
  6938                           ;	unspecified, using default values
  6939   200001                     	org	2097153
  6940   200001  FF                 	db	255
  6941                           
  6942                           ;Config register IDLOC2 @ 0x200002
  6943                           ;	unspecified, using default values
  6944   200002                     	org	2097154
  6945   200002  FF                 	db	255
  6946                           
  6947                           ;Config register IDLOC3 @ 0x200003
  6948                           ;	unspecified, using default values
  6949   200003                     	org	2097155
  6950   200003  FF                 	db	255
  6951                           
  6952                           ;Config register IDLOC4 @ 0x200004
  6953                           ;	unspecified, using default values
  6954   200004                     	org	2097156
  6955   200004  FF                 	db	255
  6956                           
  6957                           ;Config register IDLOC5 @ 0x200005
  6958                           ;	unspecified, using default values
  6959   200005                     	org	2097157
  6960   200005  FF                 	db	255
  6961                           
  6962                           ;Config register IDLOC6 @ 0x200006
  6963                           ;	unspecified, using default values
  6964   200006                     	org	2097158
  6965   200006  FF                 	db	255
  6966                           
  6967                           ;Config register IDLOC7 @ 0x200007
  6968                           ;	unspecified, using default values
  6969   200007                     	org	2097159
  6970   200007  FF                 	db	255
  6971                           
  6972                           	psect	config
  6973                           
  6974                           ; Padding undefined space
  6975   300000                     	org	3145728
  6976   300000  FF                 	db	255
  6977                           
  6978                           ;Config register CONFIG1H @ 0x300001
  6979                           ;	unspecified, using default values
  6980                           ;	Oscillator Selection bits
  6981                           ;	OSC = 0x7, unprogrammed default
  6982                           ;	Fail-Safe Clock Monitor Enable bit
  6983                           ;	FCMEN = 0x0, unprogrammed default
  6984                           ;	Internal/External Oscillator Switchover bit
  6985                           ;	IESO = 0x0, unprogrammed default
  6986   300001                     	org	3145729
  6987   300001  07                 	db	7
  6988                           
  6989                           ;Config register CONFIG2L @ 0x300002
  6990                           ;	unspecified, using default values
  6991                           ;	Power-up Timer Enable bit
  6992                           ;	PWRT = 0x1, unprogrammed default
  6993                           ;	Brown-out Reset Enable bits
  6994                           ;	BOREN = 0x3, unprogrammed default
  6995                           ;	Brown-out Reset Voltage bits
  6996                           ;	BORV = 0x3, unprogrammed default
  6997   300002                     	org	3145730
  6998   300002  1F                 	db	31
  6999                           
  7000                           ;Config register CONFIG2H @ 0x300003
  7001                           ;	unspecified, using default values
  7002                           ;	Watchdog Timer Enable bit
  7003                           ;	WDT = 0x1, unprogrammed default
  7004                           ;	Watchdog Timer Postscale Select bits
  7005                           ;	WDTPS = 0xF, unprogrammed default
  7006   300003                     	org	3145731
  7007   300003  1F                 	db	31
  7008                           
  7009                           ; Padding undefined space
  7010   300004                     	org	3145732
  7011   300004  FF                 	db	255
  7012                           
  7013                           ;Config register CONFIG3H @ 0x300005
  7014                           ;	unspecified, using default values
  7015                           ;	PORTB A/D Enable bit
  7016                           ;	PBADEN = 0x1, unprogrammed default
  7017                           ;	Low-Power Timer 1 Oscillator Enable bit
  7018                           ;	LPT1OSC = 0x0, unprogrammed default
  7019                           ;	MCLR Pin Enable bit
  7020                           ;	MCLRE = 0x1, unprogrammed default
  7021   300005                     	org	3145733
  7022   300005  82                 	db	130
  7023                           
  7024                           ;Config register CONFIG4L @ 0x300006
  7025                           ;	unspecified, using default values
  7026                           ;	Stack Full/Underflow Reset Enable bit
  7027                           ;	STVREN = 0x1, unprogrammed default
  7028                           ;	Single-Supply ICSP Enable bit
  7029                           ;	LVP = 0x1, unprogrammed default
  7030                           ;	Boot Block Size Select bit
  7031                           ;	BBSIZ = 0x0, unprogrammed default
  7032                           ;	Extended Instruction Set Enable bit
  7033                           ;	XINST = 0x0, unprogrammed default
  7034                           ;	Background Debugger Enable bit
  7035                           ;	DEBUG = 0x1, unprogrammed default
  7036   300006                     	org	3145734
  7037   300006  85                 	db	133
  7038                           
  7039                           ; Padding undefined space
  7040   300007                     	org	3145735
  7041   300007  FF                 	db	255
  7042                           
  7043                           ;Config register CONFIG5L @ 0x300008
  7044                           ;	unspecified, using default values
  7045                           ;	Code Protection bit
  7046                           ;	CP0 = 0x1, unprogrammed default
  7047                           ;	Code Protection bit
  7048                           ;	CP1 = 0x1, unprogrammed default
  7049                           ;	Code Protection bit
  7050                           ;	CP2 = 0x1, unprogrammed default
  7051                           ;	Code Protection bit
  7052                           ;	CP3 = 0x1, unprogrammed default
  7053   300008                     	org	3145736
  7054   300008  0F                 	db	15
  7055                           
  7056                           ;Config register CONFIG5H @ 0x300009
  7057                           ;	unspecified, using default values
  7058                           ;	Boot Block Code Protection bit
  7059                           ;	CPB = 0x1, unprogrammed default
  7060                           ;	Data EEPROM Code Protection bit
  7061                           ;	CPD = 0x1, unprogrammed default
  7062   300009                     	org	3145737
  7063   300009  C0                 	db	192
  7064                           
  7065                           ;Config register CONFIG6L @ 0x30000A
  7066                           ;	unspecified, using default values
  7067                           ;	Write Protection bit
  7068                           ;	WRT0 = 0x1, unprogrammed default
  7069                           ;	Write Protection bit
  7070                           ;	WRT1 = 0x1, unprogrammed default
  7071                           ;	Write Protection bit
  7072                           ;	WRT2 = 0x1, unprogrammed default
  7073                           ;	Write Protection bit
  7074                           ;	WRT3 = 0x1, unprogrammed default
  7075   30000A                     	org	3145738
  7076   30000A  0F                 	db	15
  7077                           
  7078                           ;Config register CONFIG6H @ 0x30000B
  7079                           ;	unspecified, using default values
  7080                           ;	Configuration Register Write Protection bit
  7081                           ;	WRTC = 0x1, unprogrammed default
  7082                           ;	Boot Block Write Protection bit
  7083                           ;	WRTB = 0x1, unprogrammed default
  7084                           ;	Data EEPROM Write Protection bit
  7085                           ;	WRTD = 0x1, unprogrammed default
  7086   30000B                     	org	3145739
  7087   30000B  E0                 	db	224
  7088                           
  7089                           ;Config register CONFIG7L @ 0x30000C
  7090                           ;	unspecified, using default values
  7091                           ;	Table Read Protection bit
  7092                           ;	EBTR0 = 0x1, unprogrammed default
  7093                           ;	Table Read Protection bit
  7094                           ;	EBTR1 = 0x1, unprogrammed default
  7095                           ;	Table Read Protection bit
  7096                           ;	EBTR2 = 0x1, unprogrammed default
  7097                           ;	Table Read Protection bit
  7098                           ;	EBTR3 = 0x1, unprogrammed default
  7099   30000C                     	org	3145740
  7100   30000C  0F                 	db	15
  7101                           
  7102                           ;Config register CONFIG7H @ 0x30000D
  7103                           ;	unspecified, using default values
  7104                           ;	Boot Block Table Read Protection bit
  7105                           ;	EBTRB = 0x1, unprogrammed default
  7106   30000D                     	org	3145741
  7107   30000D  40                 	db	64
  7108                           tosu	equ	0xFFF
  7109                           tosh	equ	0xFFE
  7110                           tosl	equ	0xFFD
  7111                           stkptr	equ	0xFFC
  7112                           pclatu	equ	0xFFB
  7113                           pclath	equ	0xFFA
  7114                           pcl	equ	0xFF9
  7115                           tblptru	equ	0xFF8
  7116                           tblptrh	equ	0xFF7
  7117                           tblptrl	equ	0xFF6
  7118                           tablat	equ	0xFF5
  7119                           prodh	equ	0xFF4
  7120                           prodl	equ	0xFF3
  7121                           indf0	equ	0xFEF
  7122                           postinc0	equ	0xFEE
  7123                           postdec0	equ	0xFED
  7124                           preinc0	equ	0xFEC
  7125                           plusw0	equ	0xFEB
  7126                           fsr0h	equ	0xFEA
  7127                           fsr0l	equ	0xFE9
  7128                           wreg	equ	0xFE8
  7129                           indf1	equ	0xFE7
  7130                           postinc1	equ	0xFE6
  7131                           postdec1	equ	0xFE5
  7132                           preinc1	equ	0xFE4
  7133                           plusw1	equ	0xFE3
  7134                           fsr1h	equ	0xFE2
  7135                           fsr1l	equ	0xFE1
  7136                           bsr	equ	0xFE0
  7137                           indf2	equ	0xFDF
  7138                           postinc2	equ	0xFDE
  7139                           postdec2	equ	0xFDD
  7140                           preinc2	equ	0xFDC
  7141                           plusw2	equ	0xFDB
  7142                           fsr2h	equ	0xFDA
  7143                           fsr2l	equ	0xFD9
  7144                           status	equ	0xFD8

Data Sizes:
    Strings     248
    Constant    0
    Data        27
    BSS         235
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     62      94
    BANK0           160      0      50
    BANK1           256      0     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    puts@s	PTR const unsigned char  size(2) Largest target is 180
		 -> STR_28(CODE[3]), detail(BANK1[180]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 180
		 -> STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[7]), 
		 -> STR_29(CODE[21]), STR_27(CODE[15]), STR_26(CODE[14]), STR_25(CODE[18]), 
		 -> STR_24(CODE[11]), STR_23(CODE[14]), STR_22(CODE[17]), STR_21(CODE[14]), 
		 -> STR_20(CODE[19]), STR_19(CODE[19]), STR_18(CODE[17]), STR_17(CODE[11]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[17]), detail(BANK1[180]), 
		 -> time(BANK0[9]), STR_13(CODE[10]), STR_12(CODE[13]), STR_11(CODE[9]), 
		 -> STR_10(CODE[9]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    menu	PTR unsigned char [4] size(2) Largest target is 13
		 -> STR_13(CODE[10]), STR_12(CODE[13]), STR_11(CODE[9]), STR_10(CODE[9]), 

    message	PTR unsigned char [9] size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_check_matrix_keypad
    _reading_eeprom->___awdiv
    _read_external_eeprom->_i2c_write
    _puts->___wmul
    _init_config->_init_ds1307
    _init_ds1307->_write_ds1307
    _init_clcd->_clcd_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _clcd_putch->___awdiv
    _clcd_print->___wmul
    _check_matrix_keypad->_writing_eeprom
    _writing_eeprom->_write_external_eeprom
    _write_external_eeprom->___awdiv
    _write_ds1307->___awdiv
    _calculate_speed->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                44    44      0   35107
                                             18 COMRAM    44    44      0
                            ___awdiv
                            ___awmod
                             ___wmul
                    _calculate_speed
                _check_matrix_keypad
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _get_time
                        _init_config
                               _puts
                           _read_adc
                     _reading_eeprom
 ---------------------------------------------------------------------------------
 (1) _reading_eeprom                                       8     8      0    6959
                                              8 COMRAM     8     8      0
                            ___awdiv
                             ___wmul
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    4003
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 2     0      2     219
                                              6 COMRAM     2     0      2
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1918
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     734
                                             10 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1184
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    2140
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    4899
                                              6 COMRAM     3     0      3
                             ___wmul (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _check_matrix_keypad                                  4     4      0    9626
                                             14 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                         _clcd_write
                      _read_switches
                       _write_ds1307
                     _writing_eeprom
 ---------------------------------------------------------------------------------
 (2) _writing_eeprom                                       2     2      0    4181
                                             12 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _write_external_eeprom                                4     3      1     849
                                              8 COMRAM     4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1512
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1820
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     598
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (3) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    1184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _calculate_speed                                      2     0      2     412
                                              7 COMRAM     2     0      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___wmul
   _calculate_speed
     ___lwdiv
   _check_matrix_keypad
     ___awdiv
     ___awmod
     _clcd_write
     _read_switches
       _scan_key
     _write_ds1307
       ___awdiv (ARG)
       ___awmod (ARG)
       _i2c_start (ARG)
         _i2c_idle
       _i2c_stop (ARG)
         _i2c_idle
       _i2c_write (ARG)
         _i2c_idle
     _writing_eeprom
       ___awdiv
       ___awmod
       _write_external_eeprom
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
   _clcd_print
     ___wmul (ARG)
     _clcd_write (ARG)
   _clcd_putch
     ___awdiv (ARG)
     ___awmod (ARG)
     _clcd_write (ARG)
   _clcd_write
   _get_time
     _read_ds1307
       _i2c_read
         _i2c_no_ack
         _i2c_rx_mode
           _i2c_idle
       _i2c_rep_start
         _i2c_idle
       _i2c_start
       _i2c_stop
       _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
     _init_i2c
     _init_matrix_keypad
     _init_uart
   _puts
     ___wmul (ARG)
     _putch (ARG)
   _read_adc
   _reading_eeprom
     ___awdiv
     ___wmul
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
BITBIGSFRl         281      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B4       7       70.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      32       5       31.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3E      5E       1       98.9%
BITBIGSFRhhhlhh     27      0       0      17        0.0%
BITBIGSFRhl          F      0       0      23        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRhhlhhl      9      0       0      20        0.0%
BITBIGSFRhhlhhh      8      0       0      19        0.0%
BITBIGSFRhhll        8      0       0      22        0.0%
BITBIGSFRhhlhhh      7      0       0      18        0.0%
BITBIGSFRhhlhl       2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      25        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Nov 11 16:27:32 2024

                            _i 005B                              _j 0059                              _k 0057  
        _write_external_eeprom 258E                 clcd_print@addr 0009                 clcd_print@data 0007  
                           l87 202A                             l96 1E20                             _GO 7E11  
                           l99 23FE                   ___awdiv@sign 0006            ___wmul@multiplicand 0003  
           _init_matrix_keypad 275A                            l103 258C                            l131 1582  
                          l115 19C2                            l108 1172                            l301 1EBA  
                          l143 16A8                            l119 13B2                            l304 1EEA  
                          l400 276C                            l306 1EFE                            l402 277A  
                          l410 27B4                            l138 1634                            l307 1F26  
                          l403 277C                            l155 1870                            l171 2712  
                          l260 2602                            l308 1F12                            l261 2606  
                          l413 27AC                            l149 17A0                            l270 239C  
                          l422 27A4                            l510 2724                            l319 22BC  
                          l511 272A                            l416 279C                            l264 2246  
                          l273 2742                            l425 27BA                            l505 26A0  
                          l290 1F28                            l362 254A                            l291 1E78  
                          l419 2794                            l451 265A                            l292 1E50  
                          l428 2788                            l356 26C0                            l508 2716  
                          l188 09A4                            l445 2504                            l517 24BC  
                          l294 1E64                            l286 276A                            l470 2630  
                          l359 251E                            l448 26DE                            l297 1E92  
                          l289 1E3C                            l529 2680                            l298 1ECE  
                          l299 1EA6                            l467 25CC                            l397 2758  
                          l760 20EE                            l773 219E                            _CKE 7E3E  
                          _RC0 7C10                            _RC1 7C11                            _RC2 7C12  
                          _RD7 7C1F                            _PEN 7E2A                            _SEN 7E28  
                          _RX9 7D5E                            _SMP 7E3F                            _TX9 7D66  
                          _add 0047                            _end 0053                            _key 007D  
                          _min 004F                            _sec 004D                 clcd_putch@addr 0009  
               clcd_putch@data 000A                   ___awmod@sign 0006                            wreg 0FE8  
          ?_init_matrix_keypad 0001                           l1020 2328                           l1027 2330  
                         l3000 15D0                           l3010 163E                           l3002 15E2  
                         l3100 18F0                           l3020 1672                           l3004 15FE  
                         l3110 1936                           l3102 1902                           l3030 16C8  
                         l3022 1684                           l3014 1656                           l3006 1610  
                         l2310 27A0                           l2320 27A8                           l3112 1948  
                         l3104 190E                           l3040 1712                           l3024 1698  
                         l3008 1624                           l3032 16CE                           l2312 27B6  
                         l3200 0840                           l2402 1E4A                           l2306 276C  
                         l2314 27AE                           l3122 1992                           l3114 195A  
                         l3106 1920                           l3050 1776                           l3042 172E  
                         l3034 16E0                           l3026 16B0                           l3018 1660  
                         l2330 277E                           l2322 2796                           l3130 2702  
                         l3210 08A8                           l3202 0866                           l2316 27B0  
                         l2500 20C8                           l2340 259A                           l3124 19A4  
                         l3116 1968                           l3060 17A4                           l3052 177E  
                         l3044 1740                           l3036 16FC                           l3028 16C4  
                         l2308 279E                           l2332 2786                           l2324 2798  
                         l3132 2706                           l3140 252C                           l3300 0C04  
                         l3220 0928                           l3212 08B8                           l3204 0878  
                         l2430 1EB4                           l2414 1E72                           l2318 27A6  
                         l2326 278C                           l2502 20CE                           l2510 20F0  
                         l2342 25A0                           l3126 19B8                           l3118 197A  
                         l3070 180A                           l3062 17B8                           l3046 1754  
                         l3038 1700                           l3150 2368                           l2350 2634  
                         l3134 270E                           l3142 2542                           l3230 0958  
                         l3222 0930                           l3214 08C8                           l3206 088A  
                         l2440 1EE4                           l2424 1EA0                           l2408 1E5E  
                         l2328 2790                           l2504 20DE                           l2520 211C  
                         l2512 20F4                           l2344 25A6                           l2336 2590  
                         l3072 181E                           l3056 1788                           l3048 1764  
                         l3064 17CC                           l3152 236C                           l2360 2654  
                         l2352 2638                           l3128 26FA                           l3160 2488  
                         l3136 2508                           l3320 0CBA                           l3312 0C60  
                         l3240 09CC                           l3232 0968                           l3224 0938  
                         l3216 0920                           l3208 089C                           l2418 1E8C  
                         l2610 22B2                           l2370 26D4                           l2506 20E6  
                         l2530 2154                           l2522 2124                           l2514 2102  
                         l2346 25AA                           l2338 2594                           l3082 1854  
                         l3074 182E                           l3066 17DC                           l3090 189A  
                         l3058 179C                           l3146 2332                           l3154 272E  
                         l2354 263E                           l3162 248C                           l3138 251C  
                         l3330 0D3A                           l3322 0CF0                           l3314 0C72  
                         l3250 0A5A                           l3242 09D8                           l3234 0978  
                         l3218 0920                           l3226 0944                           l3170 0710  
                         l2380 25E8                           l2452 1F0C                           l2436 1EC8  
                         l2604 228A                           l2372 26DA                           l2364 26C4  
                         l2540 218E                           l2532 216A                           l2524 2136  
                         l2516 210A                           l2348 25B2                           l3092 18AE  
                         l3084 186A                           l3076 1840                           l3068 17F8  
                         l3148 2340                           l2356 2644                           l2620 21A4  
                         l3156 2460                           l2700 265C                           l3340 0D9C  
                         l3332 0D4A                           l3324 0D10                           l3316 0C84  
                         l3252 0A66                           l3244 09E2                           l3260 0A8C  
                         l3228 0948                           l3236 09A8                           l3180 074C  
                         l3172 071C                           l3164 06FA                           l2710 22D8  
                         l2390 25F2                           l2382 25EA                           l2374 25D0  
                         l2462 1F26                           l2446 1EF8                           l2606 229A  
                         l2614 22BA                           l2366 26C8                           l2470 203E  
                         l2542 2196                           l2534 2172                           l2526 213E  
                         l2518 210E                           l2550 1F38                           l3094 18C0  
                         l3086 1876                           l3078 1848                           l2358 2648  
                         l2630 21D6                           l2622 21AA                           l3158 2464  
                         l2702 2678                           l3350 0E48                           l3342 0DF2  
                         l3334 0D6A                           l3326 0D26                           l3318 0CA4  
                         l3270 0AD8                           l3262 0A9E                           l3254 0A6E  
                         l3246 09F2                           l3238 09BC                           l3190 07D4  
                         l3182 075C                           l3174 0720                           l3166 06FE  
                         l2720 2312                           l2712 22E0                           l2392 25F4  
                         l2384 25EC                           l2376 25E2                           l2608 22A2  
                         l2368 26CE                           l2480 2064                           l2472 2046  
                         l2536 2178                           l2528 2146                           l2560 1F70  
                         l2552 1F46                           l3096 18D2                           l3088 188A  
                         l2640 2202                           l2632 21E0                           l2624 21AC  
                         l2800 1DD6                           l3360 0EC6                           l3344 0DFE  
                         l3336 0D8A                           l3328 0D2E                           l3280 0B6C  
                         l3272 0AF8                           l3264 0AAA                           l3256 0A76  
                         l3248 0A02                           l3192 07F4                           l3184 077E  
                         l3176 0732                           l3168 0702                           l2722 231A  
                         l2714 22E8                           l2706 22BE                           l2386 25EE  
                         l2378 25E6                           l2458 1F20                           l2394 1E22  
                         l2490 209C                           l2482 206C                           l2474 204A  
                         l2466 202C                           l2538 217E                           l2570 1FDE  
                         l2562 1F7A                           l2554 1F50                           l2546 1F2A  
                         l3098 18DE                           l2650 2234                           l2642 220A  
                         l2634 21E8                           l2626 21BC                           l2618 21A0  
                         l2802 1DDA                           l2810 1E02                           l2730 19CC  
                         l3370 0F70                           l3362 0EE6                           l3354 0E5A  
                         l3346 0E08                           l3290 0BA6                           l3282 0B74  
                         l3274 0B50                           l3266 0AB4                           l3258 0A7E  
                         l3194 0806                           l3186 079E                           l3178 073C  
                         l2724 231C                           l2716 22F6                           l2708 22C6  
                         l2388 25F0                           l2396 1E36                           l2492 20A2  
                         l2484 207E                           l2476 2058                           l2468 2030  
                         l2572 2002                           l2564 1F7E                           l2556 1F5E  
                         l2548 1F34                           l2900 132A                           l2820 23D2  
                         l2812 239E                           l2660 26A2                           l2652 223E  
                         l2644 2214                           l2636 21F2                           l2628 21C6  
                         l2580 2614                           l2804 1DE2                           l2740 1A16  
                         l2732 19DE                           l3380 1004                           l3372 0F7C  
                         l3364 0F06                           l3356 0EB0                           l3348 0E28  
                         l3292 0BB2                           l3276 0B5C                           l3268 0AC6  
                         l3284 0B82                           l3196 0814                           l3188 07C2  
                         l2726 2322                           l2718 22FC                           l2590 224A  
                         l2494 20B8                           l2486 2086                           l2478 2060  
                         l2574 2006                           l2566 1FA4                           l2558 1F62  
                         l2902 1332                           l2830 23FA                           l2822 23DC  
                         l2814 23BC                           l2662 26B6                           l2646 221C  
                         l2638 21F8                           l2670 2750                           l2654 275A  
                         l2582 261A                           l2806 1DF6                           l2750 1AB4  
                         l2742 1A22                           l2734 19E6                           l3390 1090  
                         l3382 1014                           l3374 0F8C                           l3358 0EBC  
                         l3294 0BD6                           l3286 0B86                           l3278 0B64  
                         l3198 081E                           l2832 254C                           l2592 225A  
                         l2496 20C0                           l2488 208E                           l2568 1FA8  
                         l2920 13B2                           l2904 133C                           l2912 1348  
                         l2840 111A                           l2824 23E4                           l2816 23C6  
                         l2664 26BE                           l2648 2226                           l2680 24C6  
                         l2672 2752                           l2656 2762                           l2584 261E  
                         l2576 260A                           l2808 1DFE                           l2760 1B60  
                         l2752 1AB8                           l2744 1A48                           l2736 19F2  
                         l2728 19C4                           l3392 10A4                           l3384 1026  
                         l3376 0F9E                           l3368 0F1A                           l3296 0BE2  
                         l3288 0B96                           l2834 2568                           l2594 2260  
                         l2498 20C2                           l2930 13EE                           l2922 13C4  
                         l2914 135A                           l2850 1166                           l2842 112A  
                         l2826 23E8                           l2818 23CE                           l2682 24D2  
                         l2674 2754                           l2666 2744                           l2658 2764  
                         l2690 2698                           l2586 262A                           l2578 260E  
                         l2770 1BD8                           l2762 1B64                           l2754 1ABC  
                         l2746 1A4C                           l2738 19FA                           l3394 10B4  
                         l3386 1036                           l3378 0FAE                           l3298 0BE6  
                         l2836 2584                           l2596 2270                           l2940 1418  
                         l2932 13F6                           l2924 13D6                           l2916 136C  
                         l2860 11AC                           l2852 1176                           l2844 113C  
                         l2828 23F2                           l2684 24E6                           l2676 2756  
                         l2668 2748                           l2692 269C                           l2780 1C84  
                         l2772 1C14                           l2764 1B9C                           l2756 1AF8  
                         l2748 1A80                           l2598 2280                           l2950 1450  
                         l2942 1420                           l2934 1400                           l2926 13E0  
                         l2862 11C0                           l2854 1188                           l2846 114E  
                         l2838 1112                           l2686 24F0                           l2678 24BE  
                         l2694 269E                           l2790 1D2C                           l2782 1CB8  
                         l2774 1C48                           l2766 1BA0                           l2758 1B28  
                         l2952 146C                           l2936 1408                           l2928 13E6  
                         l2880 1220                           l2864 11C4                           l2856 118C  
                         l2848 1152                           l2872 11E4                           l2688 2682  
                         l2696 2716                           l2792 1D64                           l2784 1CBC  
                         l2776 1C4C                           l2768 1BD4                           l2970 14FC  
                         l2954 147E                           l2938 1410                           l2946 142C  
                         l2890 1250                           l2874 11F6                           l2866 11D8  
                         l2858 11A0                           l2698 2726                           l2794 1D68  
                         l2786 1CC0                           l2778 1C50                           l2980 154C  
                         l2972 1516                           l2956 1486                           l2948 143E  
                         l2892 130A                           l2876 1208                           l2796 1DA0  
                         l2788 1CFC                           l2982 155E                           l2958 1498  
                         l2966 14DA                           l2894 1312                           l2878 120C  
                         l2886 122C                           l2798 1DA4                           l2992 15A4  
                         l2984 1572                           l2968 14EC                           l2976 1520  
                         l2896 131A                           l2888 123E                           l2994 15B8  
                         l2986 158C                           l2978 1530                           l2898 1322  
                         l2996 15C4                           l2998 15C8                           _ADFM 7E07  
                         _ADON 7E10                           STR_1 06F3                           STR_2 06F0  
                         STR_3 06F6                           STR_4 06E1                           STR_5 06E4  
                         STR_6 06E7                           STR_7 06EA                           STR_8 06ED  
                         STR_9 06DE                           _BRGH 7D62                           _CREN 7D5C  
                         u2000 1E20                           u2001 1E1C                           u2010 2584  
                         u2011 2580                           u2100 11F6                           u2020 112A  
                         u2101 11F2                           u2021 1126                           u2110 1208  
                         u2030 113C                           u2111 1204                           u2031 1138  
                         u2200 1450                           u2120 1220                           u2040 114E  
                         u3000 0C84                           u2201 144C                           u2121 121C  
                         u2041 114A                           u3001 0C80                           u2210 146C  
                         u2130 123E                           u2050 1166                           u2211 1468  
                         u2131 123A                           u2051 1162                           u3011 0D34  
                         u2300 155E                           u2220 147E                           u2140 1250  
                         u2060 1188                           u3020 0D9C                           u2301 155A  
                         u2221 147A                           u2141 124C                           u2061 1184  
                         u3101 0F76                           u3021 0D98                           u2310 1572  
                         u2230 1498                           u2150 135A                           u2070 11A0  
                         u3110 0F9E                           u3030 0DF2                           u2311 156E  
                         u2231 1494                           u2151 1356                           u2071 119C  
                         u3111 0F9A                           u3031 0DEE                           u1600 277A  
                         u2400 1684                           u2320 15A0                           u2240 14D6  
                         u2160 136C                           u2080 11C0                           u3120 1004  
                         u1601 2776                           u2401 1680                           u2321 159C  
                         u2241 14D2                           u2161 1368                           u2081 11BC  
                         u3121 1000                           u3041 0DF8                           u1610 25CC  
                         u2410 1698                           u2330 15B8                           u2250 14EC  
                         u2170 13C4                           u2090 11D8                           u3050 0E5A  
                         u1611 25C8                           u2411 1694                           u2331 15B4  
                         u2251 14E8                           u2171 13C0                           u2091 11D4  
                         u3131 100A                           u3051 0E56                           u1620 25E0  
                         u1700 1EA0                           u2500 179C                           u2420 16C4  
                         u2340 15E2                           u2260 14FC                           u2180 13D6  
                         u3140 1026                           u3060 0EB0                           u1621 25DA  
                         u1701 1E9C                           u2501 1798                           u2421 16C0  
                         u2341 15DE                           u2261 14F8                           u2181 13D2  
                         u3141 1022                           u3061 0EAC                           u1710 1EB4  
                         u2510 17B8                           u2430 16E0                           u2350 15FE  
                         u2270 1516                           u2190 143E                           u3150 108C  
                         u1711 1EB0                           u2511 17B4                           u2431 16DC  
                         u2351 15FA                           u2271 1512                           u2191 143A  
                         u3207 21E2                           u3151 1088                           u3071 0EB6  
                         u1640 2602                           u1720 1EC8                           u1800 209C  
                         u2600 18C0                           u2520 17DC                           u2440 16FC  
                         u2360 1610                           u2280 1530                           u3160 10A4  
                         u3080 0F1A                           u1641 25FE                           u1721 1EC4  
                         u1801 2098                           u2601 18BC                           u2521 17D8  
                         u2441 16F8                           u2361 160C                           u2281 152C  
                         u3217 2204                           u3161 10A0                           u3081 0F16  
                         u1730 1EE4                           u1650 1E36                           u1810 20B8  
                         u2610 18D2                           u2530 17F8                           u2450 1712  
                         u2370 1624                           u2290 154C                           u3170 110A  
                         u3090 0F70                           u1635 25E2                           u1731 1EE0  
                         u1651 1E32                           u1811 20B4                           u2611 18CE  
                         u2531 17F4                           u2451 170E                           u2371 1620  
                         u2291 1548                           u3227 2216                           u3171 1106  
                         u3091 0F6C                           u1740 1EF8                           u1660 1E4A  
                         u1900 2270                           u1820 20DE                           u2700 19A4  
                         u2620 18F0                           u2540 180A                           u2460 172E  
                         u2380 1652                           u1741 1EF4                           u1661 1E46  
                         u1901 226C                           u1821 20DA                           u2701 19A0  
                         u2621 18EC                           u2541 1806                           u2461 172A  
                         u2381 164E                           u3237 222C                           u1750 1F0C  
                         u1670 1E5E                           u1910 2280                           u1830 2102  
                         u2710 19B8                           u2630 1902                           u2550 181E  
                         u2470 1740                           u2390 1672                           u1751 1F08  
                         u1671 1E5A                           u1911 227C                           u1831 20FE  
                         u2711 19B4                           u2631 18FE                           u2551 181A  
                         u2471 173C                           u2391 166E                           u3247 2240  
                         u1760 1F20                           u1680 1E72                           u1920 229A  
                         u1840 211C                           u2640 1920                           u2560 1840  
                         u2480 1754                           u2720 252C                           u2800 07D4  
                         u1761 1F1C                           u1681 1E6E                           u1921 2296  
                         u1841 2118                           u2641 191C                           u2561 183C  
                         u2481 1750                           u2721 2528                           u2801 07D0  
                         u1690 1E8C                           u1930 22B2                           u1770 203E  
                         u1850 2136                           u2650 1932                           u2570 186A  
                         u2490 1776                           u2730 2364                           u2810 0806  
        ?_read_external_eeprom 0001                           u1691 1E88                           u1931 22AE  
                         u1771 203A                           u1851 2132                           u2651 192E  
                         u2571 1866                           u2491 1772                           u3187 21B2  
                         u2811 0802                           u1780 2058                           u1860 2154  
                         u2660 1948                           u2580 188A                           u2740 238C  
                         u1940 2724                           u2820 0878                           u1781 2054  
                         u1861 2150                           u2661 1944                           u2581 1886  
                         u3197 21CC                           u1941 2720                           u2901 0A60  
                         u2821 0874                           u1950 22D8                           u1790 207E  
                         u1870 216A                           u2670 195A                           u2590 18AE  
                         u2750 239C                           u2910 0A9E                           u2830 088A  
                         u1951 22D4                           u1791 207A                           u1871 2166  
                         u2671 1956                           u2591 18AA                           u2751 2398  
                         u2911 0A9A                           u2831 0886                           u1960 22F6  
                         u1880 218E                           u2680 197A                           u2760 2484  
                         u2840 089C                           u1961 22F2                           u1881 218A  
                         u2681 1976                           u2737 235A                           u2921 0AA4  
                         u2841 0898                           u1970 2312                           u1890 225A  
                         u2690 198E                           u2770 24AC                           u2930 0AC6  
                         u1971 230E                           u1891 2256                           u2691 198A  
                         u2747 2382                           u2931 0AC2                           u2851 08A2  
                         u2780 24BC                           u1980 19DE                           u2940 0AD8  
                         u2860 0920                           u2781 24B8                           u1981 19DA  
                         u2941 0AD4                           u2861 091C                           u1990 1DF6  
                         u2950 0B50                           u2870 09BC                           u2790 0732  
                         u2767 247A                           u1991 1DF2                           u2951 0B4C  
                         u2871 09B8                           u2791 072E                           u2777 24A2  
                         u2961 0B56                           u2881 09D2                           u2970 0C04  
                         u2890 0A5A                           u2971 0C00                           u2891 0A56  
                         u2980 0C5C                           _RCEN 7E2B                           _RCIF 7CF5  
                         u2981 0C58                           u2990 0C72                           u2991 0C6E  
                         _RBPU 7F8F                           _SPEN 7D5F                           _RSEN 7E29  
                         _TXEN 7D65                           _TXIF 7CF4                           _SYNC 7D64  
                         _flag 007F                           _main 06FA                           _menu 0072  
                         _hour 0051                           _time 0089                           _star 0055  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           _puts 2460                           prodh 0FF4  
                         prodl 0FF3                           start 0000           ??_init_matrix_keypad 0001  
                 ___param_bank 0000                 clcd_write@byte 0002                  _i2c_rep_start 2796  
                ??_i2c_rx_mode 0001                   ?_init_ds1307 0001                          _ADCS0 7E00  
                        _ADCS1 7E01                          _ADCS2 7E02                          ?_main 0001  
                 ?_read_ds1307 0001                          _ACKEN 7E2C                          _ACKDT 7E2D  
                        _BCLIF 7D0B                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                __end_of___awdiv 20F0                          STR_10 06D2  
                        STR_11 06C9                          STR_20 0616                          STR_12 06A7  
                        STR_21 067D                          STR_13 06BF                          STR_30 0622  
                        STR_14 065D                          STR_22 064C                          STR_31 0626  
                        STR_23 0699                          STR_15 0616                          STR_32 0626  
                        STR_16 0616                          STR_24 06B4                          _BRG16 7DC3  
                        STR_33 0626                          STR_17 06B4                          STR_25 0629  
                        STR_26 068B                          STR_18 063B                          STR_19 0616  
                        STR_27 066E                          STR_28 06DB                __end_of___awmod 21A0  
                        STR_29 0601                          ?_puts 0007                ___awdiv@divisor 0003  
              __end_of___lwdiv 2332                   ?_init_config 0001                ___awdiv@counter 0005  
                        _VCFG0 7E0C                          _VCFG1 7E0D                          _RCREG 0FAE  
                        _SENDB 7D63               ?_calculate_speed 0008                          _SPBRG 0FAF  
                        _PORTB 0F81                          _PORTD 0F83                          _TRISB 0F93  
                        _TRISC 0F94                          _TRISD 0F95                          _SSPIF 7CF3  
                        _TXREG 0FAD      write_external_eeprom@data 0009      write_external_eeprom@wait 000A  
                        _field 004B            _check_matrix_keypad 1112                          _speed 0049  
                        _putch 2714                          tablat 0FF5                          puts@s 0007  
                        status 0FD8               init_ds1307@dummy 000B             reading_eeprom@add2 000B  
                   _i2c_no_ack 27B6                __initialization 2400                 ?_i2c_rep_start 0001  
       ?_write_external_eeprom 0009                   __end_of_main 1112           ?_check_matrix_keypad 0001  
                 __end_of_puts 24BE                  main@delay_175 0025                  main@delay_185 0037  
                main@delay_178 002F               __end_of_i2c_idle 277E               __end_of_i2c_read 278A  
             ??_reading_eeprom 0009               __end_of_i2c_stop 27AE                         ??_main 0013  
                       ??_puts 0009                  __activetblptr 0002            __end_of_i2c_rx_mode 27A6  
                       _ADCON0 0FC2                         _ADCON1 0FC1               read_switches@key 005D  
       ??_read_external_eeprom 0002                         _ADRESH 0FC4                         _ADRESL 0FC3  
             ___awdiv@dividend 0001                         ?_putch 0001                         _GODONE 7E11  
                 _write_ds1307 26C2                         _SSPADD 0FC8                         _TRISC3 7CA3  
                       _TRISC4 7CA4                         _TRISC6 7CA6                         _TRISC7 7CA7  
                       _TRISD7 7CAF                         _SSPBUF 0FC9          ??_check_matrix_keypad 000F  
             __end_of_get_time 2400                         ___wmul 265C                      ??___awdiv 0005  
                    ??___awmod 0005                         _detail 0100                      ??___lwdiv 0005  
             __end_of_init_i2c 275A               __end_of_init_adc 26C2               __end_of_read_adc 254C  
                       clear_0 2438                         clear_1 2444                         clear_2 2450  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         isa$std 0001  
             __end_of_scan_key 1F2A                ___awmod@counter 0005                         main@it 002D  
                 __pdataCOMRAM 005E                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                  _download_flag 0083  
             ??_writing_eeprom 000D                     __accesstop 0060        __end_of__initialization 2456  
                ___rparam_used 0001                ??_i2c_rep_start 0001                    ?_i2c_no_ack 0001  
          reading_eeprom@index 000F                 __pcstackCOMRAM 0001                   __pidataBANK0 26E0  
                  _i2c_rx_mode 279E                  __end_of_putch 272C              __end_of_i2c_start 27B6  
            __end_of_i2c_write 2796                        ??_putch 0001                     __pbssBANK0 007A  
                   __pbssBANK1 0100                      ?_i2c_idle 0001                      ?_i2c_read 0001  
                    ?_i2c_stop 0001                     _clcd_print 2332                     _clcd_putch 272C  
                   _clcd_write 25CE                     _clear_flag 0081   write_external_eeprom@address 000C  
              read_ds1307@data 0003                        ?___wmul 0001              read_switches@once 005E  
                      _ACKSTAT 7E2E                     _flag_count 003F                        _SSPCON1 0FC6  
                    ?_get_time 0001                  _read_switches 2248                     ??_i2c_idle 0001  
                   ??_i2c_read 0001                     ??_i2c_stop 0001                      ?_init_i2c 0001  
                    ?_init_adc 0001                      ?_read_adc 0001                      ?_scan_key 0001  
      ??_write_external_eeprom 000A                        __Hparam 0000                        __Lparam 0000  
                      ___awdiv 202C                        ___awmod 20F0                        ___lwdiv 22BE  
                 __psmallconst 0600                        __pcinit 2400                        __ramtop 0600  
                      __ptext0 06FA                        __ptext1 19C4                        __ptext2 2608  
                      __ptext3 265C                        __ptext4 2506                        __ptext5 2460  
                      __ptext6 2714                        __ptext7 26FA                        __ptext8 2682  
                      __ptext9 275A              __end_of_init_clcd 2248                        _message 0060  
            __end_of_init_uart 26A2               ___awmod@dividend 0001                 ?_read_switches 0001  
                   ??_get_time 0004           end_of_initialization 2456                     ??_init_i2c 0001  
                   ??_init_adc 0001                  __Lmediumconst 0000                     ??_read_adc 0003  
                   ??_scan_key 0001                    ?_clcd_print 0007                    ?_clcd_putch 0009  
                  ?_clcd_write 0001                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc2 0FDE                main@adc_reg_val 001B  
                    _PORTBbits 0F81                read_adc@channel 0007                  i2c_write@data 0001  
              read_adc@reg_val 0005    __end_of_check_matrix_keypad 19C4       read_external_eeprom@data 0003  
                 ??_i2c_no_ack 0001       reading_eeprom@main_index 000D                   ?_i2c_rx_mode 0001  
               __end_of___wmul 2682                  __pidataCOMRAM 27BC            start_initialization 2400  
              ??_read_switches 0001                      _i2c_start 27AE                      _i2c_write 278A  
           __end_of_i2c_no_ack 27BC              ??_calculate_speed 000A          __end_of_i2c_rep_start 279E  
                     ??___wmul 0005                  ??_init_ds1307 000B                    __pdataBANK0 0060  
                ??_read_ds1307 0002    read_switches@detection_type 0001                  ??_init_config 000C  
                  __pbssCOMRAM 003F                     ?_i2c_start 0001                     ?_i2c_write 0001  
             ___lwdiv@dividend 0001  __end_of_write_external_eeprom 25CE     calculate_speed@adc_reg_val 0008  
                     ?___awdiv 0001                       ?___awmod 0001             read_ds1307@address 0002  
                     ?___lwdiv 0001                      _clock_reg 007A                    __smallconst 0600  
          __end_of_init_ds1307 2506            __end_of_read_ds1307 265C               ___lwdiv@quotient 0005  
                    _init_clcd 21A0            __end_of_init_config 2714                      _init_uart 2682  
                    _menu_flag 0041                  ?_write_ds1307 0009                 ___wmul@product 0005  
  read_external_eeprom@address 0002                   ??_clcd_print 000A                      _save_flag 0085  
                 ??_clcd_putch 000A     __end_of_init_matrix_keypad 276C                   ??_clcd_write 0002  
                    _time_flag 0087                      _view_flag 0045          clcd_write@control_bit 0001  
            ___wmul@multiplier 0001                      main@delay 001D                 _reading_eeprom 19C4  
                  ??_i2c_start 0001             __end_of_clcd_print 239E                    ??_i2c_write 0001  
           __end_of_clcd_putch 2744             __end_of_clcd_write 2608                     ?_init_clcd 0001  
                   ?_init_uart 0001                      copy_data0 2414                 ??_write_ds1307 000A  
                     _i2c_idle 276C                       _i2c_read 277E                       _i2c_stop 27A6  
                     __Hrparam 0000                       __Lrparam 0000   __end_of_read_external_eeprom 2632  
                  _init_ds1307 24BE                    _read_ds1307 2632         __end_of_reading_eeprom 1E22  
                  _init_config 26FA            write_ds1307@address 000A                ___lwdiv@divisor 0003  
              ___lwdiv@counter 0007                       __ptext10 2744                       __ptext11 24BE  
                     __ptext20 272C                       __ptext12 21A0                       __ptext21 2332  
                     __ptext13 26A2                       __ptext30 27AE                       __ptext22 1112  
                     __ptext14 239E                       __ptext31 276C                       __ptext23 1F2A  
                     __ptext15 2632                       __ptext32 2248                       __ptext24 258E  
                     __ptext16 2796                       __ptext33 1E22                       __ptext25 20F0  
                     __ptext17 277E                       __ptext34 25CE                       __ptext26 202C  
                     __ptext18 279E                       __ptext35 254C                       __ptext27 26C2  
                     __ptext19 27B6                       __ptext36 22BE                       __ptext28 278A  
                     __ptext29 27A6                _calculate_speed 254C                       _get_time 239E  
                     _init_i2c 2744                       _init_adc 26A2                       _read_adc 2506  
                     _scan_key 1E22                 _writing_eeprom 1F2A                       isa$xinst 0000  
              ?_reading_eeprom 0001                      putch@byte 0001                    ??_init_clcd 0003  
        __end_of_read_switches 22BE                    ??_init_uart 0001         __end_of_writing_eeprom 202C  
         __end_of_write_ds1307 26E0                   _settime_flag 0043        __end_of_calculate_speed 258E  
       check_matrix_keypad@key 0012               write_ds1307@data 0009           _read_external_eeprom 2608  
              ?_writing_eeprom 0001  
